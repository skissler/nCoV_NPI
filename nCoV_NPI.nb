(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3966295,      75156]
NotebookOptionsPosition[   3942373,      74742]
NotebookOutlinePosition[   3942709,      74757]
CellTagsIndexPosition[   3942666,      74754]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Set parameter values and define functions: ", "Subtitle",
 CellChangeTimes->{{3.7933924736210012`*^9, 
  3.793392483595557*^9}},ExpressionUUID->"09369701-a40a-4536-80c3-\
b53fcc12cca7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Seasonal", " ", "forcing"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"beta", "[", 
     RowBox[{
     "t_", ",", "amplitude_", ",", "baseline_", ",", "phival_", ",", 
      "gammaval_"}], "]"}], ":=", 
    RowBox[{"gammaval", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"amplitude", "/", "2"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "*", "Pi", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", "phival"}], ")"}], "/", "52"}]}], "]"}]}], "+", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{"amplitude", "/", "2"}], "+", "baseline"}], ")"}]}], 
      ")"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pC", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", "0.3", ")"}], "*", 
      RowBox[{"(", "0.044", ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "needing", " ", "critical", " ", "care"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pH", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", "0.7", ")"}], "*", 
      RowBox[{"(", "0.044", ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "hospitalization", " ", "but", " ", "not", 
     " ", "critical", " ", "care"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pS", " ", "=", " ", 
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{"pC", " ", "+", " ", "pH"}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Probability", " ", "of", " ", "not", " ", "needing", " ", "care"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nuval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"4.6", "/", "7"}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Rate", " ", "of", " ", "progressing", " ", "to", " ", "infectiousness"}]
      , "*)"}], "\[IndentingNewLine]", 
    RowBox[{"gammaval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"5", "/", "7"}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Rate", " ", "of", " ", "losing", " ", "infectiousness", " ", "or", " ", 
      "going", " ", "to", " ", "the", " ", "hospital"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"deltaHval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"8", "/", "7"}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Rate", " ", "of", " ", "leaving", " ", "hospital", " ", "for", " ", 
      "those", " ", "not", " ", "going", " ", "to", " ", "critical", " ", 
      "care"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"deltaCval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"6", "/", "7"}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Rate", " ", "of", " ", "leaving", " ", "hospital", " ", "and", " ", 
      "going", " ", "to", " ", "critical", " ", "care"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"xiCval", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"10", "/", "7"}], ")"}]}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Rate", " ", "of", " ", "leaving", " ", "critical", " ", "care"}], 
     "*)"}], "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
    RowBox[{"amplitude", " ", "=", " ", "0.6"}], ";", " ", 
    RowBox[{"(*", "0.6", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"baseline", " ", "=", " ", "1.4"}], ";", " ", 
    RowBox[{"(*", "1.4", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"phival", "=", " ", 
     RowBox[{"-", "3.8"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kappaval", " ", "=", " ", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"importtime", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"31", "+", "29", "+", "11"}], ")"}], "/", "7"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"importlength", " ", "=", " ", "0.5"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ptest", " ", "=", " ", "0.05"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"probability", " ", "that", " ", "a", " ", "non"}], "-", 
      RowBox[{"hospitalized", " ", "case", " ", "gets", " ", "tested"}]}], 
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"tmax", " ", "=", " ", 
     RowBox[{"5", "*", "52"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotwindow", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "64"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotwindowlong", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"52", "*", "2.5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fs", " ", "=", " ", "18"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsz", "=", "400"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"seasonality", " ", "=", " ", "1"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7933824016469603`*^9, 3.793382433659927*^9}, {
   3.793392485521379*^9, 3.793392487521698*^9}, {3.79339263520496*^9, 
   3.793392714713307*^9}, {3.793393907287566*^9, 3.793394084370824*^9}, {
   3.793394124891756*^9, 3.793394206023793*^9}, {3.793394441118215*^9, 
   3.793394499802842*^9}, {3.793395056647203*^9, 3.793395072470455*^9}, {
   3.793395198721662*^9, 3.793395223075577*^9}, {3.793395308028611*^9, 
   3.793395309601819*^9}, {3.793395347946869*^9, 3.7933953670198517`*^9}, {
   3.7933954298851843`*^9, 3.7933954353875437`*^9}, 3.793395884942059*^9, {
   3.793396053807115*^9, 3.7933960594453506`*^9}, 3.793396128405074*^9, {
   3.793396161221387*^9, 3.7933961906697693`*^9}, 3.793396465160309*^9, {
   3.793396504452037*^9, 3.793396508265297*^9}, {3.793397487135983*^9, 
   3.793397487468416*^9}, {3.793397550483906*^9, 3.793397645934012*^9}, {
   3.793397959099144*^9, 3.793397965523966*^9}, {3.793398010877906*^9, 
   3.793398011155649*^9}, {3.7933981065674*^9, 3.793398113113698*^9}, {
   3.793398152790327*^9, 3.793398153271265*^9}, {3.793400392723693*^9, 
   3.793400405980054*^9}, {3.793435391281775*^9, 3.793435402007841*^9}, 
   3.793435658448827*^9, 3.793442193613069*^9, {3.793529326303412*^9, 
   3.793529336159178*^9}, {3.793529752701681*^9, 3.793529753185114*^9}, {
   3.793529799203206*^9, 3.7935299163981953`*^9}, {3.793530266700755*^9, 
   3.793530280587278*^9}, {3.793530881386142*^9, 3.793530927344369*^9}, {
   3.793538235163342*^9, 3.793538260139104*^9}, {3.793628653007725*^9, 
   3.7936286716887293`*^9}, {3.793631355447322*^9, 3.79363135877636*^9}, {
   3.79363511837593*^9, 3.793635121678879*^9}, {3.793640210320211*^9, 
   3.793640212976606*^9}, {3.793717624257094*^9, 3.7937176364463377`*^9}, {
   3.7937181586830263`*^9, 3.7937181600631847`*^9}, {3.79371824819411*^9, 
   3.7937182498865433`*^9}, {3.793719529331539*^9, 3.793719531371969*^9}, {
   3.793801368888749*^9, 3.79380137088395*^9}, {3.7945068973633747`*^9, 
   3.794506899289358*^9}, {3.7945069689090548`*^9, 3.794506975979354*^9}, {
   3.794515007202763*^9, 3.79451503752429*^9}, {3.794515303183168*^9, 
   3.794515304564411*^9}, {3.794568621072503*^9, 3.794568624309305*^9}, {
   3.794568986678349*^9, 3.794568987896283*^9}, {3.794575949964862*^9, 
   3.7945759530774317`*^9}, {3.794578117606739*^9, 3.794578119556025*^9}, 
   3.79457841354583*^9, {3.794579345472109*^9, 3.7945793477511873`*^9}, {
   3.794579472478606*^9, 3.7945794748459587`*^9}, {3.795514175936903*^9, 
   3.795514207835279*^9}, 3.79551617269716*^9},
 CellLabel->
  "In[1126]:=",ExpressionUUID->"5a1edbe4-0fa7-421d-901f-96114b9ddb7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"thresholdprevon", " ", "=", " ", "0.0035"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thresholdprevoff", " ", "=", " ", "0.001"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thresholdprevonmoreICU", " ", "=", " ", "0.007"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thresholdprevoffmoreICU", " ", "=", " ", "0.002"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7938014579218082`*^9, 3.79380146427802*^9}, {
   3.79380152442591*^9, 3.793801535086874*^9}, {3.793801629597786*^9, 
   3.793801629662863*^9}, {3.793801731899493*^9, 3.793801731961862*^9}, {
   3.793910220736038*^9, 3.793910221045713*^9}, 3.794507475956966*^9, {
   3.7945075305721607`*^9, 3.79450753075279*^9}, {3.794568568932837*^9, 
   3.794568570925667*^9}, {3.795515756687696*^9, 3.795515761565593*^9}},
 CellLabel->
  "In[1140]:=",ExpressionUUID->"94b2cc6b-ab47-4d00-a524-1fc506297f14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"beta", "[", 
    RowBox[{
    "t", ",", " ", "amplitude", ",", " ", "baseline", ",", " ", "phival", ",",
      " ", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "52"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795515722849471*^9, 3.795515746989793*^9}},
 CellLabel->
  "In[1144]:=",ExpressionUUID->"0f087dca-103a-46c3-87a7-8d25c808c657"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV2Xk4FG8cAHBJB0lROhCVKwlZu+uI3q9rd5Z0IqWEHOUoUancR5I7He6k
SxH5KXIWkspRciWknEWOIrPu+b39tc/nmZmdd97vNfvsJtvT++15eXh44hfw
8Pz7NGmIyBiq+2+nXlBRfpE/hc6ai4YvMotB3lU1V7L8KHR4gfZol+kdtMNm
mUmqL4XqzPdsqjfNQeeGJfL8vCl0ZcEhrbemZaintpqXfoFCvS1fqypM69HK
BtWPTqcpFKu7MbLM9DsK/Gy/ctVRCg2c13V7Zfob+SwYlLNiUKiBnxS6lvQb
HWNlrPirRqGS5Iws2+7fKPzq7sZQGoWiKlb9WuT2By3+2z2UrUIhmlC//a7w
MbSPL+vssAKFLj0Is/xS/hcpB9ip0SUpJNjUyBpXnkIRouj4r0UUil/3LOo6
3wIw7tc2XN8wj3akKswkEPxQNSXvcMphHo2k6SpF/7cSclamynv/nkPlXKtn
xWtEwamweqzEbg6Z2p4K/rR9PSz80KV56MssOrF3JPPT3Q0gXl/ZLrhjFr3s
P+2wlGcTdJn5CfIkzaBHT22SJfiloS/BrHgx3ww6UBQ+J7tTFkpV8++r2kyj
ox+V+e6byEOwVjrbp3YK/cgMu1K+XwFOihmViMIUolVLMpuCFMFSd99KRs4k
+jqmGGYZrQTVFe3VK+iTiHP0DH9rlQooBj4dLi/iosS3L3inp7bDcc9QBekD
XCSSPy3NP78dyqbkqVf7uCj8vo7hOl5VeEeWvz66l4u8A15fYQqowiEeLfFk
Ey46tuOjoIeYKoQI+wrKEFwk87R/zZCWKgyr5Ova6HBR1i1RxU4vVfCAYcb1
LVwkd9li17CfKlz+EBW+W56Lbnskuc4GqcLra9ZtAnJcFLN3U45YhCqM/6mx
C5HmIncBJcbBZFW4Ha7OuCrJRUxfA1Rfogpbq9lLXq7mojJ7jwMVc6pw5O5C
r/4FXFRSKXhMgZcGppfGax7xcFGB9EOnmMU0CNtM7nKhSJTT1RpgtYIGQnUJ
38lZEqUd3ZkzvZEGMULCFmKTJAo041+uZkCDU9YHmxJHSKRvmFp1L4wGdXUy
ZsEdJIL7Gg0C0TT49Ml2j2s7ibQXNnw9c50GVp3awQfbSEQv55tAyTRI2ELd
VmklkYyOk3RHFg1W3UNpI40k4mMw/Fd/osGyB/fEH9WQqEqmRvPyWjV4MCI5
LFBCos/nniqniauBbV9rjmIxiX5WXZculVKDaCI5yqSIRAInjyyfkFeD0+Ji
CTcKSGSSNfzdTkMNJLZ2jqrkkaiJsTLU4JAaDMXzNSZlk6iLZdayMEkNpJh7
mjl3STQWp1kjlaoGGrcWoag0EvEObCjbcU8NFs+Jvm+8g9cb3v/YI1MNOs7P
7rRNJdGJj54+PcVqEJfbnB+RTKKRg4kyrzvU4MlC77m1cSSaPfHNPVCSDld3
8gjxR5IoZqvYfnIzHew+ZYF9BIlkh0xVneTpUO+wrLYinES7T1eP7ttOB7nd
scMBYSRKPZfnskmPDgLy7dYrQ0mkFxjuUGZPh0y/MyqngkjUol9lSHeiwxGb
PbzfA0nktGiB7KNTdNAuu739APb10PM90Z74eDL9jk4AiXqjbKyPXaVDp0XC
x81+JLqSpH54/gkdzp37HqPsRSKJo+6a7v/RYctaUaX8SzgfJLPW9efRQXLT
OnmE3Zq2+XPdSzokfxZhmF0k0dZHy01T6unwIzSk5JoniWqf95ho/6WDw6Dn
zV1nSWR9XlIpZ5IOBd7tGwY9SDShfkhQZo4OZdKLFl/Fliz+UL1sMQOGn4uR
1e4kOl1eyG5fywCJUsLi2BkSiXyI1r20gwHTkdt3VJ8iEXNB5bEviAErjh5V
8sM+RJ/00TBgwO+aTWcZ2HcSrYvIXQwIP/OaeuBKIiVHVTUPKwaYOccKx7mQ
aG+i/b4GWwbMW6dnmGOfrUs4rerIgCbJkfi12EVqvE9GTzOA4JqfS3EmEcHT
KOMSwIC5484qhU4kclFbol9zmQGkT79HEHa0ww6brWEMmCwWFdqD3VJ7L+Vn
LAP0XlXrD54k0RT1uZgdx4DCey7fCrEl1ATbHiYxIHJwuj4M+3jC2TX29xlw
qHJl/nbskNpH9MpHDDD2+u/xIuwMqmO/dBYDLne4jbefINFve8PorjwGfKm5
eDUC25e2ZqnVWwZAaXfZnCOJ7tobyZXW4Ocpf+zwFftNvK+BRD0Detd3277E
FqT6/dtaGSDL+94qGFuFJp6q+ZUBBhVXrE5i77ffUxrfxYAXjNbne7ATal5M
mQ8yQMbLyH4jdsn8r7X5Iwxw8L/4SgD7u+pGpug4A8JSTd1IBxIttDc1Pctl
AC2oy7MHWy4+1L1xhgE252VbPmEb1ZTE0HiY4GUnG16O7Tr/O/saHxMMvvTd
ysWOUZWt+72UCV95nKfuYz+3O/Rrz3ImVKUX5MZjf46L5H8qzIRWrYaKSOzp
6nJ5oTVM4LwtUgjGlpyfMHQVY0LG9NkfXti6qlvtaiWZ0L154exZbDs7q0BF
aSaoKTs6nsYOjYu9EybPBI3MuwrO2JnVVS8HFPH57/L1TmB/mJvuILYz4aL5
/VwH7LHtKjPpdCbcfu188Z9F7Y6vX6LJBGLj8jhHbI24OHUHHSa8kQhd5oR9
pLrG7I0uE4r4O1pcsf3mKA8ZFhNkW5dMuWPf3U6PDTJigsV6AfeL2FXHT+R0
72YCL/VdNwB74FbyB90D+HzLsBNh2JtLxFvMDjJh7Y318jewD3clfj1pyYSw
ZzwrU7FjF4v1+RxjgvEqHelM7GrFhKFrx5lQUFljXYDNu2/d3weOTCiJefyu
ClvrfNxMoTMTmrgNh1uwM8puCnR7MGGBytTcJHZ332oR0pMJ/TeHhQRxvMWW
3Vgv4M0E3zcSRv/yIcwsdgstmAnvoteiXdgVl4S3s0KZ8NundfI49nRqjPrh
CHy/9pcd3thOg1GswBtMeO3Wszn3X76uENp9K54JrILVlz9gt9EjzTKSmcAT
s094CNvIL9yu4T4T/P7Wp2/F+R54X8Cl/xETYnbz5RpjF72/6jH9hAlujTL9
rtiKq0MDN+cxwbpjWW0etp3mkjBmIROmBst8/tVPslXINaNSJlzQhEO8uL4E
HwffcX/DhLJoz8gD2EM6AS8rmpkgJfN0YCGuZ5njPFUtX5jwWfn2Txr2kVC/
usGvTDAS5RM+jl3b4NMh0s8ED4dFnVXYWY6Xpm1JJkT1BTsm4/7RHzG1wHMa
r/d6Y04TtmTuBf7weSYczFCTFsL9Jmr2/Lpni9UhcW40MBj71DUP5sK16pDf
W7bND/evh/ljOmvF1eGRF19pGXZn+xlDRSl1qKS6zi3E/W63nJvpAXl1SCtQ
sInAVi52cb+nrg6Bkaslnpwm0Wivfba+hTpsKc5ZJY37a8alHXeeHlGH946y
bF9sh5XCseI26rCy9kdzG3bnjpJz4yfVgZ7xiy8e9+faWBGde17qMHlr/MHm
cyR6BK9qeFPVIWJnZ9uFC3h/W26UnrqnDgYO43kD2FIuTk/b0tXBRCFg0BLP
h1txotdzc/D1BUHHDPD8uDzifNi2Qh3+THidk/UmkW3yuoHyPnVozcmibfHH
+0MbaVMaxMd1lW5mY395+7o2YUQdrF8M72bi+bV3/FTOGa467Jy4+ZaD5xsy
euO5iV8DKjuU3/sH4/46eWZxwDYN8E1KHFC+ivvxgRpp8NCAp8ZSLmHX8X62
/5q39tSAIs+QZJUbJPI8LtgW4KUBTpd3jTdjr/MwiXkdpAGtLntWyd3C8yX2
4yzrhga4eMeta4onUUd9Y7NJngZYe18UcbyN68Ok44olVwP8Pb+FOGaQKLd5
1tZ7RgMKy1yUVDNJFHR0w84USgPqT6b+ncGWcbX627lEEyxebe29kUUi+4jv
1rbrNOHUAn29phz8PlPdq3lSUxPKLdtrQ1+QaJg9/Ou8lyZsqBW78/YNiXbp
Llkc5KcJehqHiZwqEj3R2rQxOkgTLv46QyW8xfWlZGaaHq4J5H6jBLf3+PtE
Sks+J2lCiZr7ua11eL1fIyI1SjTh7KLjKfVNeJ57bFOZntUE0+wqwb5eElWm
Orv7+GpBqYtx2salXJTO33G+K1ALCnY7+9rxc1GYxy4vwytasGDplSuPBbho
L1speHmMFlwt1pdQX85F7SMjN1PStCClpdjQWoSLxnTcC0srtYC9vIs1KMFF
Gzsu8MwL7IC9RaW2bTQu8loXEuUbtwPSe75OrbblIts1R+cKU7SBUcdKC3/D
RQqM+gW/C3Xgz66ujLMwiXJepFZO1O+Eisvjm02rJpHjK8U2RjMC/eqb70d3
TSFq/LFegSfAmNvzrI0/plCPUXK5+wzAgHtfk6v3NEpvLJG66a0Lq3e/dQ8X
nkHtLpnvni/Vg6xEmRWtz2ZQOjGZeCZcDxyOnFA34cyiHvqqAsX1+mAwulH4
Yv8senE8Yj4wRR8eDXUvMHCfQ86VajJ6UgYQckiZljY2h6IZj2/MZxpA2eBK
r94z88h4wFvZQsUQVOTu6Pq3z6MjbivCrqkaQurvGTfFr/PIhZvWV61mCLOC
dteaO+dR1KK3yToahqC2xfWeXPc8qt8kvExa1xA6oqn54p/zyPzwgx/D+w0h
O2L51mcT88impu5O0HlDOBHhtqJeiEKeWZKrnpYawocteVKZOhTaO6wk1PnK
EPiiNAKXIgptUdLhX15hCC7j+yrtgEKtTywppypDkNv+um+9PoU0nsT/kvto
CJvl110/T1BoOkOk8vZ3Q3i50NJgaj+FfB4tPhe1kAXsje4XNjlSyPynqFvp
IhZUDk2tPXyCQspbZJ2HlrBA+eqt8GsnKdSZrm9jJMiCsPvPhmedKbQz3d9k
sSgLHn0WvfHGjUI8D6dlfeVY8PHIPinJSxQKujfS4sphATzMGx0Ip5DDkXss
T2MWRCrxCgxGUIgQtcj3N2HBQxXPNQORFBK6Un7z+j4WtOX38PVG49+jTjdM
Cw+xYEv6atW66xR6oqrVwOfEgiI9iViXJAo1v7pclxTGgr3XfTu/PqZQwQUt
nQcRLJBLFa8pzqBQourok+woFiTHpN+Nz6SQ9T2LiPJYFtw8li+8J4tCgyGK
xj8SWfCHp38gO4dC8yaf3tEyWSC+bIOZ1gsKyXdIVL6vYcGPOk6h72sK7aqb
3ULVsSDlSJ8Zp5JCbi87Iun1LLDyu/hA5A2+/53kg6lNLMj3eXgkrYpCRvYS
v85+ZYG5UJ/M0/cUchkRF9k4yoJPVkVD4R8pFPNt5rzZHxY4VtXd1q2nUF59
e3vYOP7+djceEns+N+nBBJcF2X3xnw43UCjaU1yzhocNsmYDD1Y3UyiXR9z6
vAgbVk9E/iLaKNTyZ7oyczUbtu218BvAnu5uU+haw4Y/rMevQtsppP8mcdxY
nA3vxhQMX3dQqOmq2JVNMmzI+PbWass3CnFFxLJrGWwYWF3+MLeHQtqy62c3
H2LDcNnY6apfFHKOvt1Ms2RDbnW2F30I7++U9FO9o2wQqtK2TMPm1inb2tqw
IbzY9qbnMF7feYN3aSfZYLDu75joKN7Pd6dvbLzEhiPGy3XExnC+0SZct3uz
4XvPt4vnsIOT8UFfNqQMkaEfsbvdLk8fC2TDnS0JG/zHKZS8Psk6NYwNdg92
Szb+pZCIc9U2ySQ2KDw/7wxcCuk2Gy9WTmGD9+bCilBsN/Tpm04qG3JOzA1+
xK5b1RF79B4brkoYZh+epFBoyZ/J5Ew2uHP/ztlMUShfzrPhSRYbin45tt/B
7ouZzSx5yoaW5INXO7H17Jcc63jGBiZyMzefptDc8g1vxEvY8N5w6Jn6DIW2
Xbh7W/ElGyIaHq1yxT7cLX9hRxkbRj6f1k/DLsinKVpWsqHh9YDI4lkKuR8j
riXWsiG2n+5Wjp32vs4p4wMbYkYGdw9j16sdMCiqZ0P30l1za+copLTUivul
iQ1xR/rencT+meNxdP1XNuyzsRKjsDsbz7VIfmPDuuqjNRvncXxJzz0yXTg+
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
57eq
       "]]},
     Annotation[#, "Charting`Private`Tag$68316#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 51.99999893877551}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.795515735682119*^9, 3.795515769921422*^9}, {
  3.795516174108653*^9, 3.795516181836616*^9}},
 CellLabel->
  "Out[1144]=",ExpressionUUID->"b31c4cd5-8bef-483e-9ebc-3bb0a3dd5a3b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["No-intervention simulation, with seasonality:", "Subtitle",
 CellChangeTimes->{{3.793395168019508*^9, 3.793395170777523*^9}, {
  3.793398146170188*^9, 3.793398149145178*^9}, {3.793445037258872*^9, 
  3.7934450378580303`*^9}, {3.7955163875149117`*^9, 
  3.795516397669969*^9}},ExpressionUUID->"a4f7508f-523d-4045-82a5-\
318b8ae8136a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sols", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"beta", "[", 
            RowBox[{"t", ",", " ", 
             RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
             RowBox[{"baseline", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "seasonality"}], ")"}], "*", 
               "amplitude"}]}], ",", " ", "phival", ",", " ", "gammaval"}], 
            "]"}]}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], "  ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.793393975597365*^9, {3.793394210082335*^9, 3.793394360866097*^9}, {
   3.7933943926412563`*^9, 3.7933944391236134`*^9}, {3.7933945094520817`*^9, 
   3.793394738722806*^9}, {3.793394808266222*^9, 3.793394861129685*^9}, {
   3.793394951017354*^9, 3.793394956094945*^9}, {3.79339499041776*^9, 
   3.793394990662025*^9}, {3.793395080312813*^9, 3.793395109323592*^9}, {
   3.7933952060179157`*^9, 3.793395206368547*^9}, {3.793396066219895*^9, 
   3.7933960962393093`*^9}, {3.793397904229679*^9, 3.793398005395545*^9}, 
   3.793398052464053*^9, 3.793400137861621*^9, {3.793530462856567*^9, 
   3.793530530889868*^9}, {3.793530626757448*^9, 3.793530725718416*^9}, {
   3.793530784714653*^9, 3.793530791474154*^9}, {3.79353093264467*^9, 
   3.793530933423745*^9}, {3.7935309675735083`*^9, 3.7935309899443083`*^9}},
 CellLabel->
  "In[1145]:=",ExpressionUUID->"ba6fb5f4-d3a0-46d3-8a1e-63954e17221f"]
}, Closed]],

Cell[CellGroupData[{

Cell["No-intervention simulation, no seasonality:", "Subtitle",
 CellChangeTimes->{{3.793395168019508*^9, 3.793395170777523*^9}, {
  3.793398146170188*^9, 3.793398149145178*^9}, {3.7933997417687273`*^9, 
  3.7933997437567596`*^9}, {3.7955163902614326`*^9, 
  3.795516392302372*^9}},ExpressionUUID->"ea5ca911-5e82-4a81-92af-\
30b9d9768014"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"beta", "[", 
            RowBox[{"t", ",", " ", 
             RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
             RowBox[{"baseline", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "seasonality"}], ")"}], "*", 
               "amplitude"}]}], ",", " ", "phival", ",", " ", "gammaval"}], 
            "]"}]}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.793393975597365*^9, {3.793394210082335*^9, 3.793394360866097*^9}, {
   3.7933943926412563`*^9, 3.7933944391236134`*^9}, {3.7933945094520817`*^9, 
   3.793394738722806*^9}, {3.793394808266222*^9, 3.793394861129685*^9}, {
   3.793394951017354*^9, 3.793394956094945*^9}, {3.79339499041776*^9, 
   3.793394990662025*^9}, {3.793395080312813*^9, 3.793395109323592*^9}, {
   3.7933952060179157`*^9, 3.793395206368547*^9}, {3.793396066219895*^9, 
   3.7933960962393093`*^9}, {3.793397904229679*^9, 3.793398005395545*^9}, 
   3.793398052464053*^9, {3.79339976128504*^9, 3.793399764753969*^9}, {
   3.7935310135999317`*^9, 3.793531037556343*^9}},
 CellLabel->
  "In[1146]:=",ExpressionUUID->"88064f36-9f9d-46d9-ad37-7457a57111be"]
}, Closed]],

Cell[CellGroupData[{

Cell["Scenarios with seasonality: ", "Subtitle",
 CellChangeTimes->{{3.793399223691386*^9, 3.79339922746588*^9}, {
  3.793399745478477*^9, 
  3.7933997476104813`*^9}},ExpressionUUID->"024317b3-0a26-4198-968a-\
6d33998fd1ea"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, for 4 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9},ExpressionUUID->"05ef75bf-e366-441d-81aa-\
fd19fa802da3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2x4s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793531070703244*^9, 3.7935311206105127`*^9}},
 CellLabel->
  "In[1148]:=",ExpressionUUID->"81c1dc04-ab28-4ea8-bcd0-7941138ef694"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, for 4 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.7933992329693327`*^9, 
  3.7933992555778427`*^9}},ExpressionUUID->"c85512a9-75ea-4418-bba8-\
d87efddbae4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2x4s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793399315213257*^9, 3.7933993165674553`*^9}, 
   3.7935312655774603`*^9},
 CellLabel->
  "In[1153]:=",ExpressionUUID->"4bcf1f91-9925-489b-b63a-9307e43f42a2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, for 4 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.7933992329693327`*^9, 
  3.79339925716903*^9}},ExpressionUUID->"2e5c5d69-9724-44e1-82d1-\
b132c9c01de5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2x4s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993218469267`*^9, 3.793399323343088*^9}, 
   3.793531275552277*^9},
 CellLabel->
  "In[1158]:=",ExpressionUUID->"ee82f780-97c3-4c01-ae85-40c010630f90"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, for 8 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{3.7933992329693327`*^9, 
  3.7933992683652267`*^9},ExpressionUUID->"04c16f93-b29f-4d43-9c6e-\
dc8b760aefd1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2x8s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793399333176015*^9, 3.7933993347797613`*^9}, 
   3.793531280544818*^9},
 CellLabel->
  "In[1163]:=",ExpressionUUID->"b1ef5604-6e55-42c5-9b9d-cb93c6d44b73"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, for 8 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.7933992329693327`*^9, 
  3.7933992697381487`*^9}},ExpressionUUID->"6e5527e8-ffd5-4b16-b468-\
244d31af06a8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2x8s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79339933971128*^9, 3.7933993447259073`*^9}, 
   3.7935312868547993`*^9},
 CellLabel->
  "In[1168]:=",ExpressionUUID->"fd1d0547-3dd7-4337-a8b8-0b9931250d1f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, for 8 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.7933992329693327`*^9, 
  3.793399271142034*^9}},ExpressionUUID->"6ccaf0a7-f884-4658-9642-\
fb889c6993f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2x8s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993510017*^9, 3.793399355489079*^9}, 
   3.793531293238635*^9},
 CellLabel->
  "In[1173]:=",ExpressionUUID->"6980337d-3146-45d3-93ee-f080f5712622"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, for 12 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399272105081*^9, 
   3.7933992721489077`*^9}},ExpressionUUID->"ded59da8-cc4e-4041-88b5-\
db4d32a8880f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2x12s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793399361183338*^9, 3.793399362533517*^9}, 
   3.793531299687305*^9},
 CellLabel->
  "In[1178]:=",ExpressionUUID->"04de3360-ba55-42a0-bc98-dbc47a297052"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, for 12 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.7933992329693327`*^9, 
  3.7933992730731287`*^9}},ExpressionUUID->"8efd6efa-f4ce-4410-90ec-\
bcbd5d9e2898"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2x12s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993681391363`*^9, 3.79339937205424*^9}, 
   3.793531305640201*^9},
 CellLabel->
  "In[1183]:=",ExpressionUUID->"9794c8ee-4159-4fd6-872c-71463863521f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, for 12 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.7933992647742147`*^9, 
   3.79339927434074*^9}},ExpressionUUID->"df1a1acd-af92-4dbf-8f85-\
c0043deb7189"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2x12s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79339937659689*^9, 3.7933993810271587`*^9}, 
   3.793531312020275*^9},
 CellLabel->
  "In[1188]:=",ExpressionUUID->"478a289f-1414-4ac5-aa34-e04a7a97d04c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, for 20 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.7933992814335947`*^9, 
   3.793399281502411*^9}},ExpressionUUID->"d0f8cafb-2f38-4f37-877e-\
21307b91535d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "20"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2x20s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993880864887`*^9, 3.7933993917177887`*^9}, {
   3.793401945007869*^9, 3.793401947831801*^9}, 3.7935313198762913`*^9},
 CellLabel->
  "In[1193]:=",ExpressionUUID->"2f6f88ed-7b95-49c9-9ec6-72caedaffcea"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, for 20 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399277678028*^9, 
   3.793399283469496*^9}},ExpressionUUID->"204117f0-e4f0-42a4-a90b-\
350ce69ba988"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "20"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2x20s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993962656393`*^9, 3.793399401506068*^9}, {
   3.793401953401556*^9, 3.793401955734735*^9}, 3.793531326118956*^9},
 CellLabel->
  "In[1198]:=",ExpressionUUID->"a165d29f-86f9-4a29-9763-4e8d9274704e"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, for 20 weeks, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399279561842*^9, 
   3.793399284879805*^9}},ExpressionUUID->"e42c4072-d7c6-4743-85d9-\
cda42d137711"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "20"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2x20s", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933994062015963`*^9, 3.79339941354417*^9}, {
   3.793401961576688*^9, 3.7934019640987597`*^9}, 3.793531331811985*^9},
 CellLabel->
  "In[1203]:=",ExpressionUUID->"94cc99de-7c55-4fe3-9748-4713a8f63f4b"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, always on, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.7933992814335947`*^9, 3.793399281502411*^9}, {
   3.794563540767796*^9, 
   3.7945635477547703`*^9}},ExpressionUUID->"509a499f-f5c1-45ab-b507-\
a9d9be8925dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "Infinity"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2xinfs", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993880864887`*^9, 3.7933993917177887`*^9}, {
   3.793401945007869*^9, 3.793401947831801*^9}, 3.7935313198762913`*^9, {
   3.794563565654498*^9, 3.7945635736030283`*^9}, {3.794563604364476*^9, 
   3.794563604751375*^9}},
 CellLabel->
  "In[1208]:=",ExpressionUUID->"02a6e6ae-a453-4721-acec-24f84ed522eb"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, always on, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399277678028*^9, 3.793399283469496*^9}, 
   3.794563552857114*^9},ExpressionUUID->"7ca84a9c-07ca-40c5-8990-\
1b691ae25b40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "Infinity"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2xinfs", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993962656393`*^9, 3.793399401506068*^9}, {
   3.793401953401556*^9, 3.793401955734735*^9}, 3.793531326118956*^9, {
   3.794563583248794*^9, 3.794563600605731*^9}},
 CellLabel->
  "In[1213]:=",ExpressionUUID->"ce3a11cf-1b0c-45ab-9424-ab89094c8831"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, always on, w/seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399279561842*^9, 3.793399284879805*^9}, 
   3.7945635553668737`*^9},ExpressionUUID->"b2f4e040-e7f2-4a72-bd54-\
3db2212ea766"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "Infinity"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2xinfs", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933994062015963`*^9, 3.79339941354417*^9}, {
   3.793401961576688*^9, 3.7934019640987597`*^9}, 3.793531331811985*^9, {
   3.79456358910157*^9, 3.794563595418207*^9}},
 CellLabel->
  "In[1218]:=",ExpressionUUID->"67eeafb5-1e95-4496-8f51-f8de08e09fbb"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Scenarios without seasonality:", "Subtitle",
 CellChangeTimes->{{3.793399465012445*^9, 3.793399466532864*^9}, {
  3.793399751722608*^9, 
  3.793399754956258*^9}},ExpressionUUID->"3e535a7d-e664-4981-aaeb-\
fd3f10f12722"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, for 4 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{
  3.793399477540875*^9, {3.793399521439707*^9, 
   3.793399522112132*^9}},ExpressionUUID->"63eaead7-b211-4524-a5a4-\
a2b04cb438cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2x4ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793399492532537*^9, 3.793399494161208*^9}, 
   3.793531410142632*^9},
 CellLabel->
  "In[1223]:=",ExpressionUUID->"969a0574-148c-4c12-a754-5707fd4b2132"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, for 4 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{{3.7933992329693327`*^9, 3.7933992555778427`*^9}, {
  3.793399525594367*^9, 
  3.793399525741004*^9}},ExpressionUUID->"6308fb80-8f71-40c2-8b0a-\
8a08207d77fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2x4ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793399315213257*^9, 3.7933993165674553`*^9}, {
   3.793399545518386*^9, 3.7933995487281237`*^9}, 3.793531416107319*^9},
 CellLabel->
  "In[1228]:=",ExpressionUUID->"53cfedf5-a5c1-4c7e-be2f-976514796433"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, for 4 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{{3.7933992329693327`*^9, 3.79339925716903*^9}, {
  3.793399528205628*^9, 
  3.7933995283740892`*^9}},ExpressionUUID->"dd7901e3-ae40-42b6-a2ed-\
f46d5b5403d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2x4ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993218469267`*^9, 3.793399323343088*^9}, {
   3.7933995573415527`*^9, 3.7933995591570053`*^9}, 3.79339968634774*^9, 
   3.793531421678059*^9},
 CellLabel->
  "In[1233]:=",ExpressionUUID->"d46b915b-9bdb-444d-a584-36186f3fbd95"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, for 8 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{3.7933992329693327`*^9, 3.7933992683652267`*^9, 
  3.793399530922187*^9},ExpressionUUID->"a41136ac-a441-465d-ab5b-\
8941f66569ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2x8ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793399333176015*^9, 3.7933993347797613`*^9}, {
   3.793399564060018*^9, 3.793399565800709*^9}, 3.793531427272615*^9},
 CellLabel->
  "In[1238]:=",ExpressionUUID->"e0593f63-0363-4c9e-a95b-54eca7a055cc"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, for 8 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{{3.7933992329693327`*^9, 3.7933992697381487`*^9}, 
   3.7933995318393707`*^9},ExpressionUUID->"55de51f9-40a0-4f0e-846c-\
0b3e0d3a0241"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2x8ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79339933971128*^9, 3.7933993447259073`*^9}, {
   3.7933995699621553`*^9, 3.7933995714070253`*^9}, 3.793531433299389*^9},
 CellLabel->
  "In[1243]:=",ExpressionUUID->"7bdadf65-b798-4a61-8bd4-cb159234d166"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, for 8 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{{3.7933992329693327`*^9, 3.793399271142034*^9}, 
   3.793399533265662*^9},ExpressionUUID->"db3ac752-069e-44b6-bbe1-\
9bd2b07b6ea1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2x8ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993510017*^9, 3.793399355489079*^9}, {
   3.7933995766752453`*^9, 3.79339957785371*^9}, 3.793531439081506*^9},
 CellLabel->
  "In[1248]:=",ExpressionUUID->"288bc563-3896-4f3d-b6de-08b7031f7146"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, for 12 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399272105081*^9, 3.7933992721489077`*^9}, 
   3.793399534075979*^9},ExpressionUUID->"bf92baa9-f836-4a88-bb7d-\
6caf0aa4db7d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2x12ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793399361183338*^9, 3.793399362533517*^9}, {
   3.793399581956794*^9, 3.793399583491564*^9}, 3.7935314447933826`*^9},
 CellLabel->
  "In[1253]:=",ExpressionUUID->"1665882a-4c99-4a86-8b6c-589772cd9dee"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, for 12 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{{3.7933992329693327`*^9, 3.7933992730731287`*^9}, 
   3.793399535141101*^9},ExpressionUUID->"2c08ad03-8a4f-4462-b4ab-\
7f75d016dea2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2x12ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993681391363`*^9, 3.79339937205424*^9}, {
   3.793399587617723*^9, 3.793399588967922*^9}, 3.793531450505888*^9},
 CellLabel->
  "In[1258]:=",ExpressionUUID->"05bbd0d5-a145-4b0f-9929-a7b3a01a85fc"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, for 12 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{
  3.7933992329693327`*^9, {3.7933992647742147`*^9, 3.79339927434074*^9}, 
   3.7933995359780407`*^9},ExpressionUUID->"f2b2cf96-e44c-4b83-a8ae-\
08d8ae329509"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "12"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2x12ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79339937659689*^9, 3.7933993810271587`*^9}, {
   3.793399594422448*^9, 3.793399595895485*^9}, 3.793531456575253*^9},
 CellLabel->
  "In[1263]:=",ExpressionUUID->"cd6b1e53-d5c7-449a-970f-a8cbe364b27a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, for 20 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{
  3.7933992329693327`*^9, {3.7933992814335947`*^9, 3.793399281502411*^9}, 
   3.793399537074873*^9},ExpressionUUID->"c7bbfab6-d2f8-4b94-b82e-\
1f1427d808b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "20"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2x20ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993880864887`*^9, 3.7933993917177887`*^9}, {
   3.793399600368608*^9, 3.793399601802167*^9}, 3.793531461585596*^9},
 CellLabel->
  "In[1268]:=",ExpressionUUID->"93945525-de21-4008-977e-25436e1cb19a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, for 20 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399277678028*^9, 3.793399283469496*^9}, 
   3.793399537955764*^9},ExpressionUUID->"a978eabe-32e8-42b4-b1b5-\
d34ffa2ae7ed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "20"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2x20ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993962656393`*^9, 3.793399401506068*^9}, {
   3.793399606332426*^9, 3.793399607735317*^9}, 3.793531466994946*^9},
 CellLabel->
  "In[1273]:=",ExpressionUUID->"e779c737-9acd-424a-af4b-b82b1ca78e3f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, for 20 weeks, w/out seasonality:", "Subsection"]], "Subsection",\

 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399279561842*^9, 3.793399284879805*^9}, 
   3.793399538717667*^9},ExpressionUUID->"43fe1cf5-ff02-4f05-aca2-\
34af01ceccef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "20"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2x20ns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933994062015963`*^9, 3.79339941354417*^9}, {
   3.7933996119376993`*^9, 3.79339961337514*^9}, 3.793531472126583*^9},
 CellLabel->
  "In[1278]:=",ExpressionUUID->"13b19e4c-60d2-474d-b0c6-361922fa2557"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission, 2 weeks after \
establishment, always on, w/out seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.7933992814335947`*^9, 3.793399281502411*^9}, 
   3.793399537074873*^9, {3.794563629289771*^9, 
   3.79456362993823*^9}},ExpressionUUID->"7bb3930c-d7cf-4365-adc1-\
b44c655b92fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "Infinity"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20x2xinfns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993880864887`*^9, 3.7933993917177887`*^9}, {
   3.793399600368608*^9, 3.793399601802167*^9}, 3.793531461585596*^9, {
   3.79456364061405*^9, 3.7945636457286043`*^9}},
 CellLabel->
  "In[1283]:=",ExpressionUUID->"5f76aa0e-e647-4741-86f7-16a39279a752"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission, 2 weeks after \
establishment, always on, w/out seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399277678028*^9, 3.793399283469496*^9}, 
   3.793399537955764*^9, 
   3.79456363371795*^9},ExpressionUUID->"93535e75-de2d-49fe-b084-\
93e5e8afcba1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "Infinity"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40x2xinfns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933993962656393`*^9, 3.793399401506068*^9}, {
   3.793399606332426*^9, 3.793399607735317*^9}, 3.793531466994946*^9, {
   3.794563650832695*^9, 3.794563654216235*^9}},
 CellLabel->
  "In[1288]:=",ExpressionUUID->"8f7a4077-3946-40c4-84c4-6fbf782192df"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission, 2 weeks after \
establishment, always on, w/out seasonality:", "Subsection"]], "Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793399279561842*^9, 3.793399284879805*^9}, 
   3.793399538717667*^9, 
   3.794563636152788*^9},ExpressionUUID->"270b7dc3-f8f4-4eb9-8956-\
2d028bbaf592"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npistart", " ", "=", " ", 
   RowBox[{"importtime", " ", "+", " ", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npiend", " ", "=", " ", 
   RowBox[{"npistart", " ", "+", " ", "Infinity"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60x2xinfns", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npistart"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", ">", "npiend"}], ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7933994062015963`*^9, 3.79339941354417*^9}, {
   3.7933996119376993`*^9, 3.79339961337514*^9}, 3.793531472126583*^9, {
   3.794563659188136*^9, 3.79456366464567*^9}},
 CellLabel->
  "In[1293]:=",ExpressionUUID->"0fd67d0f-b031-488c-838d-659f8f33ec05"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Scenarios without seasonality, with brake-pumping", "Subtitle",
 CellChangeTimes->{{3.793441379782955*^9, 3.7934413874126987`*^9}, {
   3.793462250233782*^9, 3.793462253686784*^9}, 
   3.795516402943056*^9},ExpressionUUID->"2d6bdb1d-206c-410f-a512-\
f824a5f77f31"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, {
   3.793441042673633*^9, 
   3.793441058438738*^9}},ExpressionUUID->"f11a4143-2cc7-4361-9e69-\
a56df4613883"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20bpnsprev", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevon"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoff"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.79344106610525*^9}, {3.793441127416815*^9, 
   3.793441127666787*^9}, {3.793441166381007*^9, 3.793441176115615*^9}, {
   3.7934413978587713`*^9, 3.79344139936828*^9}, {3.793462298937964*^9, 
   3.793462325543108*^9}, {3.793462367413435*^9, 3.7934623750809298`*^9}, {
   3.7935317870460787`*^9, 3.793531831644103*^9}},
 CellLabel->
  "In[1298]:=",ExpressionUUID->"5912de60-ccfb-4aca-928a-507dc0c01502"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, 
   3.793441042673633*^9},ExpressionUUID->"5f3408e4-77e7-46d3-87f2-\
a55e567d97d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40bpnsprev", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevon"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoff"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.793441046502714*^9}, {3.793441121159895*^9, 
   3.793441121403966*^9}, {3.793441183647852*^9, 3.793441183999271*^9}, {
   3.793441406294248*^9, 3.793441410591936*^9}, {3.79346230535605*^9, 
   3.793462328720051*^9}, {3.793462378446295*^9, 3.793462385404257*^9}, 
   3.793531850989293*^9},
 CellLabel->
  "In[1301]:=",ExpressionUUID->"ae5e6d7c-444f-4553-a759-7b318b9ea6fd"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, 
   3.793441042673633*^9, 
   3.7934413670396147`*^9},ExpressionUUID->"7dc97490-353a-44ce-947d-\
e70684c21072"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60bpnsprev", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevon"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoff"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.793441046502714*^9}, {3.793441121159895*^9, 
   3.793441121403966*^9}, {3.793441183647852*^9, 3.793441183999271*^9}, {
   3.793441370675906*^9, 3.793441373807287*^9}, {3.793441418586039*^9, 
   3.793441420853744*^9}, {3.793462310972574*^9, 3.793462330950387*^9}, {
   3.7934623894739523`*^9, 3.7934623972261343`*^9}, 3.793531856263274*^9},
 CellLabel->
  "In[1304]:=",ExpressionUUID->"10cca3f5-d542-4b7f-be6a-dd69a2c966fe"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Scenarios with seasonality, with brake-pumping", "Subtitle",
 CellChangeTimes->{{3.793441379782955*^9, 3.7934413874126987`*^9}, {
   3.793462250233782*^9, 3.793462253686784*^9}, {3.7934629832457542`*^9, 
   3.793462983480081*^9}, 
   3.795516405228919*^9},ExpressionUUID->"45878dea-1187-4aaa-b1fb-\
f2ae8c6234f1"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, {
   3.793441042673633*^9, 
   3.793441058438738*^9}},ExpressionUUID->"8ac052f6-1b06-4dd6-a5db-\
73c47999ba0f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20bpsprev", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevon"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoff"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.79344106610525*^9}, {3.793441127416815*^9, 
   3.793441127666787*^9}, {3.793441166381007*^9, 3.793441176115615*^9}, {
   3.7934413978587713`*^9, 3.79344139936828*^9}, {3.793462298937964*^9, 
   3.793462325543108*^9}, {3.793462367413435*^9, 3.7934623750809298`*^9}, {
   3.793462989349134*^9, 3.7934629911537037`*^9}, 3.793531898907114*^9},
 CellLabel->
  "In[1307]:=",ExpressionUUID->"f3e9a1bc-b77b-4e4d-aed8-aed74fa5942e"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, 
   3.793441042673633*^9},ExpressionUUID->"62dcaaad-349e-4d8f-82e1-\
6013f8cf4c29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40bpsprev", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevon"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoff"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.793441046502714*^9}, {3.793441121159895*^9, 
   3.793441121403966*^9}, {3.793441183647852*^9, 3.793441183999271*^9}, {
   3.793441406294248*^9, 3.793441410591936*^9}, {3.79346230535605*^9, 
   3.793462328720051*^9}, {3.793462378446295*^9, 3.793462385404257*^9}, {
   3.793462998776353*^9, 3.7934630002173967`*^9}, 3.7935319042321367`*^9},
 CellLabel->
  "In[1310]:=",ExpressionUUID->"30536401-bc8a-4fc7-b6f4-0c580e504ea3"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, 
   3.793441042673633*^9, 
   3.7934413670396147`*^9},ExpressionUUID->"beb8b6c2-16c4-4401-a7f2-\
c24eaa030c0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60bpsprev", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevon"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoff"}], ",", 
         " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", " ", "npi"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.793441046502714*^9}, {3.793441121159895*^9, 
   3.793441121403966*^9}, {3.793441183647852*^9, 3.793441183999271*^9}, {
   3.793441370675906*^9, 3.793441373807287*^9}, {3.793441418586039*^9, 
   3.793441420853744*^9}, {3.793462310972574*^9, 3.793462330950387*^9}, {
   3.7934623894739523`*^9, 3.7934623972261343`*^9}, {3.79346300484235*^9, 
   3.793463007973894*^9}, 3.793531912445612*^9},
 CellLabel->
  "In[1313]:=",ExpressionUUID->"0445709a-0ac0-46bc-b2a9-a0c75f39b60c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Scenarios with seasonality, with brake-pumping, and a higher threshold \
assuming more ICU beds:\
\>", "Subtitle",
 CellChangeTimes->{{3.793441379782955*^9, 3.7934413874126987`*^9}, {
  3.793462250233782*^9, 3.793462253686784*^9}, {3.7934629832457542`*^9, 
  3.793462983480081*^9}, {3.793463526719618*^9, 3.793463531203787*^9}, {
  3.795516411536346*^9, 
  3.795516412088151*^9}},ExpressionUUID->"e83919e8-8f42-4151-8be8-\
d3788bc09a8f"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, {
   3.793441042673633*^9, 
   3.793441058438738*^9}},ExpressionUUID->"105c4671-e33f-45fc-ae71-\
e4cb02ec4af1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20bpsprevmoreICU", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevonmoreICU"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoffmoreICU"}],
          ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", "npi"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.79344106610525*^9}, {3.793441127416815*^9, 
   3.793441127666787*^9}, {3.793441166381007*^9, 3.793441176115615*^9}, {
   3.7934413978587713`*^9, 3.79344139936828*^9}, {3.793462298937964*^9, 
   3.793462325543108*^9}, {3.793462367413435*^9, 3.7934623750809298`*^9}, {
   3.793462989349134*^9, 3.7934629911537037`*^9}, {3.7934635485045643`*^9, 
   3.793463549525978*^9}, {3.793469000420977*^9, 3.793469001239758*^9}, {
   3.793531997703431*^9, 3.793532033640132*^9}},
 CellLabel->
  "In[1316]:=",ExpressionUUID->"3833431f-2d37-43eb-84e9-c76de8126780"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, 
   3.793441042673633*^9},ExpressionUUID->"5a9c2e41-c8de-4352-8dc4-\
3eaf741f36c2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40bpsprevmoreICU", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevonmoreICU"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoffmoreICU"}],
          ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", "npi"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.793441046502714*^9}, {3.793441121159895*^9, 
   3.793441121403966*^9}, {3.793441183647852*^9, 3.793441183999271*^9}, {
   3.793441406294248*^9, 3.793441410591936*^9}, {3.79346230535605*^9, 
   3.793462328720051*^9}, {3.793462378446295*^9, 3.793462385404257*^9}, {
   3.793462998776353*^9, 3.7934630002173967`*^9}, 3.793463555887508*^9, {
   3.79346900443647*^9, 3.793469005055475*^9}, 3.793532048822589*^9},
 CellLabel->
  "In[1319]:=",ExpressionUUID->"8abf43c7-38ec-4b24-88e5-a62293df0b28"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, 
   3.793441042673633*^9, 
   3.7934413670396147`*^9},ExpressionUUID->"5a9d05af-0055-4cb1-84bb-\
d2e475b8167b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60bpsprevmoreICU", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevonmoreICU"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoffmoreICU"}],
          ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", "npi"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.793441046502714*^9}, {3.793441121159895*^9, 
   3.793441121403966*^9}, {3.793441183647852*^9, 3.793441183999271*^9}, {
   3.793441370675906*^9, 3.793441373807287*^9}, {3.793441418586039*^9, 
   3.793441420853744*^9}, {3.793462310972574*^9, 3.793462330950387*^9}, {
   3.7934623894739523`*^9, 3.7934623972261343`*^9}, {3.79346300484235*^9, 
   3.793463007973894*^9}, 3.7934635609625072`*^9, {3.793469009403984*^9, 
   3.7934690100300627`*^9}, 3.793532054139822*^9},
 CellLabel->
  "In[1322]:=",ExpressionUUID->"e863c40b-8957-4b3e-8759-d73625d7f745"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Scenarios with no seasonality, with brake-pumping, and a higher threshold \
assuming more ICU beds:\
\>", "Subtitle",
 CellChangeTimes->{{3.793441379782955*^9, 3.7934413874126987`*^9}, {
  3.793462250233782*^9, 3.793462253686784*^9}, {3.7934629832457542`*^9, 
  3.793462983480081*^9}, {3.793463526719618*^9, 3.793463531203787*^9}, {
  3.793468450891225*^9, 3.793468451026733*^9}, {3.795516414413809*^9, 
  3.795516415240952*^9}},ExpressionUUID->"b3e97d72-ce3d-492d-ac35-\
dc2b49b6816f"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["20% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, {
   3.793441042673633*^9, 
   3.793441058438738*^9}},ExpressionUUID->"5d94df65-4b13-4800-ab22-\
9cbc3e3101dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol20bpnsprevmoreICU", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevonmoreICU"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoffmoreICU"}],
          ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", "npi"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.79344106610525*^9}, {3.793441127416815*^9, 
   3.793441127666787*^9}, {3.793441166381007*^9, 3.793441176115615*^9}, {
   3.7934413978587713`*^9, 3.79344139936828*^9}, {3.793462298937964*^9, 
   3.793462325543108*^9}, {3.793462367413435*^9, 3.7934623750809298`*^9}, {
   3.793462989349134*^9, 3.7934629911537037`*^9}, {3.7934635485045643`*^9, 
   3.793463549525978*^9}, {3.793468461625984*^9, 3.793468464201023*^9}, {
   3.793469016822146*^9, 3.793469017502356*^9}, 3.793532069936141*^9},
 CellLabel->
  "In[1325]:=",ExpressionUUID->"07ccce30-8004-443c-9806-89f638d3d7fe"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["40% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, 
   3.793441042673633*^9},ExpressionUUID->"1a211dd8-a399-465d-92b0-\
d8e943d3377b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol40bpnsprevmoreICU", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevonmoreICU"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoffmoreICU"}],
          ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", "npi"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.793441046502714*^9}, {3.793441121159895*^9, 
   3.793441121403966*^9}, {3.793441183647852*^9, 3.793441183999271*^9}, {
   3.793441406294248*^9, 3.793441410591936*^9}, {3.79346230535605*^9, 
   3.793462328720051*^9}, {3.793462378446295*^9, 3.793462385404257*^9}, {
   3.793462998776353*^9, 3.7934630002173967`*^9}, 3.793463555887508*^9, {
   3.793468469369824*^9, 3.793468471442174*^9}, {3.793469020576042*^9, 
   3.7934690212254877`*^9}, 3.793532075684738*^9},
 CellLabel->
  "In[1328]:=",ExpressionUUID->"e849e9b8-10c4-4cdb-82bf-f6e20a4f69f3"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["60% reduction in transmission:", "Subsection"]], \
"Subsection",
 CellChangeTimes->{
  3.7933992329693327`*^9, {3.793437443696271*^9, 3.793437444289612*^9}, 
   3.793441042673633*^9, 
   3.7934413670396147`*^9},ExpressionUUID->"0c5bd496-9b9a-4ef7-b229-\
75221cc70fbc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npifactor", " ", "=", " ", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seasonality", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol60bpnsprevmoreICU", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"npi", "[", "t", "]"}]}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Eq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "*", 
          RowBox[{"beta", "[", 
           RowBox[{"t", ",", " ", 
            RowBox[{"seasonality", "*", "amplitude"}], ",", " ", 
            RowBox[{"baseline", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "seasonality"}], ")"}], "*", "amplitude"}]}],
             ",", " ", "phival", ",", " ", "gammaval"}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
            RowBox[{"ICq", "[", "t", "]"}]}], ")"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "*", 
          RowBox[{"Sq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pS", " ", "+", " ", "pH", " ", "+", " ", "pC"}], ")"}], 
          "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ISq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pS", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ISq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RSq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"gammaval", "*", 
         RowBox[{"ISq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"IHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pH", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HHq", "'"}], "[", "t", "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"IHq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaHval", "*", 
          RowBox[{"HHq", "[", "t", "]"}]}]}]}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RHq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"deltaHval", "*", 
         RowBox[{"HHq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ICq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"pC", "*", "nuval", "*", 
          RowBox[{"Eq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"HCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"gammaval", "*", 
          RowBox[{"ICq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"CCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", 
        RowBox[{
         RowBox[{"deltaCval", "*", 
          RowBox[{"HCq", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"xiCval", "*", 
          RowBox[{"CCq", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"RCq", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
        RowBox[{"xiCval", "*", 
         RowBox[{"CCq", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"est", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"npi", "'"}], "[", "t", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", "\[GreaterEqual]", "importtime"}], " ", ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "kappaval"}]}], "]"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{"t", " ", ">", 
          RowBox[{"importtime", "+", "importlength"}]}], ",", " ", 
         RowBox[{
          RowBox[{"est", "[", "t", "]"}], "\[Rule]", "0"}]}], " ", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], ">", "thresholdprevonmoreICU"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", 
          RowBox[{"1", "-", "npifactor"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "<", "thresholdprevoffmoreICU"}],
          ",", " ", 
         RowBox[{
          RowBox[{"npi", "[", "t", "]"}], "\[Rule]", "1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sq", "[", "0", "]"}], " ", "\[Equal]", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"Eq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ISq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RSq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"IHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RHq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"ICq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"HCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"CCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"RCq", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"est", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"npi", "[", "0", "]"}], "\[Equal]", "1"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "Sq", ",", " ", "Eq", ",", " ", "ISq", ",", " ", "RSq", ",", " ", "IHq",
        ",", " ", "HHq", ",", " ", "RHq", ",", " ", "ICq", ",", " ", "HCq", 
       ",", " ", "CCq", ",", " ", "RCq", ",", " ", "est", ",", "npi"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79343745681075*^9, 3.79343749950867*^9}, {
   3.7934398988085203`*^9, 3.793439978221882*^9}, {3.793440080079546*^9, 
   3.79344008237633*^9}, {3.793440128860087*^9, 3.793440129365903*^9}, 
   3.7934403352992573`*^9, {3.793440999081519*^9, 3.7934410007737494`*^9}, {
   3.7934410441673737`*^9, 3.793441046502714*^9}, {3.793441121159895*^9, 
   3.793441121403966*^9}, {3.793441183647852*^9, 3.793441183999271*^9}, {
   3.793441370675906*^9, 3.793441373807287*^9}, {3.793441418586039*^9, 
   3.793441420853744*^9}, {3.793462310972574*^9, 3.793462330950387*^9}, {
   3.7934623894739523`*^9, 3.7934623972261343`*^9}, {3.79346300484235*^9, 
   3.793463007973894*^9}, 3.7934635609625072`*^9, {3.7934684759877863`*^9, 
   3.7934684776885977`*^9}, {3.793469024656068*^9, 3.793469025339758*^9}, 
   3.793532081207529*^9},
 CellLabel->
  "In[1331]:=",ExpressionUUID->"27e9f744-f4b7-4e18-b049-74d9b6914180"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Define key variables for the brake-pump strategies:", "Subtitle",
 CellChangeTimes->{{3.7936320927682333`*^9, 3.793632103734219*^9}, 
   3.7955164230992603`*^9},ExpressionUUID->"fcdf9f99-84b0-4924-997a-\
66b71fe20028"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dateticks", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<Jan\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\\n\\n2020\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "]"}]}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "31", ")"}], "/", "7"}], ",", "\"\<\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"31", "+", "28"}], ")"}], "/", "7"}], ",", "\"\<\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<Apr\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"31", "+", "28", "+", "31", "+", "30"}], ")"}], "/", "7"}], 
       ",", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"31", "+", "28", "+", "31", "+", "30", "+", "31"}], ")"}], 
        "/", "7"}], ",", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], ")"}],
         "/", "7"}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<July\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31"}], ")"}], "/", "7"}], ",", "\"\<\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31", "+", "31"}], ")"}], "/", "7"}], ",", " ", "\"\<\>\""}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<Oct\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31", "+", "31", "+", "30", "+", "31"}], ")"}], "/", "7"}], ",", 
       "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31", "+", "31", "+", "30", "+", "31", "+", "30"}], ")"}], "/", 
        "7"}], ",", " ", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"52", ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<Jan\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"52", ",", " ", 
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\\n\\n2021\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "]"}]}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", "31", ")"}], "/", "7"}]}], ",", "\"\<\>\""}], "}"}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28"}], ")"}], "/", "7"}]}], ",", " ", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}]}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<Apr\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31", "+", "30"}], ")"}], "/", 
         "7"}]}], ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31", "+", "30", "+", "31"}], ")"}], 
         "/", "7"}]}], ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
          ")"}], "/", "7"}]}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<July\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31"}], ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31"}], ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31", "+", "30"}], ")"}], "/", "7"}]}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<Oct\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31", "+", "30", "+", "31"}], ")"}], "/", "7"}]}], ",", 
       "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31", "+", "30", "+", "31", "+", "30"}], ")"}], "/", 
         "7"}]}], ",", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "*", "2"}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<Jan\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "*", "2"}], ",", " ", 
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\\n\\n2022\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "]"}]}], "}"}], ",",
      " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", "31", ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], 
      "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28"}], ")"}], "/", "7"}]}], ",", " ", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}]}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<Apr\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31", "+", "30"}], ")"}], "/", 
         "7"}]}], ",", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31", "+", "30", "+", "31"}], ")"}], 
         "/", "7"}]}], ",", "\"\<\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
          ")"}], "/", "7"}]}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<July\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31"}], ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31"}], ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31", "+", "30"}], ")"}], "/", "7"}]}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<Oct\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.793632640692789*^9, 3.793632685445394*^9}, {
  3.793632744520358*^9, 3.7936328793266993`*^9}, {3.793634107458564*^9, 
  3.793634107565778*^9}, {3.7936341556035767`*^9, 3.7936341972983093`*^9}, {
  3.7936342501744833`*^9, 3.793634377950547*^9}},
 CellLabel->
  "In[1334]:=",ExpressionUUID->"d4d78a62-6b29-4e89-8fec-b38415772c9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"yearticks", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<2020\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "31", ")"}], "/", "7"}], ",", "\"\<\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"31", "+", "28"}], ")"}], "/", "7"}], ",", "\"\<\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", " ", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"31", "+", "28", "+", "31", "+", "30"}], ")"}], "/", "7"}], 
       ",", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"31", "+", "28", "+", "31", "+", "30", "+", "31"}], ")"}], 
        "/", "7"}], ",", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], ")"}],
         "/", "7"}], ",", "\"\<\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31"}], ")"}], "/", "7"}], ",", "\"\<\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31", "+", "31"}], ")"}], "/", "7"}], ",", " ", "\"\<\>\""}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", " ", 
       "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31", "+", "31", "+", "30", "+", "31"}], ")"}], "/", "7"}], ",", 
       "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
          "31", "+", "31", "+", "30", "+", "31", "+", "30"}], ")"}], "/", 
        "7"}], ",", " ", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"52", ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<2021\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", "31", ")"}], "/", "7"}]}], ",", "\"\<\>\""}], "}"}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28"}], ")"}], "/", "7"}]}], ",", " ", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}]}], ",", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31", "+", "30"}], ")"}], "/", 
         "7"}]}], ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31", "+", "30", "+", "31"}], ")"}], 
         "/", "7"}]}], ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
          ")"}], "/", "7"}]}], ",", "\"\<\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31"}], ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31"}], ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31", "+", "30"}], ")"}], "/", "7"}]}], ",", " ", 
       "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31", "+", "30", "+", "31"}], ")"}], "/", "7"}]}], ",", 
       "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31", "+", "30", "+", "31", "+", "30"}], ")"}], "/", 
         "7"}]}], ",", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"52", "*", "2"}], ",", " ", 
       RowBox[{"Rotate", "[", 
        RowBox[{"\"\<2022\>\"", ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", "31", ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], 
      "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28"}], ")"}], "/", "7"}]}], ",", " ", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}]}], ",", 
       "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31", "+", "30"}], ")"}], "/", 
         "7"}]}], ",", "\"\<\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"31", "+", "28", "+", "31", "+", "30", "+", "31"}], ")"}], 
         "/", "7"}]}], ",", "\"\<\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
          ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31"}], ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31"}], ")"}], "/", "7"}]}], ",", " ", "\"\<\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"52", "*", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+", 
           "31", "+", "31", "+", "30"}], ")"}], "/", "7"}]}], ",", " ", 
       "\"\<\>\""}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.793634539483279*^9, 3.793634590732162*^9}},
 CellLabel->
  "In[1335]:=",ExpressionUUID->"d984799f-77bb-473e-b240-ec4ed24ae07c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ar", " ", "=", " ", "0.25"}], ";"}]], "Input",
 CellChangeTimes->{{3.793632109076126*^9, 3.79363211277901*^9}, {
  3.7936331278836393`*^9, 3.793633127947372*^9}},
 CellLabel->
  "In[1336]:=",ExpressionUUID->"5a67e6f2-2673-4edb-863b-eb53beae7f39"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imsz", "=", "700"}], ";"}]], "Input",
 CellChangeTimes->{{3.793633123776762*^9, 3.793633126128378*^9}},
 CellLabel->
  "In[1337]:=",ExpressionUUID->"d5fb40ba-6fa9-43a0-a530-ed2f38654ad2"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Plot incidence with seasonality for fixed-duration interventions and critical \
care:\
\>", "Subtitle",
 CellChangeTimes->{{3.793442141741558*^9, 3.793442155627501*^9}, {
  3.793640279194034*^9, 
  3.793640281743907*^9}},ExpressionUUID->"bad07a47-3663-4ff2-8983-\
51230dc7e381"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"line1char", " ", "=", " ", 
   RowBox[{"{", "Black", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line2char", " ", "=", " ", 
   RowBox[{"{", "Red", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line3char", " ", "=", " ", 
   RowBox[{"{", "Blue", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"line4char", " ", "=", " ", 
    RowBox[{"{", "Green", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line5char", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Black", ",", " ", "Dashed"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line6char", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Red", ",", " ", "Dashed"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line7char", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"line8char", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"Green", ",", " ", "Dashed"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"prmax", " ", "=", " ", "800"}], ";"}], " ", 
  RowBox[{"(*", "800", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.79339982821106*^9, 3.79339986270236*^9}, {
  3.7933999978938227`*^9, 3.793400003045478*^9}, {3.7934849909146833`*^9, 
  3.7934849978857813`*^9}, {3.79348503674374*^9, 3.793485052714149*^9}, {
  3.7934855796938047`*^9, 3.793485580159594*^9}, {3.7936402999196587`*^9, 
  3.7936403176036463`*^9}, {3.7937183643520308`*^9, 3.79371837004673*^9}, {
  3.793718408898332*^9, 3.793718408987434*^9}, {3.794507641959278*^9, 
  3.794507642138769*^9}, {3.794576019761074*^9, 3.794576020279228*^9}, {
  3.794576661397723*^9, 3.794576661567122*^9}},
 CellLabel->
  "In[1338]:=",ExpressionUUID->"7847d581-a966-432d-bda7-2334bef0738c"],

Cell[CellGroupData[{

Cell["Four weeks:", "Subsection",
 CellChangeTimes->{{3.793442276145667*^9, 
  3.793442278863884*^9}},ExpressionUUID->"8885a657-5961-420f-92b5-\
b157ca6b4b32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "40"}], ";"}]], "Input",
 CellChangeTimes->{{3.7936403438253593`*^9, 3.7936403471896343`*^9}, {
  3.793640381348299*^9, 3.7936403977456293`*^9}},
 CellLabel->
  "In[1347]:=",ExpressionUUID->"0051520e-2c4d-4458-bd6d-05e0da871762"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot4scrit", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sols"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2x4s"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2x4s"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2x4s"}], "]"}]}], 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sols"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2x4s"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2x4s"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2x4s"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2", "+", "4"}], ",", "1000"}], "}"}]}],
         "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7936404543772306`*^9, 3.793640470827922*^9}, {
   3.793640511433079*^9, 3.7936405164159317`*^9}, {3.7936405863378353`*^9, 
   3.793640588977378*^9}, {3.793640901850996*^9, 3.7936409110413313`*^9}, 
   3.793641022966834*^9, {3.793641344008607*^9, 3.7936413515934067`*^9}, {
   3.793707401383143*^9, 3.793707402397493*^9}, {3.793718374029681*^9, 
   3.793718374520513*^9}, {3.794507314747593*^9, 3.794507317008933*^9}},
 CellLabel->
  "In[1348]:=",ExpressionUUID->"ac0ff69a-2c3a-4bb3-ba12-7208d11793c5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
73NzTKy8SNlqTxsg/gfG0JU/
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78793#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
lITRzyvrpFr8UZ37LS04nIRc37HRo+3+OCWg4RB5loTyGtF9ze/8Idpa9DDn
Agl9bz/pr//qD+XtxRm9+SSYuYuktS7iYKhuxHG4iITiOhvBk8IclClri8yW
kuAhwfSRXcqB4cjNozLVJFRHWTTxy3PgFFK6md1KwqddFhVNZA5WfRwX2/Wa
hIwbeew6Qw76GDoN+96ScJmfGprF4IAjfEsv7jMJJXvy7GRsOYhMK5dsnCJB
3o1vzchuDm5X3m2mrSWj1kIkUjmWgyNyU2FMZTImJPj3ZydwgJNkfVd1MkR+
NoYsTuag2bzy2hE9MgR3L2yMzODgc2dV5G0LMmgVT2O8ijko1J/Z9JhJxq4D
8QXryjgIuKL/s82BzF0/4isabnMw61m9a8yVDKPAb6UN1RxITd6HeiAZMx5/
vuc94+DtlrlflGAyeisDUrObOci8b3jT/BgZkbNhmpEvONCIqJXzjCTjrKnh
ykWvOfg+8Ld9fzQZyVa0oMxODiqsERMWT0YjJfH2urccMKQeTmdeIkO0Zfjn
x14OBA/xlt28QkbzXuvvqz5y0PqOvqcml4xlv8pe0z5x4JJT1/mumIy5Y42s
TV84UOBfGPf1FhkXc+SGlg9yMOBjbPq7ghtfxNXDb79ysF/ncbn0I+71lzSE
LB/hwFNXPjPhKRlfiKrRJaMcbCYeixZ+TsamKb4gzXEOLMlvDp5+RcbAL22D
c9850Kfqui/oIqP+w9Hhth/c+AzibUJ6ybjlei92ZoKD1YZD5KlPZETLPFwn
MMmBOMwVgwbJUK/dfmeK6wVGuWIjI2T4/d5j3fKLgwljnhnvCTI0g8qGIqY4
+M/Epf/TbzIsOoUyFH5z0GFW8dLtLxmXW829crh+aiF1v4uPAl5BA5bANAdV
VgEFbEEKnLUqXOy4LrJpvvBCjIKDA3HJx7nOYKmGWi6jILc6b2E813F24T5P
ZCkoiRC5GcH1CYcPjpDnHi+6mred60BHA/o9JQo+yjpOyXHt4ZyiQVSnoK6S
t+wB9/5OWyaWlxIoyAtM+GjGtfk224UaRAoGtb4m3uLOn+JaNJKnz3XneNdC
rtW2C7xdS6eAz/lcDZkb76qdHk8um1KQnHTV1p6bD9FdD0qWW1Pw95hchu1P
Dnh2r7p83o6CS5Pvyjdy8/nd89BpEWcKnnyrz57h5v+Td3vgGRcKek0eHyjg
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78793#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF13k4lF/YB3BbUcouIVmyjXXs65ivZcYyxoRok1Aky1QiLSREskSSJEIq
a/i1qCQkoaJUSmUryZY1EkW9817X+2b+mLk+13PmPPd9n+V5jqzXPidvDjY2
NgPW1//+2nkPvaobvmPG9n8fLkuJ/b3iaeT/t05ORtYt8av/TGvtuJktfvuf
N+/++TBVvOGfuzVPWSaJt/9zrigjNl68/58jeW4pnRaf+ectW/PKJ6e48P/m
/RvpZr2e/58VHMeHHieI/HPoCyNyxoz4P4vdFuxhZ5f+Z7fE35v61yz5yu6v
zxvVlqwmev9+wpYlWxzyOC9asWT9rM3X0zRl/tnT/fqOwp4ln7STvHhxeMnX
9VPa42eWPMp3lBa4UvafD9XSjbT1l5wo80OkOmnJlX2WLS9N5f75nU3kVJL1
kmfLatbYOy3Z4JiRZ/OeJd8T1pytS13yfSsJmZtDS/5YvJmyf3rJvwTO+2n8
WbJxN/+dYuEN/1wVsswu32zJ1dcnD6alLblrlcZFp5wlLwT51wgUL5lEHuBJ
ql1yTUdndszIkntI4o8tfyz5T77rEDub/D+b7X+lfVx0ye7v+LaYyiz5uKl9
+C+VJV++cvrKPb0l1/I0NR3Ckj8xucZ0afKYmZOlKapuIrO9NReadpHH+FDI
h7TWArKMSYTBfx7yiFculHC5/5iMvGq3ff7yeMUp8Fz4RDvZg/tXpPoheTSb
zTzXd/1MPhFoUPDthDx2bcnwkhIbIee+CW4pSpCHI8N4h63ed3Kd0c2pPeny
iPlurPFx3Rz5U87EGsU8eYissNo+dvcPmW25uml/Cev/O3gEjv3hgEyAn+eV
Snkcn67ptp9aDvPXBbEej+TBd737+Q4iL7wMv5asb5HHstVSfA/v8iPqstyr
rnfyuBdnEtpjLoR6v2zJraPy0L5Zki7NFMOtYX9/91l5uB3LGxtmk8BVX+MH
u9gUwOX9/RSjdB1ifDq2MUUU4Bwj+OSAvCxsvAQzo00VcC3mQ9kKKMHoc+9w
HFUBH87cldLsVYaKR5nRmY0KEJNp0dweoYJV7rQPGbsVEFx1Vi77lDpebo1Z
W5aoAM/QouoxXy3UvXf2vZWugI1jUXPZbNqo2Cx3716uAt6BZ5lOqjZSXWo3
P76tgLVlgueyruoguj2poLlGAefT2n9oK+oi2NntZ2szK97GxhLFfF24Os6n
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
vODYQ74gzfvj719Wf6vlXOniPeT/AUfk9nM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78793#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF13c8le/jP3CkbDIzGpRx7GPP3K/DMY/jIKKSldBQHLSMjIyMjEpTJZVQ
lBFJlKy3kMpIRqWpoiLKKL/zeTx+35w/znk8H/c1znVdr/u6r1vOd6/zdg42
NrZtrK///dpt//T0wWilGdv//3BaSAe/kjpB/J91Lp4+Xy515Z9pHX1luVIV
/+zm9+t+tlTjPw9pJlmkS3X/8yVxRmKK1Lt/juUuVzoq9fOf3TfllX7/wYn/
M99CrIf1aqF/VnAa//QoVeyf93caEad/Sv3zigrhYXb2Nf/skTbn8k5i0Zf9
3j9uVlu0mvjdu6nuizbf531S/Nai9c+7XTuhKfvPPp7Xtl4fXvQRO5kzZ0YX
fU0/szvl56K/Ch6iBfHK/fO+erqRtv6i02SnxGrTF31nxKL9ienaf+61if2R
br3o6ZI6CXvnRRtEGPm0Biy6WlRz+kH2ou9SpWXLPi36ZZGbZfDkomeXn9yp
8XfRxkNClUWi6/65JnypXb7ZomuvfQ89cWLRg/waZ5wvLnqeuatuedGi1xMf
uNPrF13XN5Cb8HnRw+ulHllMLfpv/sZP7Gzy/2wW/FQ7WnzRnr2C7qayi442
tY+aVVn0hctHL1frLbqeu6VlHxb9eg/nmC5NHj9/y9EUVV0Ith6KyKSrPMY/
hfef6CggZE0OG9z2lkcK6bq0691HBPJqPfbuksfTJcsfi8Z0E95cs7Hq++TR
avbzsf7GN0RMkEHBlxh5bHM/7btqxWfi0vOw9sJUeTgxjLfa6k0QD4zKfgTk
yCNhwljj5crfxOuL3yQU8+QhxkPdMlb1l2Bbpm76rphVfyv38oi/HJDdvdPn
8h15RE/WDdn/WAbKs4JE74fyELw29HgrmQ++hu+LV7fLY6nAKsH7VUKIu7D2
6WCvPKqTTfYPU0TQsDNXZtNXeWiXFees2bMC5aO7dnlOy8MjIm9slE0aVwKN
721jUwDn9okkxo2VSPDv27xHTAEbEoSbQuTlYOMrfDbeVAFXE/pLeKAEozev
RpOtFNB/rGqV5isSVLxLjI45KmCFbLvmlsMq4Pek9Z/2U0BYTdba3CR1PNmU
IFmSpgCf/YW1Y4FaePBiQ2B5jgIcx+J+57Jp45bb2urqSwroBfdSnWxtZLvW
uz2qUIBkifDx81d0EN+dXtBap4CTJ7qntBV1EbbB41dHK+v/NjcXK+brYqPT
TM6LQQWInH4vuiNTD9ZdLR+GPiiATc7voR27PgwZOfpvvyugT6f8aPkefUjR
dXrHOBWxXVrpNy8MMGgTJL5EXRGagreaGxsM0dFisp3bQBFt251SXq8yQp0V
b6UARRG553SPCO83wkVqgYukqyJSSg9dspU3hi/eHFePUoRx9sTmy0Em+GTg
KuLeoYhIU/aegmfrMaW4XuhmkBJGZ8pHfqpSYDZi3pJyQAnt9uKZEhsoSMy1
ORwYrwTboPQz9EMUSIi5fFt3RglqxiUF3P9RoM++68nZRiX0xOemLQSYI7o2
OOnAEyUIpucnyWSao3n/PmLjSyVkf5Oo9ak2h9t4bKnwd1b5sLvnQ3kscGDg
dEayDAmCDuU/Bm5a4EHOBWt/RRJcXLre7O+zALfzlQULLRJqd1pssGOnwlGg
qErOlASHM4oJLqpUnGkt3btgRcI32w2Np1ypGImvVBpyIkFfOZh0JpoKFeLe
qxoPEu4nGi9sy6eCOfvg1OkAEoLFP5aua6SiprKZsY9JAuX9fnnxN1RwhLRz
uUSRoNM6QeyZpcJO7Vm9VjIJP3hMPP2WWyL7Y99+oeMkzBRdziCts8TA5SHN
sVwSuI6+DvusbQl5z7cf266TMF+1SbiXsMRuqdGL18tJIMIUIlfYWaKie9wt
sY6EoMrAqm4nS8xn/BTy+48ERSf6Dm03S1Bpsy2UbhL2PY9Pdd1sibRlbDFr
WDm+LrCF03uLJbofLjX8M0qCW0Pbq72s66ui+L6//ElCW5QDLZ9V399Q+Hr1
Aglmu7nbVmywRMmkhHcOrzLeXfl86KO9JaZLVkqGiSvD6deYipqlJcx2ru1y
klWGcmzxyb8mlkhUICVrqiojOaIuLUzLEp2v1SGgrwwTSndovoIlJM7r/P4M
ZURY9Gy9JGkJTzejW600ZaSuO/A9itcS10SIwGsblaG2qeIvfY6K8Q6q7BEf
ZYgpcgyv/ULFYapjJrFfGb+8lp6SbqWidcHVZlWcMmb4HB+7V1Kx/N4Wtrk0
ZRwwz97dk0fFJa2A4DuXlVF13oTy4AAVD1ZHO6p3svrvvk47vYa1XjPFy2UU
VCAxqnE2d5MFZDrMJwlNFdTU1px1plhAN6+/x89IBeON5HX9JAtst+U6V0JX
wdGZbTK7f5mj9Yyvgvk+FYiZZRetOG6ODGMp4x0tKkgWieU2aaFgZWTitqod
qsiuvSvgqQXoOa6yGgxVxarPj08ckAQc5CtI7NGqCBtu4nJYIHC4/c2YXbYq
WA9hroTzBEZWrj8wXKOKaWc+h6X9Zii8P5m2lF8Nt2I6NeS3rIf+gvedDSVq
sD4vY/8myRj29AdxltVqUKgRzQ7Yaoxt59YwDBrU8EzQ/7u8jjEyDYY/Sveq
4a/o/a/UV0YY3btFauSPGmxIux9KGRvh/GvXyGC6OnrfvbUXmTUAe4OdefpX
dRg/9NiaelkPksuLBA9Pq2Pbw0OfnkfrQcOTZyCYTQPvO5z0HbfoYfNsS6iL
mAYe+s+HvhXTQ4W25VUZUw3U9G15vydFF/75BHdRqgbGr7Wf/xqtg/Yjup3N
KprY9HlXzPI0LRgLPebI0tPEgd1OlZ93aeH6GR+DLdBEpIeuwCxNC/Elxy59
c9WEX5kdfxU/q/yLT0zJWE3cl7A7cTmTjOuquSt29mkiSNvWbylVExJ3dOx1
RzSRS3ScXcmriSNoi/n7VRMBZ8jbTnZp4FbRXJgtOxmS14qiCz018PGbVUbJ
MjK6b1xvslDUwGq97EJRfjJelnsnrR9XR2o9aXhIgoz9ohOu9MPqaOAM+22+
klVf2NLR10Ydv23rRa7LkeG3xfJSt7A6NDN41QWUyChMX2VkPKgG/25Xa6Ya
GQ3Lbyew31BDrlSeT58WGUIXj/pcjVVDt+fXCFMDMn5Ltt566KEGvisGOXmm
ZDxvi9n0y1QN5qNxt5aZk/G5XcxlTk4NBzU623ZZk9HUc7w/go+Vi1Cp9132
ZNheSD2oN6OKj9V+C3rOZPi7K9W9+ayK1X9Lpc65kZF48tOAxWtVuFrM6bBt
JYNf7ZCvbL8q0pKtHLb7kpHRPU817VFFQ0dWYFsAGQs3TxUEdKtiRmQoTjOI
jCNZlpvDe1VBdiflnmCS4c2zqsBgQBX+uaFVM/vJ0H9pcyJ2RBW5I3VPPaPI
8BG39dX8qopuJd6vj+LIKKvPjV39WxV8Qa7LlJPJiHl19avKMtb4yi7JHktn
zWdE0byOBGt8v74YT2aTceO+d/9KEmt8pgau7qfJmJmPuNpqooaPsXF77+ey
xvP4Ye5KJzWsbuk4ujafjF2VvQIcgWpIc/Kr+3qTDPrIUR7SWTU8yil94VRO
Rvje3imzSjXMDsxO3KkmIzDPsffkUzUE+mcpxT5izT9h4HFfQB0XiwcpH1pZ
edjjTtqrzrovvit50DrJWJHmJLzOQR3UiLpM8X5W7kRfsntkq2NN5peZwnEy
pi25ePrkNVDnc7iwbJKMzd+UcddGA546opvu/SZjE/XYA60gDZzvNa5u59DC
QhR1/bMqDUiuStn3TUILm35cL1m/QRMiRaRJXUILe2LLeFMYZCxt3P61PkML
4qkjefy1WrhycuZc6wktNO293iPQrQVqQDrt6RkteC9xGSN/1UIcb2XRSL4W
DrRTTg2s1MZfR84dS6u1cO6IvlfNYW38Hrr83u61FpZHf1qyl6aDL79eDfeQ
tRF5s7SDfVYXdwIyGuz0teGnnLDaVlIPMX1m1+pNtKE3/F98hb4eJKpygwqt
tPHfm61Fv0L1YL5vy3ykhzbm7Fbt1/quh7M/e6Xkk7VROT6lFPtNHzY/OlyY
r7QxdrD/gyGvEUR9ogw/vtOGu0AcVUXdCMNdais9PrPOSR/Er5g7GiHsVupb
yylteCg7Dn7KYZ1P9toypfh08GbqdK2gojGmxxozHujrwMg06OIAzQRXPt9r
Ezymg6QFrvted9ZjzynGup3HdcApv+5F+dB6GFDfRjSd1sGn4a0JWkvN0JbL
qx6Zr4O3du0rilzM8MNxU8ZotQ7uejUWHJ8yg1nV9IbGtzrIH9cdKFsD9Mdr
DR000oVYY/TuPwcpuExu0usx0wVH1OQVn0wKdg+5HyNTdfFBz6R78BoFbAYx
xEcHXazcL+El2U2B4ufOPBc/Xei9q195TdMcYY67/TUzdFETG6+q9sUcgqsK
vr17p4u+Pi6ugDAqsDF+6O2oLrJemfyWSGOdPzK8Ho+M6+JAQc7YIOs80ssu
WfD6ty6MC3coFD+n4sKHZM9Bfj0UdSocc9a1hMatnR3PdfXwMmQmcGDGEnQL
jeKGI3ownOWxtM6xRtqOSv9L8vow75ChmUrS8Bk3k/lU9OHrY/EuzJAGa8mr
Rfs09dEfw+HT7k4DR8uJcXtj1vWV771enKHhoHzYvhmGPkQYGj/8V9nD/5V2
onOEPrTG/JyYKnRQXG9d5Xymj09KvRxvPBiYRvG7wMMGeKfbdpNPzBm1V76c
23/EANsrrr3mUHJGHLfahsSjBnjyMYCd19gZgl03HuYfN4CGg4KajbczFL1K
LgwXGGDYunhVwk1nbIy67e7SZYAj083reGgbUHm3qp2QM8Rko/L58GwXhGk3
Vkg8MsSVUi//PBc3+OvKXspqNUTPtuCRpiA3uOtHpvJ3GsLmUvymhUQ3mBjr
+nL0G+LZhLjz7btu4DC/IjQ+bggX3Ux5EVl3ZDgd2dkkbYQEO2v+ju/uKAqm
yoYxjdC1oUzY+fJmvCppTH0qZ4wcL7/NrlaemNvZfU75kAlePzLOTNPaBlUK
11//e6YY57y7VWtfAKwvywXcXmGGihiGYonTbuieFlRsXmmGpUFGFfnbdkP2
2Ny7l3Jm2NZCaTkRvhuzB3t8OdXMUN5q+yHwzG7cdDrq6QYztAgIFXW/3g1R
9h+ufwLN8H5vmMfpPUF45fWAaltjBn8bh4uVR/ag3fXmEs96M6yjZFzsPLkH
1bSzDcxGM4zdKxAcvrYH2QZhON9pBvmh2ymvWvfAUohk+m3EDOtdgnQC+fei
uC5D5yQfgSajv9I7s/Zi/yqvtW88CNC2qv2eswmGryN546APAQd36+hcx2A4
xLOn9PkTiPTWuG/gHgzF0fwfHcEE1iQxhDYGBKO74tODmiMEkg2nbxgkBINs
z/Q6cYPAq3UJ/JH1wfh0KOG89TwBm18Db5nqIfi8UTUwjw1Ispv+wa4bAu/v
ohxrlgBLll7kSzIOAW3dez1pbkCau0Io1DoEa48m5S4XAT7UZK3q8g5Bl0v7
7j8KwPVQ6+1pWSFQ++rK10cHPI/PTh3+HIJqF/v6FEeg9a/zM8nvIbC4bx5q
tgG4pPGUP38qBJuPaQ5cdQcOH1y9PpWNiaNknuKwbcDLwPTvBeJMfAirtRM5
CBQJf+77a8oEc6jsb1MEcPPw/NBlChN/LAvLDkYD7dMlr/WtmBBbkSP9Jh7Y
WlqYrMFgwuLu3s+lx4BEkXGZzd5MXPqzNoV+BRiRvP4q8zATav5SZuwFwNEA
f1fVeCaqOoUmKgqBHTtLzlQkMtF5cX7TylKg/tx9u+PprP4ovcpf7gKEONfB
w2eZSC5qH7pQC8juoaQfy2X1L/ooy7keED3z32jqJVb770pn7jay5i/1paHT
NSY2Jx79L/kJoJsbWcJ5mzW+8cNRps+A/KKDzCPlTIS47dP63g2oHvYUm6hk
tU/adsbtJXCWc2lDTg2r/axNdL4hgO9gf2VHLRMXZxjs9a+AApN7bhN1TNxp
M92h+B7Yp90ezvmICXMdnVUvPwLaKoIvfzQy0XFO+Wn6Z0DtV1xtezMT73ZL
GE19A8ZPqbTbtTER3MM/dn0COBAa9GbsMRPz65fkeUwBv1vDLaM7mBAV+s7d
OAvErJ4a8O9i4tn9lCTbP8CwbsaZ60+ZyN6tsOzJAnC/WO13/zMmnGUeHHHh
oMAk3W9i9jkTIm2bl7zkpCDsbUccXw+r/oGpWC8uClKqF/L5eln1lTLZ3vNQ
cFYiy3GOZZGEpj/fBCmQy9HQL3zBKq/jHRkuTEHv40C/gH5W+ZHZ2VlR1nOh
3JNb/CWrv6yTB2MkKLjnWrCyjGVhkH8vlaKAVNd/zmyAia7xtn2pMhRsn06L
qWE5M3f71PLVFGRzuzcpDDLhaM8WliNLQdvfp34xLC+fOzshs46Cyne5m9pY
7irUC8lToKDMJSpvyRCrvnvXN0USBXW8j03UWHbk2rXnhgoFAeUrlKgsC91Z
OqalToHe3KQPjeVOv0u7qjQpuH3s+2cKy8dETT6balMQKH3hgRLLDg09gQ26
FLy2S38zz+pPMCT4o7UBBdfaHewfsty5hs+/w4gCqn3oQhjLxzqvvnM2pcBi
X+rMCpYdorDthRkFGr+UjIpY4xNQG3izlULBsYj+WlWW21+Ge7+1oOBbKTn+
PGt+0o4ufxVoRQHHio8p86z5tDcs3jpuQ0H62ivdNJb5P1oOhtIooLdu9E1h
zX/7ydebZ+gUFD6f1KvuY9WnRvRHO1KwZHmwUw9rvewnxd05N1DwyObBnTes
9eW7fKv3qCsF9rb9AUPdTLQ50lyF3CngHCr1b2XlIWXh/fMTm1ntPzGsvMzK
C+9WmacXvSgg/9G1VWDlq43vDkPBl4KsJ1nZHZ2s8jWOnUV+FEhphOlsZ+WR
RzLxceUOCkaW6h/xZeWX+/n3psehrHxNDvafZOW/NTaV6rSPgquJgTZ3H7Lu
J7Lio94DFKw3eanVXs8E17EtD95EsdZ/l0vKg3tMLLNtrvmVREF87sjbt2VM
NP/yNopKoSAzfupe/C0mEq/NVXGkU7DcLttYtISJpZxalQLZFERwkOjshUxw
1p8rXXeewtrgvldIX2DipSnV5tUFCkYls1bMsvaL0pqvr8/msdarWzqn+RRr
P7izXkSkgIKcGn4RpSwmbt98FcZWRsH4cpn1XKz9KFE1WaC2goJkneg6R9Z+
5VFIvra/ipWfbX31SRGs8V6N7RuvpYC/4mhUXSgTnufXGQ+x3pPjkuviHLcx
oSvd/ux0GwUKqZfzuLxY83U6bJdLBwUna6ru3NjMRMXxpvOPn1HwZUsS+0Mn
1nqlBizcHaLAM2qNmBjBRPXB4sacSQp+B0oRYRKsvP3asNV5mnU/rdBcIyrM
xLbw+SmBGQo+/Cxalcf3v7zSlRL+UvDxyZr2FNZ+vj3w29FQHnNozHLRTo2G
QMRNh+G4xhyVY3aDBdUh2KV7r5+HZg5FX6tXdFoIHnT13Kimm4NNcF3QGmoI
xIO+Hw5wNEftLuS+NQ1B/VUFxSZXc6RcDralaoRAdEUmM8bbHLrq+ad3LA/B
vRk/vl/h5phIeBG45Vkw+OoF17+7ZI40nReUs/RgFNv6XqqbNsdhncsdOxl7
MPVFevmHHAtM7jyhF5O1A5UbrJecoFKx8U9Iu6O3Hw7bJFys+EDF5ARjve+E
F555BnqQR6nI/6/Pyu2ZF+TDaVI3vlChG+xi7lPmhbY84eP536n4NstvV8H0
gthcbmL2LBX8EmU67j89cf3mnaBgQUsYFJ7LyJvbii6RTyZq+paYEmEPOSzt
Abkhuxf5CZagjGqQj591R0qDSalrsiU21LizP4xyx0SBWiJXqiUSjbwnuX3c
0cAU1N2VaYnnyWraH5Xc4cf9LEP7nCU0N1W/Hbzjhus6m6wf3rJEgU3oQGH/
RmikBNwZHrDEl4EPHSe0XZGz1z09c9gSLqM/teYlXbHgYutn/sYS41/q30Uu
uKBrjarItQ+s8lVcom3tLgipHA8K+sGy1SPr7EAXVLwOV5hfZgWfC93fn1zZ
AGODIyektK1QqjWmVqrpjF5fKf1cXSu4Xr58vljaGaHHSvpkDazA6WLWXLvU
GTfev5AmmVrB/ze/2KpBJ6w+oZ6nb2WFsY2Brc+POoHjR+/NDZutkFBbtkRg
1BGPi5Rb0uOsUNlQXFO7m4HA3rpA4QQrSIR/LbtlzQAnhwvvySQrmL3IGm5b
y4DZpmj6+TQrjPtf2BvS74BbXM+fF+VYoavijvcRGwec8It83VJkBYaninyR
Oh0eq5/MsD+3QplhTJ22KA2CUszKez1WWHjw+s/fb3Z4KCoeEv7CCoL7J8R+
tttBkWfLp09DVgg3LTV1T7LDt8kPvU8+WaGvXyCV868t4v77W5771wp+/u7Z
HRM2uB6mscdIxRqzTb6JijNW2Lz3qfKkmjV+Gb7e1PrSCgI7w97f0LSG8vrL
6cdqrcD0qvGQ1bOGcNRUUlKMFUzsrGhcsMZ/YW/fK/FasZ4HnqQeV2skPJsJ
XyLPylFb+khwrDXWv5yK0w6xwCBfT+B8vDVoV9nf9bhboMF+5bekRGvUmBUZ
noQFMjuL5i6kWmN/PdkhYLkFVJ61iHWctIaYevG6jbfN4dnPbq1cZI2gKq0g
q98UNH8ML37zzBrBmiNy1WeAG6T7WkE91jBnf1F79QhwfAdn9e8+a3zQyZku
3gt4f8luFBqyhkT8oSF2K2B2vHRo/UdrkPm9duR9JKA5PSp0ds4a8elpR9sK
zHCa0zPMWd4Gzrn01mg7U/zdtkLvqaINWmKtfF8omsLvUdcUQ9kGMrFd0VuW
mIIcZ7GfrmEDepfp6aFaE7QukA7ZGNpA/dZMdbuWCX7NTh42s7fBheCVEtrr
jLHxx9FUlTAbvKEnPPm51hC1jhb2hfts0Ob0+Zs6pyHW3prnJx20wSF1l6DU
9wYY37P3mEK0DfLujY6UXTdAwleXLNlkG3B6LQktJRug4uOaUxLnbRAipzJt
aq0P0eHKyxyNNricftHzTLoujvFHRVU122A5ZXxpT7AueE2o7rv/s8GOHysb
9VxY77mnnwn0dtpgbZcLh7+MLiacvh0o7LeBT46/QlSxDrqaSAzHbzYo9b9y
0feZNtJunpvLlbbF9oSzlDEjLXAP+vY6r7JFJF2gKFpOC0d4VW5zydoi/Hf/
GjKPFiICqv1DFGyRaOuZPvGCjJ1yPU+pZFv8kJR9//0gGTYnBa9/sbTFNznf
Xs94TSyNinUxCrFF1v2tZds71VDx4+tMfagtKBqEcnWB2v9yfNFqny3487ly
jGPV0MjQ/LwhwhbZWl8SO3XVcGTt0OE9CbagHwCv+gVVcLYaFuefsUVbcZNK
5kEVcIh+ZxdssAX3jrgmphMJZUlbCk402kLfK8RkM5kE3/lme5kWW0jmE8K7
hEhoeJ97itRuiw852VLcnUqIq6apW/Taojw9NlSFrgR2zwL3A59toUrdFPfR
WRFshZ6lIyJ2eD+6NJEjQh7NX/v2XBS3Q3wk/xFvD3mkkZ00PCTtQCoVDfu0
Xh4rqi1u9qyyg8dMlkM4uzw0WkjFrSQ7/Aq6Jh2Vsg4e7yeulZjZYb+SbI7k
lbW4K5d04dBOO0yZeXqu/imL6O1sngZBrPs+2FjY/aUsqIUHV/3cawfDIe3k
ygey6CLvPh8UbocXfwy5BtJl8YlwOusdY4fyY8Mqj5VlIeEpk2OVY4eyhq+d
Gl2rwTxbmi7SYIdac6VfIbMyqJo/m9TQaIf/foqyTz2RwbxnYiyzhbXvbMu8
XXZVBknrtoY/Y+1DJaG/mgedZHD+Bu/W7D47TLNLW769IY2muu1qImN2iCg3
OxoZJAXJtzKPhSVpcC2e3zcrsQJbLbmaHkrT4DKvMGM9KYHLBRN1IatoOB17
MbTliQTUdv9X9nQtDfTofK8tRyVAmdp3Nkudhocnn+7r+iuOnVzPdghb0GD5
6UV1zYQY7qsmcwvvoeHNmTj2z/Mi0O9e0ZEdTMOT1uOrl7wRwa3IgiyxUBo2
9ehtpjSJ4HJHs7TkARriH5odVjsmguS9S9XXxNFgFvm2rlpOBM7lcU7qOTQ4
aoZzxzOE8dE46qxtHQ09P6wzvI8Kwfstv9fjBzS89pmJ1NkshJep59fRH9Fw
XG9AykpVCO2D9244ttIg3askp9wpiLLo2Tq3ZzTcPFd8dUhCEJEN+99u/0BD
xjXjuppyfgjbMdXiBO3x4bVxFUWKF5ceCvEZC9ujPabiyepxHpCNbo7+ELVH
dKT4qMkjHjiQPl3zkbLHrcEd1bp7eJCyzFOOIm8P5sEl7CtauMH5yFaCzdge
mWnktE1HuDBtIscWvd0eQ8HU+AGVpUgorxvWC7QHW8+Q+FqupRBT9bg/ttMe
p1/0rrn4lhM60qcObQ22x83TWYkmuZwI/s0/ZRphj9r2JrdpEU6MVvwencu0
h3MCV6cR9xIMqnc9P1hrj8kbOpfWSLLj4hfhqCX19rjxZ87ryjwbfAs3KKY/
tEch7f5fxzdsGJXvO3Cp2R4S9JXjssVsmJYZXtXSZY9H798rngQbhHm/Boi9
twdv/7iKwfu/hNUHrvkSATr4OYXJQm/nCJ4rtlcNl9NR67L2oXblHNHuk+rQ
IELHbe2bWmeT5ogNQ4J5PSvoOB8mp62rPkd4d4tbzcvRMSAvZ5AVMUtENKzL
tNWn46edeUa+/Axx6wIh/86TDs6mr5cOXp0mJg9Ncvn40EGauvjDKGaa0Hcr
+DK0jY7GnwokrS3TxD0hofK+QDpCfYusGoWnieaYYcpjJh1f517LRsVOEQO+
UV5liXR8zlPc1rPzJ7FM6d7ZmBI6tPd8Nzq0bYKwXbI3+s8tOqpuh7jlUyeI
tFdrfQ+V01Ew2fBqTmGCED6dohxWTYdGa/Ok0egPYiXP5uqABjpkeMai3oT8
ILS//O5x6KUjLye6/nTqd2Jrqb7wqr90xNkscw+4P0bc2fxbsIvNAX1BTZ0a
iWOE4LIa/vglDlgedNxxA2OMeOCxnnuU2wFHecr1bo98JdbyUhcqRB3QQ/Zt
vSXwlfjg5zRmr+yAJkqGMiXsM7FHevd/kS4OeGf4qMkq5iPR3KTeounmAIGp
QtGSDR+JNSHfGkc2OcDev9DcV+kj0dXCfGDj5YBR5mZq6ZMPhHb4wSqxnQ7Y
qFfwqWPdB+LXk8SrNw47IDy0ZXdz/zsiJiEvdrDIAUk+EZwnDo4QAvu57Hxu
OkBGIW2frPsIcTYwSORDqQMe/NRqfas/QpTTjPK/VThAfLPpO4GpN8QH4aeN
HPUOsCm0nfoY+oagXWDjVn7ugJk6LdXQiNeERJXXsfA5B/waVHjc7DVE5F9v
2jj7xwGCSpqNh5SHCPJZ1TWH2RhYec1jZcrkIGEb9as0eSkDTYnrLlQnDxKR
FhlPzwkx4N727oZF1QAx8qROrGEdA7yZ4hln5V8SNz+tOidoz8Ckp3uv5Po+
Ijk3wXvYgYGM8KeaJP4+ws95TKHEiYFbCtJ8OQO9xMra2lt0Nwa81HLqUiJ6
iZSMLc1pvgyQW85tba7vIQL1z/zgPcgAU+NcyZR7N0H9wlb1MoKBe76nZPLU
u4k1lwIji6IZ0DLdsDWPo5vo5THksjvCwHO9LJcLN58TlkO9K49mMCB3vb81
gus5sfaImA3XNQYUCg2indueEn8NIwX6rjOwZg/vH4ErT4n+sbfPrhUzMKNX
oygR/ZTIdCvfanWbgRQFw2BenafEgopzaEItA5RP3tlhl7qIwacZF5Y8ZyBm
vZrLHeEnRHXir23PexhYXnjM0Lqzkzhh4qWc/4KBuUibQJ/UToJ2VaPCfJiB
EYKDocHVSdQc6PgvdpSBHV70OpGlHUSOul6G01cGkkxU4nqb2omQkfMuct9Y
52rq8MDKpHaCZL/71YOfDNTe45tW52snONm7r2T+YmBKRoHnV8dj4nWlyU7v
WQZCUlzdiKzHRO3OfE3yHwZKFr7yLHN9TJxawze1sMAAEWZiZyf1mPh/HFIu
kw==
          "]]}, Annotation[#, "Charting`Private`Tag$78793#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78793#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
PV2I
          "]]}, Annotation[#, "Charting`Private`Tag$78793#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78793#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
8B6cKr5lZgeud7XCLw3puCd7KG9PsB32VGwq8T5Aw96tbD76YXbYZxXlpRFM
g8W13dIzEXYQvMy1KOtCQ5tW6PmwnXaY96CmhEvR8JVwzfXbZ4frB49x5tzR
xiofyWyrbDtkZ1JHuCe1wMotPS5UR9pbvvC76Y8G7v7LPVRXb4e2mMOilFca
+OeTup/VYAd2hkr23UINHJLfvLOjxQ4uUwI3Djhq4PwNns0ne+xw6Sb367uF
6nj2cCtV6IcdxnesMrT3okLss2SzoJg92ijfQyLHVLDZkuvZEwl7MHTXx296
oYKCK1MPo6Tt4ZwZvHZXkQqooS8q2uXsMcIDS2KTChg/Y3NPqNvjnWn+IF+z
MoK5OnYImttDfu7X9tDbSniglrZcMNweBwsJ7zuXKdDrWv3yZKQ9/nrNhASm
UVCWcOWESLQ9vppJ9tFDKCh4+VxCLM4eUnV0hoU2BWkRnOprk+1Rpd6ct/KR
AtxuJ7uqZ9vjzSYVWZNP8hg2Ssy1fWiP8tankQ1mcvD7zOfb/Nge65K++N6m
yOHd0fPyjk/tETlV0PWQTw4tvTU3XBrtkT5QUqvzXhYVe/88XN9hjwCjp6kn
dssioW7X561D9pCVXMM9XyMDQTsWNZnfAa5BrtpWN9fg4hMBXiNBB3Cg6UHf
3jXQMrw5MinsgGfdOu5VLmvgpPy12F/cAWpOkfbyP6VxZJmPLEPBAWxVn90n
IQ2Op7ar2IwcsGGV4vjKL5KYNZZl27vVAbHio+e814nj4O2HH3S3O4Dzpug6
P01xiKh5P/gR7ICk9iu3cpeLQ0fizJ7NkQ64kqtKq6gRQ+Rvvp8m8Q7o4Ty+
YauCGEYqf4/8zXTAxPz79oLFVehVb+vcXetAvufOF5e+F0H+N8FE9kcOiDjN
+VX7gQgCrrkrHn/igNFLLvd680QwotATd/G5A6RLM62uB4hgVvKDdEObAy48
ar6q+F0Ygjzft4kMOmD24/OYkGXCsBri+ndrhSNSvvHLvl8nCO4i28sGKx1x
Q/VBj6CpIFr8jzrVCTnizYWNQSHygnDv47/0erUjpox+RaZOrIRfl6jVP1lH
tPP+W7rh2ErE18ln2uo5IllvnO1IlgDK8giFLz6OkB+dcres5cP0nmkuf39H
3OdxPVNwgg9666986wt0hCnBPmawjQ81AgK3e7Y7QvJL4OuVwnx4vu8Do5nl
iHSn+cCwMF68D0j0rUh1hEF9xqpdVB4sU6rJ3XfLEcEaOnm6HVywZY/YO1/m
CB3PKzstbnHh2Ee5gD23HWE30KRw8AgXBHOOqMRUO8JQ3ul9rjkXpLi9qrfV
OUJhNNVfoHoZaN9+v3bqdgTfx9asd9c4sblUT1B6wREFzXszxUrZccfrN38b
mxPKfG4bOaazg3/Zfb4UdifwCMkfux3GjsfepstHljvBO3WSR0SdHXI8FouV
wk6o8fvzVOrWUgxtcf3hoOIEW+6bBwTuLUG4ROiLBA8nnErl8L/yaZF4/ky9
QXO9E8on/6Tsvb5IrI0arx/Y6ITfMlKUazsXibYG1mMbXyecXbH1xyzPIkHb
ufuuSLATLLqrZoMMF4hfr1Iv30hygj6/sLrl5X/EvoOX9veWOMFHplxr6Z05
YsUuLjv/m07Yb+95KuzYHJG7PUxoqNQJz45H9IkGzhG37Q0Lxyud8EeHuVRK
cI4YEmyvX/qI3J+PPXU24jdhn8e2XKXTCQVivDpFBr+IVXd903f+JcfZZnn7
p2eIwqvP1v2Zd4LG/U1CXu0zhFau2tokNmdMhq7q4CqdIWwTf5WmcTrD6uzz
9fPBM0SCeUb7OQFndO/oarMenCYGXj0UqZN3xszPFQ7Sn6eIm1+lz/E7OONW
CzWFsnSSSLtw0O+DkzPG1YcbrQYmiC1uPyi3XJ0hZ3zsbF7dBCFVW1vmuN4Z
ouZy6RMpE8SRjE3PjwU4QzbUtViEe4LYrnd2kme3M2TqQlQoRmOE3AERG65i
Z4gtqrIXd44SCwYJK3quOiPRXzthw8VR4u2Pzx3F152xx/7h2q1ho0Tm+tub
rcpJf/yFKo8sHyUWVd2iD9Y6g+5IK//FHCF62zPy2Dud0Tjsz9vbMExUp/4K
7HztDIstU8ljZ4eJLGNflcI3zugLzApwCx0m7C9rVDI/OGPfCaEIPqFh4n7c
yxf7R5xxWWWti4n/EJGtrpvh+t0ZW5mB51p0h4iogfMesuPOCFeujyvhGSKU
HUI/Pp5xhvKSgQWHqkGCY0lXUeYvZ/g9l61YeXSQ6K8yDvb744z++RQ+Gf9B
oja4UFNr3hmjK+1O7dEfJM6s5f25uOiMtu1VzWv5B4n/D2nKoE8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78793#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[113, 7], 1000}, {16.142857142857142`, 1000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 800}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793640458833197*^9, 3.793640471714593*^9}, {
   3.7936405058523483`*^9, 3.793640516880765*^9}, 3.793640597711855*^9, 
   3.7936407366379633`*^9, 3.793640911618548*^9, {3.7936410235115643`*^9, 
   3.793641027674835*^9}, {3.793641347904949*^9, 3.793641351939537*^9}, 
   3.793641391018841*^9, 3.7937074041497383`*^9, 3.793707482239932*^9, 
   3.7937176692801247`*^9, 3.793718171232469*^9, 3.793718265669512*^9, {
   3.793718375547583*^9, 3.7937184398442802`*^9}, 3.7937195381015673`*^9, 
   3.7938013830681458`*^9, 3.793801471994153*^9, 3.793801559055183*^9, 
   3.79380163548042*^9, 3.793801738604952*^9, 3.79450702094456*^9, 
   3.794507248573786*^9, 3.794507279453725*^9, 3.794507317668684*^9, 
   3.794507492705566*^9, 3.7945075384100113`*^9, 3.794507660361253*^9, 
   3.794513107526164*^9, 3.7945131763562183`*^9, 3.7945150291774063`*^9, 
   3.794515313026443*^9, 3.794568639270858*^9, 3.794568998395685*^9, 
   3.794576043095365*^9, 3.794576682118445*^9, 3.794578134103972*^9, 
   3.794578425858356*^9, 3.79457935761025*^9, 3.794579486385169*^9, 
   3.795513844954245*^9, 3.795513892087637*^9, 3.795514545501302*^9, 
   3.7955157713268127`*^9, {3.79551617543216*^9, 3.795516182989793*^9}},
 CellLabel->
  "Out[1348]=",ExpressionUUID->"80f08602-005c-475c-a692-48e8242587c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot4scritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sols"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2x4s"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2x4s"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2x4s"}], "]"}], ","}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
  3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
  3.793641549374053*^9}, {3.79370742192045*^9, 3.793707428476225*^9}},
 CellLabel->
  "In[1349]:=",ExpressionUUID->"b89df9ff-94e1-4d3d-9b21-59233f614601"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxF1nlUTX3UB/DbIEmaRCpRKdKkJ83D3buR6g5JiaS5NJBUFPI0UBINKiRJ
RAhpQpSKUqFUktJwu/ciejQhDRTv713rfTn/nPVZ3+/Z56x91jrrKHjtcfDl
pVAom3kolP892/p+aq8dukul/N/BbyETMiCdCf/v9Rezcsqkr/yxXUtX6QXp
8j929pl6lC5d/8f9645ZJEu//uO8JcyEJOn3fxwrWLbmuPTEH2/ddunO+Bd+
/H8v/B3rumGF6B8rbxr9VHdC8o8jXhpC1oT0H0uVi7N4eFb+8T2uRXOrieIf
v9kY+yV5w19PFlUvpTn8tf4hQ8+mnX9dsXjdZG36Xz+wlJEv/fTXVQXjYZmZ
q/64T1jznMPFv54NDaoWK/xrUxgUTK756+qu3gvx//11jWBj435U+mN2MP+I
jh1xjPRamuI8oHSaSXxzIm5ynd3rqwXyxtH6JR7EbK+45epUwEtVrnuCiK/v
e3DtlxV4zP8Rq7GfuHl1R+coDWJ261/7HEPMUFroNbEJag1Lv+w8Q5y4J5DC
sw2eBF6Q3TZM7LtY9KZjEJQNBQW5TRLXeefqqeyGK/5Gld4UZaR4PH/aybMH
4v26XIIllTGmNMpGwmcv7P9wtTBsBcmzXLbnuoSCn0/4j0gV4rq0pnOOYeD8
ztz2X23i00ruMg7hsNFLPPuICXGw7Iju5n1gyBkYSrQmPimIvFv3g6pHkWGK
PZnfLu6T9Ww/yA5EHc9wIblAfvKzBREg7Gb3NsuHeGCyMY4eAXN90mtzg0m/
s7vqXGYEjG7/FJkfSfKfMmMfWBHQui1+WdFJ4oBm6smoSKjt3uxfdob0fa0M
LrdGQrGzYkVFHrHD5+O+ygcg3anGua6c9L8v33qs+wBs2TRzpruP5Fbassdd
DkHfxt1L+DRWk32GTo9U/Qstjca+gvqrMab3lvS0VjRUWwvdXWRG8nnKW88U
RMNFy2uOy5xWI5oISOnaxYAXcjI0DhN3UXlbLGLhk76TxNYW0k8Y501wOgLf
V5uK3t69BikWC1QKx48BlWvemBS5BmO2WKuoWCdCwoWN0f5H1mDtDaXLLjmJ
sFTScWzVOZJ3GuX32x4HPZ6g1ux6klOa3vkUJ0Fkb1ZqoqwKot/3YO6FZJhN
nRD1eaaCte0VD2v50sHS7kej2WviCsnxzUbpcFKAErNyQAU9jnIzaHvTQe7w
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
4v8B0w1jxA==
          "]]}, Annotation[#, "Charting`Private`Tag$78920#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF1Hk0FV60B/CrVCopQ6JSmVWmEJHsbYjLnQiRIiT5qYQkpBAi0TxIlIgy
ZC5KcZMhQhpQ4XLvlWhAGSqRd95a79X556zP+u6z197/HFn3A1t2z6BQKEYC
FMr/3la7+1+yB+4ZUf7vCJou9e2Wvgj/b+0bicnF0rf+mtbUXpQiXfLXDh4/
Hp+Xrv7rLo0Y0wTpN3+duph1Ik66968jhIqVT0qP/rXjtpv5w98E8f89fzpi
h8WKhX+taDPY//SUxF8fbtaHxFHpv15SIsoREFj51/d5po0vDOX+uo0a8S3B
4p/H8yok6Vv+We+IvtuzPf9cJq4xzj7/zw/Mlq4q6v/nR5nDBy9elP/rTmH1
q1tu/POk/96KRdn/vAn6hBIq/7mivSMl+tM/VwrV1QWiwl/3+Ah+1aERs58p
0uVmAaXVWGzEnljIcJ3/bk1YtTFMr9CV2HqVzzJVI8Cbj3Yc2EtcVqR++89m
cJ0zEaEWSIxg1jpIh/D9erc/hxNfdLnuNmoDbP2ib3suEze+K5imbIMq75Rl
274Qux2en2O3F4oH9u51GSe20MzUVdkPt7wMyndRFJGyfW9xq8ABiPZsd/KR
UMTwfFdVMQ8/CPyQkX1wBck7UhZed/IHT4+AiSAVkl/KvnTV7iA48E2sjmkR
W3e4Lt0SAFR30aRIQ+LQKHFd20Ogz+0eiDUnPjXBmuEYCGtc8/RPW5N+8UkO
ifWBsKw79OQFJ5KfpEfVzz0Mwi60d4keJC+rajjOOAxTndKrr/uQXKfv6dWL
h2Fwe39QehDxf9JjHziH4cW2aKm8eGLbOIv40CBgv7X1Kr5M3qsZbkt7EQQF
DnJlZakkz1pza7diMJy3r3R4WkLscuhgzNtg2Grz6/LbTmLLWfNPOh2BTur+
xTPVlJDieVFl8NExaKrbuFtITwnDx+pX/9QMgwrzefcWGJN8B83ocmYY3DC7
bSdlr4Rs7mfh9bRwcEfuBbWjxJFr2htNI6Bfz17MsYm8/yQ9Gm0fCWNKmxbe
3a+MmKMjnz0cA0Y8k7q4IGLDJFkV81g4kUIN84pUxvAor6tOybEgKWE3JH9V
mfTPS++yOgm6AntfJFUTRxZ2ehTEQVBH4pnYZSoYrvvei5eSAJNnRhd61Kvg
Kp5Or8SJczDjV86iZYprsCc96Uak4RXQnXa9b5unihSPVpOW0ptAZ7CPby5T
xfBMtl/ky5uw69pKll4V8cauO6afb8JZPc7HpW2qqBlpKvJ5RRoMHNguzZsi
3v+o8s2JNEjusQ/1ZahhD2/dx/nb0kGgysok4Ysa+loEST6bnQFSi7JFwsaJ
Fy9LnieXAeouczt8KeqYeiRrynFTBjhN1B20k1BHTc4RRemADCjR2pyxzFAd
hx9IdivyMsAzHYSyT6ljS9WV1j3sTGiM0mmuXaOB1q6OoRh9BwwWPp9xbr0G
+hqUBWy7dQfuXHXT244ayH5nXXns6R2IzDudOmSvga5DR0QGBbLA4G2/v1SE
BlJKZr13DsuCO2tTlni3a2DPsRuMgNBskLyvTdfhkfoAHWFacjZEYUP4ny8a
uCrh8Sq1R9lQkP07wFJAE3seuAmLT2bDqUoVTpekJq4ycNvoEZoDJgPHC2ab
aOJw4Cz9Izm5EKze3LDXguTuT9ot3uRCwUHpDy10kueoq2lM5cKKP/nS1xw0
MVyDmmHHugu/xLqOa+zXxLPeMlYKY3ehwFDP3jFRE13pKT6dFvmw8uznX1mD
mhj034P++DmFUOEWllU0oonPhn9/FZYpBBdt8W3lPzXRcdvmrelahZDcZlDW
OGMdDkd5PhV3KQQpmbjAIcl1yM59MDLrfiGIZauM6MA6VIlTHzLxLoJZ1bu/
VJ5Zh67O7r8u9hbD5x/dnFZNLQyvWOn2XK4U7u85U2Wlq4WuoTSVLCyF8Haj
zMqNWojZr51uuZSCZGnK/ixzLZSyM/39PakUTAK3T4bu0MJYpwf0bxJlkDTa
Jq0Qq4XWvvkR/iIPgPqtyc6/WwtbQFIpeEk53PpU3iByWhupc5x+WYVXgs8V
lrz3BW2U8mqKvH+rEvTM+EdqErXRV38527C+EhpS5qmFpmvjhqhbJ+lz2fDN
etuZgTJt7L3j8dTClg1GpeO21XxtVNWaNVk0wIZ3keu6gvV1sHrvlYalq6pA
ROb2UG+vDpY9LfF+UlAN8f/d80xV0MWAjpHtnvx6GMecXq8wPeyn+Ofm9r2A
AK3qEsmnG9A3y71BpP4VdOdVn3opa4A+g2d9ZMpb4bf3m2urQzZi4n6Ngfs7
38Ja4zl/PMsN8e2uIm5HwnuwSJPdU7jECNOa1ePbLnWCTqKIUu1yI7RqhI7a
5E5Ydfp373tZI0ztoR8vSu+EieBWd0FVI4xnFnKOFHbCXZuTLg5ohLkWU5Nt
jZ0gLvDNfsrLCM8/8dEqmNEF3TvZZpYPjXDFDHntCe8uOCyzU467A1DE9r3x
VnUOuFtrbu10A4y73kxboMMBZqRAXLsn4NtzSdZsfQ4oDaR/a/IFNJoQtF26
mQNvSvrZD6MA7ZJ0Dl3fzgFNuv/Oi7mAG0ZtpvtjONAfEp1sMQnI4TLlL3dx
QPWL/fx2BuKqsocmz492Q5kdvTLOGjF89PapX8e7wfSxyUEjW8RjJeOP5WO7
wem0RkeGI2JaguKnvee74aTm3JyAXYhexlUFzzO7oS/gkZVYMGJUT0Xg8+Zu
SJ2Si2PcQuQPP/86tKAHxBcOC1VPIDL1LOYdte+BV4/jYiynEN/5rzUOcuiB
8/sUZ7+YRtQa3f3Hb1sPiDU4zXwvaIxl14wXuTkTR9dMDYkYo6o5s0Btdw8s
+p30fZm8MabtMWyPCOgB4Y+bOw/SjHFYVBhkzveAYOW1fPlkY2QfGnvlVN8D
7w3NqN3XjfHrdjlt+ec9kP/wS0/STWMsTyELNfaA0/1NYmK3jdGgYkHtwZYe
KLzbHUApMsabGwykAtt7wCVZ3qCrzhiLWxtFN3zogbLgnOrLI8aoRPe4/GC6
B/bqlL+bSzPB+c2Kzt81ucBuac0tY5igQs/VFDctLizePxy2x9oERws4VS+0
uVCZoahUY2+CQ3kvKu/ockF8yVn/cFcT1L0rk8ww5EL5L4/5Pw6ZoKG8S+Eu
Cy7MrxTZ1JtqgufPbG2q28GFHEv31IpxE3wRu/5UahQXdFRljeCXCRaZ7rpd
Hs2FCpGejsrfJni6Qnuq9QQXWl47L3lCMcW6e3RHoZNcGHXedvrpPFMUwp9d
uxK4YORvHfpshSm+/s/x3vglUp9k5PjK3BRVZALuncnkwtjnpYv6Lptiw+H2
hrwaLlxM+ViXfNUUm+cYziis5YI2qyTMNtmU7NseUlTHBb8ixhD7pikeK9qi
VVzPha9B4c3Xck2RxpJqzGniwodZffE2VaZoNxy/PqSVC60rC+c+/mqKf+ha
smd7uXDP1mLmRTMz9LJx82NTeBBGjb5R0meGRVyLJ2IaPJDtsnqbHr0ZkyWS
lbLseWCgF3VRWsscFX54PFYK5sGOFS9+Cbw2xzTFmaPal3gw1pDA842wwMDP
ZRaf8niQKOgSsEWBikvGdEZknvLgz64l618qUbEzITjGk9jjacsYazUVE78/
+ZRHrHnc9DBDnYr9TrUroJoHz6ZVQqgbqBiuGATONTz4MTESZkSnYnNNQfDZ
Oh5s/Xby1JoAKv5seBby+jkPxDn30mZUU3F8zIXb8poHp4WPHi2tpaKwUspK
8Tc8mLfRzHFfPRUnD61Za088I/HVgrZmKtKf3ch+S/zdZigo6x0VzzqwGV2t
PGipUWFZD1GxQKrZsKudB/F3r/1OWWqJYk7rI8s6eDDraISdvp8lrg8rPc7j
8aDk25dflQct0fX6DMvFfLKfp+MN80BL3K2c1m9BXM3S+GR7xBLFUz8V5xJH
yXWF+URbYps152hALw8En23ISb9qiXdS+kcnP5D5xIcFRKoscfk1L4nv/Tyg
ZLnk88SscN+ttU5+gzyo/dLuc2OxFR4I775ynThe00Z9h5QVBqbOzHtOvKTM
9G6rjBXW2E3sUhzigXqdSs4zFSvsUl73q414x4fvmXlGVphoatyl9Y0HD2Rj
rod4W+H+XaDWPMID/6T8BLEqK7S+ta7pyk8elE4mxVRVW2H5hb515cSTLici
/Ous0PNK1yEOcYy886FXjVaoK/nhmsIvHiTnznM+326FVfGp7vnENRW7VcW+
WiF7/Z8vFRM8kOIvey4qRcP+kOyI2kkeOG+eU/NkKQ3Hz30f+0Ccdvt7hZ8M
Df3eTNJmTfFAdV990Us5Gho2304xJTYeC0w6p0ZDZb2YdxXE3nNe/SdqSkOJ
wf7q/D88eLw2VkjUh4Zi0dTRIxQ+6L5Z0nTel4a9IccGLhEXhN4+J3GQhuc+
HK3NJ05rql0qFUTDRalLNvCJYw/MUlt5nIaFDvt+UwX4sKX4uI3aZRo2GVMX
LZrBh48GR5MsK2j4XU+lJ34mH1z5wjufs2ko0vv4Szrx+1PJ8oynNLzhIsh/
SNzYWZ5r/YyGLwe74/uJi45NVDi8oiGjPrDdRJAPoVWH+bv7aGjTyrAfIRa1
8lc9LkLH4YrRHWaz+ZD6ZOF8A1E6RiSfOehErKl/d+CbOB0/blf29yVmqvRn
uknT0dQgSTmZOG62i6yxAh21lrsf+k4s+NRSkmJAR5X6OTlJc/gwvlGWcmw3
HQffWk2/E+JDdHEFZ70XHQP0f+h9JZZYu+PxV286jojynChz+aC99EqIsy8d
Axsf7VQi9v0pPGZ4hI5Fr07u8SMeKPk58Pss6ed/5djMeXzoVGt5HfyIjhck
BjdJzefDjc+iR2dW0lFxUV6NMrF7lq1SwhM6MimOhnrEAwrtQam1dCxnp43b
E48v48jUtdAx/lVa6nli0Xlf9kh8oOOCipo2IWE+mPfNmcxbwMDRfFnlAeK5
tywzNixioFmsX+Y4caPbKWaVGANPD26VFFzAB9sukZutSxgYqCv1bAWx65vF
5pOyDPTb/zXAlvhIlfxZS10GcszvTD8gLrgOCr0uDDwvv0w3VIQPIyEjc9zc
GDgWPpkZQ6zrcPtz1y4GihTGzbtAXL5wYXG7FwPPCbZlZRHXhnOMn/sz8NOW
t1ZtxB3uR3cWnWBgssw5ObWFfJitXJ4UnsdA/di1IS+JLWceODZVwMC2988c
O4jju+XcQ4oZuPxw/NoPxKKJcasDyhgY+u7d3Z/Ey+c6le2pYmDZOEd55SI+
aH3+2cpsY2DQKHXkP2LnfF1RmT8MLB2f0vtBfN/pp0gLhYnWglleFFE+iMx+
KBw5k4nNgW/i5xKzd2wSGhBi4ob5efnLiOXmmU2XiDPx+kt0A+I+D5uv9NVM
nJTfcjyK2GfpvvpQOyYyc9eozBYj+9ao1Wk4MPFLrPiHBcQr/YaqeduYeJ6z
9spi4pY6fzZ1JxNf7V3WoUCsdSi4VMKbiZ8YlnwT4h8vTmTkhjFRRCNkOpQ4
PPpmRGc2E2MkY8oHiBccnmPldpeJuZNTtUPESV77xfrymeijT28YIy6m6acP
lTBRXeNCmYA4mVf0ZfWMSiYqbG3QkSamXacIrX7NxB197cXmxJKlO08f+s1E
53cG85OJ0+/UbJ2YYmJt8Ee5m8SaSWtXhlFYGBR8TDuT2PLoj/zYWSx0kUiA
AuJQ0zMvry1kYa7yEsFqYt6LCokqeRYqoJb5J+K7/TLXROgsNBA4/XGdBPlP
UqJdOUwWnsj4na1L7LHlq2KeDQs1p5o8NxIvf/SogOHAwpCZDXVmxHFnttfG
u7Pw4WLUdCD20r36bV4wC5mP76eHEMtFSVDnZLJQI8/d8RHxnw2hC9rvsPDj
d8+NbOJ3X/mvMnNYuJ89U6qa+KxDsbN5IQtPB6hWPCeeXrPlYPQjFnJKsfI9
cefLM9dnvmbhmVGd5B/EZSd+7HrdykKflz+W/ya+uHHn6vS3LNya2X3lDzEt
Q73EhMPCt+uNQ2ct5sPDoKb6iAEWvnqPFHHiy2rrz9h8YaHsnlW2ksR+vGQ7
2SEWZvd5p0oTq9D3dbNHWZjaF7NmFbGgwJtbZ3+w0DLz2B554p57G71dJ1io
Xyd6Q4n4kXe6huYUC30tjV+uJr6ycv7Y9DQLB1UX/FEl/h8n790H
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78920#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78920#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
7d9snOyqm/2fr8gt/PL3Lxsx7H7pVuL/B9UiCQ4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$78920#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.7937074825857573`*^9, 
   3.793717669652536*^9, 3.793718171603578*^9, 3.793718265966525*^9, 
   3.79371844033608*^9, 3.793719538400247*^9, 3.793801385339682*^9, 
   3.793801472289188*^9, 3.7938015618457212`*^9, 3.7938016357626*^9, 
   3.793801738929451*^9, 3.79450702131807*^9, 3.79450749314021*^9, 
   3.79450753881437*^9, 3.794507660648489*^9, 3.79451310787087*^9, 
   3.794513176673102*^9, 3.79451502956105*^9, 3.7945153134771338`*^9, 
   3.794568639563764*^9, 3.7945689988957376`*^9, 3.794576043479067*^9, 
   3.7945766825373497`*^9, 3.794578134470708*^9, 3.794578426178759*^9, 
   3.794579358155855*^9, 3.794579486676691*^9, 3.795513845105155*^9, 
   3.795513892367689*^9, 3.795514545806834*^9, 3.795515771561676*^9, {
   3.795516175562888*^9, 3.795516183123291*^9}},
 CellLabel->
  "Out[1349]=",ExpressionUUID->"4ef9efec-fbae-481b-8f9d-92c510c1fd49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"figoneshot8scrit", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], "+", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sols"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], "+", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2x8s"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], "+", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2x8s"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], "+", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2x8s"}], "]"}]}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"sf", " ", "*", " ", "10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"CCq", "[", "t", "]"}], "/.", "sols"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"sf", " ", "*", " ", "10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2x8s"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"sf", " ", "*", " ", "10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2x8s"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"sf", " ", "*", " ", "10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2x8s"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
           RowBox[{"FindDivisions", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
              " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}],
                 ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", 
            " ", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                 "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
              " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
          ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",",
      " ", 
     RowBox[{"PlotRangePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
        "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
        "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
        "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<No intervention\>\"", ",", " ", 
        "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
        "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
        " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", ".5", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"importtime", "+", "2", "+", "8"}], ",", "1000"}], 
           "}"}]}], "]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.793640548791997*^9, 3.793640579046043*^9}, 
   3.793640618867655*^9, {3.793640919037943*^9, 3.7936409215073757`*^9}, 
   3.793641019556532*^9, {3.793641363983626*^9, 3.793641366798842*^9}, {
   3.793707412283104*^9, 3.793707413066648*^9}, {3.793718393317738*^9, 
   3.793718393741166*^9}, {3.79450732784756*^9, 3.794507329446725*^9}},
 CellLabel->
  "In[1350]:=",ExpressionUUID->"14a293b1-e0c0-4fb1-bac3-9a88af9f7b79"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
73NzTKy8SNlqTxsg/gfG0JU/
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79031#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$79031#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
/A9O+xp5
          "]]}, Annotation[#, "Charting`Private`Tag$79031#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
riD+B2Plh+I=
          "]]}, Annotation[#, "Charting`Private`Tag$79031#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79031#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$79031#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
5GrMb2rq3gMiQ4X22Gu87JKD629qsY1B1uQjexz8uCRyf2GBOiTcXsdeZQ8G
/zhlGW2BanODjUu5wx7zl5pn7nyap0qU7rx4+I897gZ+3z7pNEvNulu/5fei
PbwXNj93UJulklJV10eyMZGTl2Y0s2KWahUxXxi7gonA3T0dC09+UsPp8e3X
BZl4JMJfzC7/kzrQWilWK8uElG6dXP7KGer9EenrArZMHDXbNJM7O0WNTT/t
+cGeifNcyZ873kxRfZwm5AscmVjvZH+aWjRFlSovL7JzZeIW00enf98U9Vz8
joY4byZ472TZ2jZNUvfqXpvmOcpEwKDsSqnmCSpjjK20N4yJ/ji5Le7xE9T1
N/eG5x4nzvWFXDsJpwlqF7c+p/UpJgxCxRO/vRunmvV3SZ2NZ2JddMYf9vEx
qswpMUvOO0ykjyYx7BW/UZf0w/m77zIRWoymrKlRas/E4Js7eUzI7sgw9Hk6
Sk1wLXY3f8CE8oLzRxnmKPWfilPw6XLC/j2d16MjRqh97fE3lncwEVX77IfC
xBC1LGZ+V8dbJmYKVl15Uz5ETTbcqZz1jgkvZtHW/rghqs1tjUe0D0yEVYQ0
8mkMUZ+GNr88McpEcEZgQhXrK/WKOjnecZyJ+8+zdzMtvlIDB9KcN04y8eBB
zFv9NV+pSrb7P1b/ZGKjkusv8ZovVI5lndkJ80xottb7cV3+Qv1UYujv+ZsJ
k4jB745+X6jl/lmapEXCX9OAoWnjL9Sr63ln//1jolBVrXBY5Av1/wD/thYT

          "]]}, Annotation[#, "Charting`Private`Tag$79031#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
Gtriq8gVHpZSBUhVJXfuI2wxwAIhqQgF4GL9iX4zW1STnXbcXqOAuHgdznoH
W6yUo/6a1ZPHnMEmFsZOW1RMNYablcsi5XbdJ50gW0yYnTTJY8iCpOzxaGI3
k6WCrjk7yEJL9GyMZ6gtlFNKuH9MySD0N9cvw0O2ILhfbyszkMFY9e+xfyds
0fRMyaVgQAp9Kh2dBx/agv8WUXNlz0Zc+M4bt7LeFnXPbIYOWG2EX4mz3PHH
ttDUpJ87Kr8RYzLd0UVPbSE87vJnulUSc2KfJFo6bDEyvFj5vnEDeNeOB5K+
2uLz8azizJfieNuiwls4YotrPCdrtE6JIzdl3335b7YIXMkLJ1dxbFgxw2Xw
0xaiPk0bpvrFQP7955bvH1ssy0kZlv4Whfnw6oVybju4eS7t3EqIYE2x1RXd
9XZQuzWvKL5WBG2+x+wb+ewg48ktbvNOGM4feS6+E7JD9k2K8UiwMHzeCpgv
bLKDXVwx24qLQjjUKH3CimKHta5SDE5xQVQWEjJfvOwQYTcTcXgrP2ZiZlb7
+tohRulP7yp1flDcrn3/uMMOZB4/0d7V/Hiwbt3t7iA7jPi8fx1ey4enCZ+M
X4TbYXNpQoeLBB8++MV5V6XaoWJ1ROS2X+uxgdAwVTtqh9s73mZefb0ePmJf
5W4cs8M9PcdY/fL1GO60/XHlhB2qwHGVGrQek2bicefy7DA2x8o5VbcO7PIP
8hLK7XCo6pax6R1uWK3cx1istMMJj+oT7pHcyOiX8ou5bQf67yL8pHKDNzdd
MaLWDv8Szr/IfsgF8TXbagMb7RB3537UzRec0Pz++519lx12scuLO7CshWcF
hVdiyQ4rG7leqz9iR8223zwdLPZofDyw2z2NHTzs97mSVtojIkYuf96ZHQ0e
RhxjHPZwfTxRd2J8FaTWmi1X89vj68XBIRHpVRj2d5qwVbTHBq7I8LrilaCt
5/++rGyP0xaXhF9FrsTZB29Hq1Tt8ZdqGm5utRKWfFu/CGsz30eVSN/5kxWl
9V4fvtDsQQhXvHEEK0JEg5/FuthDStLeUm6WBU+bVVrU3Oxx5bz2ZbSxQDLs
Z9Nnd3vYNM/w3ClmQUdLeIOltz0o15zXl7iyQPPAwbuk3faIHg+vdYxbJuZf
pV65EW8P8Ss7vtcaLhIJKRcT+0rtsWR4u7BW7Q/BHbXa2vemPQ7LWkhUzv8m
8oL28g1XMN/H8Y1HsuE3cdtG7/LPanv4WpjUe2/+TQzzvm5irbfHU9+keOfY
ecKmkIVDsdMe34fj3ht9/UW8zwrouPnOHsnRI+Im1b8I/8S2XM339ngrN3e5
IukXwfDPVTT8aI97vqMTjdK/iEoldRuHEXv0cwXm3wqaJQTvemce+GeP34yG
VV/ZZojL15td/y7a44BTkA1/7zShnqcsGc/iAGMPidSCimnCKm6+Im2VA8SF
W0yfbJ8mYk2zXp9f54Asgcf1xrVTxOdXdaRGaQfEZmXePZg4SdwclTjPY+uA
1zlGtqeLxom0ghSfT/YOOGWwn/WD2zjhv3lCttzJASdzJTw7140T4g8fVtq5
OSA7t1G/I/E7kZ61/WmGnwPKDo1rvdn7jQiinJtae9ABKdI1rNX+o4TZd5a7
vYccMFSVM7pVbpSQLAqKLWU44HRItdfZ0RGia43uautkBxw9co7yIWSEoH/s
Ej+a5YC+tSUaroeHCalkkuVq5r1fleRW0/nkC7GkG8vdfd0BkhL5b/0zvxA9
E0NvrpY5oP3MPOOg+xfihNttT/NbDrhwtU1QcWqIWFbavD/loQMOvB0sPSw3
RPS9zipc2emA369tZZSuDxK1qfM7Ot85oCAv9mJozCCRbeCtePm9A+KsFeUU
7QYJmyuq1SafHLDi85sv32cGiPvR7c8SxxzwIc4965z5AJGjopPlNO6AvTw7
ipzEB4iwz/kum346oJCkN/H1Sz+hYBvc3zDrgDr7xsX3RD/BtuJt8Yl5JqtU
DST/+EQM3DHY7fPXATm3Tjz/W/CJeLj7spr6ogO29iiL6tl/Is5Kcv5aXnaA
drGTKm35I/F/APSUvG8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79031#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[141, 7], 1000}, {20.142857142857142`, 1000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 800}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.793640561309989*^9, {3.7936406007279778`*^9, 3.793640619274135*^9}, 
   3.7936407371030693`*^9, 3.793640921932763*^9, {3.793641020095443*^9, 
   3.793641028238113*^9}, {3.793641367539876*^9, 3.793641391818853*^9}, 
   3.7937074830909*^9, 3.793717670054027*^9, 3.7937181722671413`*^9, 
   3.793718266342307*^9, {3.793718394333028*^9, 3.793718441377398*^9}, 
   3.793719538749505*^9, 3.7938013857599497`*^9, 3.793801472627562*^9, 
   3.79380156230402*^9, 3.7938016361038094`*^9, 3.793801739331431*^9, 
   3.7945070218180656`*^9, 3.794507329916999*^9, 3.794507493977282*^9, 
   3.7945075391533537`*^9, 3.794507661009301*^9, 3.794513108229198*^9, 
   3.794513177028054*^9, 3.794515029968554*^9, 3.794515313985587*^9, 
   3.794568639941785*^9, 3.794568999427291*^9, 3.7945760439020023`*^9, 
   3.7945766829305067`*^9, 3.794578134862224*^9, 3.7945784265767937`*^9, 
   3.79457935881396*^9, 3.7945794874268*^9, 3.7955138452938967`*^9, 
   3.7955138926138906`*^9, 3.795514546088554*^9, 3.795515771827792*^9, {
   3.795516175805357*^9, 3.795516183332509*^9}},
 CellLabel->
  "Out[1350]=",ExpressionUUID->"475d9d58-5559-4269-88eb-fecba4896127"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot8scritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sols"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2x8s"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2x8s"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2x8s"}], "]"}], ","}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
   3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
   3.793641549374053*^9}, {3.79364160744447*^9, 3.793641612397052*^9}, 
   3.793707444101577*^9},
 CellLabel->
  "In[1351]:=",ExpressionUUID->"e049e1aa-3e77-4c05-a70a-89e105223be1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxF1nlUTX3UB/DbIEmaRCpRKdKkJ83D3buR6g5JiaS5NJBUFPI0UBINKiRJ
RAhpQpSKUqFUktJwu/ciejQhDRTv713rfTn/nPVZ3+/Z56x91jrrKHjtcfDl
pVAom3kolP892/p+aq8dukul/N/BbyETMiCdCf/v9Rezcsqkr/yxXUtX6QXp
8j929pl6lC5d/8f9645ZJEu//uO8JcyEJOn3fxwrWLbmuPTEH2/ddunO+Bd+
/H8v/B3rumGF6B8rbxr9VHdC8o8jXhpC1oT0H0uVi7N4eFb+8T2uRXOrieIf
v9kY+yV5w19PFlUvpTn8tf4hQ8+mnX9dsXjdZG36Xz+wlJEv/fTXVQXjYZmZ
q/64T1jznMPFv54NDaoWK/xrUxgUTK756+qu3gvx//11jWBj435U+mN2MP+I
jh1xjPRamuI8oHSaSXxzIm5ynd3rqwXyxtH6JR7EbK+45epUwEtVrnuCiK/v
e3DtlxV4zP8Rq7GfuHl1R+coDWJ261/7HEPMUFroNbEJag1Lv+w8Q5y4J5DC
sw2eBF6Q3TZM7LtY9KZjEJQNBQW5TRLXeefqqeyGK/5Gld4UZaR4PH/aybMH
4v26XIIllTGmNMpGwmcv7P9wtTBsBcmzXLbnuoSCn0/4j0gV4rq0pnOOYeD8
ztz2X23i00ruMg7hsNFLPPuICXGw7Iju5n1gyBkYSrQmPimIvFv3g6pHkWGK
PZnfLu6T9Ww/yA5EHc9wIblAfvKzBREg7Gb3NsuHeGCyMY4eAXN90mtzg0m/
s7vqXGYEjG7/FJkfSfKfMmMfWBHQui1+WdFJ4oBm6smoSKjt3uxfdob0fa0M
LrdGQrGzYkVFHrHD5+O+ygcg3anGua6c9L8v33qs+wBs2TRzpruP5Fbassdd
DkHfxt1L+DRWk32GTo9U/Qstjca+gvqrMab3lvS0VjRUWwvdXWRG8nnKW88U
RMNFy2uOy5xWI5oISOnaxYAXcjI0DhN3UXlbLGLhk76TxNYW0k8Y501wOgLf
V5uK3t69BikWC1QKx48BlWvemBS5BmO2WKuoWCdCwoWN0f5H1mDtDaXLLjmJ
sFTScWzVOZJ3GuX32x4HPZ6g1ux6klOa3vkUJ0Fkb1ZqoqwKot/3YO6FZJhN
nRD1eaaCte0VD2v50sHS7kej2WviCsnxzUbpcFKAErNyQAU9jnIzaHvTQe7w
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
4v8B0w1jxA==
          "]]}, Annotation[#, "Charting`Private`Tag$79158#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79158#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF13k01N//B3DaCBGpULKVEFL2Ja9XGcMwC1FJkqSSJUtZKoosCUWhkJ1s
SbJEpSxZylIiS0XWsSTRJ5VK9bufc37fPvPPnMd53ntfr/s+c+e8r5S9287D
Czg4OL5ycnD8+21yePxl9USZPsf/fxYZiLn3i8bC/6yaGp9UIpr116at3cXJ
oqV/vcfh26OronV/3bf5gsEl0Vd/nbaSFRouOvLXgdwlGy+Kzv611d70OzOf
FuH/zPsn0MZoncBfbzD/OP4kQvivfZ5rQ/ys6F+vLhV8x8kp8df3hgxaXuhJ
/3WXceCnS0b/+Wvh41X0nf9Z84z2wadH/3PFis1fq6/+5/sUMcni8f9cmT1z
IjZW5q97+ZQTdqb+53lP58fL8//zNhjlvlT1nx93v00Oef+fq7gbG71x/V8P
HF80pWZKXP10A116MXB0bhf6vIuYW2+L52EVkNQ9p3nXjthM8vgaRX3A9Eob
N2fiimLlnN+GYMf1I1DJmxiB0vmRDgGumjmTAcSxtikHZ82hWrv409FrxC2v
i/5w7IVap+Q1ez8QH/ThvWXpDCUTzs62X4mNVLI15Fwhy1Hn4SGODcixz7mk
k9MNQo50Wx8X3oABd+wUhRw8wJt9M//EOpK/TRZIsfaEIw4nf/jKkTwuPy7B
8gTsGd5hcnYrsdlbO7GdJ8HYXjAxSI/YL3iFhoUXaA/2T4RRiSN+sBZYeYOC
XaH2ZTOyXmTinvhn3rCm3+9ijDXJL9KDny31AT5b09fxDiSvqG06z/CBX72i
8inHSa42+iQh1gc+7hv3zfQlPib6hf3OB17sDREpjCS2CDeK9POF6h4Lx5Jr
ZL6S3t6MF75QtEe6oiKN5HkKWYc3nIKru6r2PCkltvU6caHnFOw2/36tp5eY
tpj3ovUZMGprHO0bJfPVDGJ2VZ8BLdY1jeEZkv9oXbtGzg9EGapdU4tkSf8c
7Tt/+QFPC6fsZ35i5wUeOU7+8MOkzWtORBYDhG+uf/jaHyafpdT/kibeVLU/
0OQs9Bq7rlyoRMYfiZX7WHkWvshuE7jtuhHxlppM/swF0B/a0RjuS6yXKCVH
DYPQZONzjkEbMSDYMcE6KQxWCVtOyyRsxOrBwsw+k4ugwen8IrGOOOhur0NR
OJytdL/g+4KY3yjtMm8ENPh4w+43xGqn7rgdjYA9HwPvCM5sRA6PAWVrqUjw
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
xnP+9XUJ3i9//rBQxGOBdibx/wEZmgNp
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79158#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
knXTVKTwsWsJlDPBIlBb1PMzFZX9KeVKxG+MBAQ75qhobDw+6Ew81V778zob
DWdbzy/tI17zfm0r3xoarlguonqvggkHDDgaHgvTkKJp/b6VOCP7c7XHOhrK
UxdZjRLLnWi591KMhh3vui+sfsAE3a/eCdflabjn4tL1vsTOHB3H+PRp+Fgi
7NmWSiZUyYZw8rnSMKPjso3fQyaodq1+dsOdhi+pzRLhxMV+2dcFT9LwjaVH
UypxxrNG4TU+NDx+fHtsHXGI22L5DRdpKCofcGzJIyZYllzcIR9Dw0jHJ+sv
E7fu419VFEdDVcqa6BhiCnvGG6VEGtaPTozdIlazfnxEJY2GT7zVZeqJReb+
nNLKo2EJJUb4DzFT81yCSTUNS5UHJ1yryPP9PffB1loaDr6K3etH/OZqkrjp
Exq21c3mXCFu63uYb9FMw8OUWx8zie+d/1G9u4OGEzYrVvUQ+9Wdfn+UQUPF
01dE1KuZwEf1lLvIQ0ddxsskBnHaY95lmnx0vB/THj5DrKRRMD4jQMcVJ3KO
LhCbSY3dPiREx9mpqTq+GnJfl9hu1JWg4xL1zfpaxOxPTFaxaNJR1Ucl6grx
TU3mbLk2HZs/e36+QSx2L6jTDehYe8FOI4kY02si31HoyEYVvFhIfM5/27Ia
czoy/F3ZO4i/aW1kOX+UjhmHXL4L1pLneUn1wDYnOi7+ePKHCLGg7P6qj850
dNLdzZQgVhaOPXPAnY4W9/wvqRC7z3N/1T5LxyfFzF5L4vHS+fGfkXQ0s7ZZ
EkbcJ9/e6fuI7M/oa+IMceoE37lFNXQUS1u7fI74cO5OyWuP6SjxydZj4W+9
RI9PWiMdI11rBDgek/nWDqxraqejlLLbk7XEfFyTjoKjdFyv6DSkR9zVJM+X
wqTjh+oHkUbEcZfcKjd/oGN9c4cKnXg96xdurWk6vmwd32dNLDf//e6h73T0
uZMm5UhsyOBYKFxuijszY56HEC/NMrmlvsIUnes0u8OI2w5dNavjN8U8841d
kcQ7+3nSX602xZE5gZI4YruulYYLG01Rz0ONJYf4bJ14pImqKaadr/xQT1yc
AhIjtqbIybH8yjzxlzNfOA4dMsUDjp2eP4lVd2dP9B8xRTH9dOvfxA95eUt6
nExxYs31Jex15HkZMKDb6mmKOgc9V/MSvz187uC9YFOkHgtkkyBeD1v0Fa+Y
4ljjQKAksd3aUcn8q6aowFD4I0XM6KRP3Yo0xR+DjPfyxJ8oIufiE0j92FZH
NeIlmx8mBBSa4pvGVjsTYpNFbud/FZtioVf1ZRpx2Duxw2dKTJEr/nSuKTFf
XKi0V4Up1i9y799BLLLUpsKxzhRlGC85bYi3Tsy/Musm6+/94X2M+ECRKt+6
36b4xVruVxDxfZt5nnYWMwwKaC0NJuZZUskduMgMtdO7HEOIa/dv5xznNEOT
TOvaq8RiXJQ/pQJmuE3VSfvG3/3Y7/hIlzbD93XrnFOIdVYITPyRNcN1Anf6
U4ljH3aN3VMww0ciVqbpxMb8e0bWqJjhi+RNG7OI82ps347omOHtT/mJucSu
wida/KzMsLY4YKTk73k3yDcp7jZDTNi6vox4g8d0/fBeM9xacN3qPnF7k2et
8UEz/DDtW17xd7+nfMsFnc3wjSRzVxXx3IvgW/n+ZqhZnLOokTjgUvqFvjwz
tIjOMHlFvPw0B/VQgRlSC7KFuokTnFz4GUVmuKAWx/zrEppG5nSpGc4eNTvX
+3e/fC/r2WrMUM7xRuRbYloKC6d0JzmvVTdthoh7IxzaC16ZoQ3jwrJhYvsL
bXFbe81wQCa78q/P28dJa/ebYejLbIER4mIZJZo50wwte9nvMohXlR8MP/XT
DK12uSRPEGfmNOz68Yucf/F35UlipQTZDf4s5ij1gK3lr03OzRWFLDbHXp/Y
qY/EfvoRLxN5zfHkGgmpT8TDL6oF68TNkU/k2u5Z4oKxdYk8dHOs0Oip+kkc
knzJbsDMHNlz76ou/J3X8uOmwh3mWDwtW/jXIo8eFZvuNse2jOXxv4hDI/Y1
hh02R49fI7Z/iJ1U42e4fM3R122ggO0Jed5PsJS/OWuOcUvN+RcRb0hz8ss7
b44J36NP/XX3UnUOapA5Dp4pVWcnNujvFrkSYY7DB2/eXUwsFiRozHHbHG9q
9btzEv9W91vek2OO7ir0+r9+/fF9x+075qgg1rBqKXHk7pIDhnfN8b7jQMVf
/5GxPHnpkTmyHZ+Z4SLuexmRsqjTHG90FGksJ64InjvS+cocrdz7zv91lNZB
6cxec8xX0njy17RbCqV6A+YYnRVmwkNc6fOs5cK4OepID9B5iWPkt0XsmDTH
x3eeX/1rj+Ekq43T5Dwd2Z7+tRT9xLvaWXOMyQfKCmJ21q6syDlzzBsyC/jr
wTItZ7sf5vjQ487Dv37knKmo9Mscebh2f/vr2A3Lvv75Y46M3TuV+Ij/D0Hj
pNY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79158#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.79364161512011*^9, 
   3.793707483425294*^9, 3.793717670403764*^9, 3.793718172855899*^9, 
   3.793718266664559*^9, 3.793718442500621*^9, 3.793719539045751*^9, 
   3.7938013880313177`*^9, 3.793801472911708*^9, 3.7938015645783987`*^9, 
   3.793801636391767*^9, 3.793801739620564*^9, 3.7945070222936783`*^9, 
   3.794507494472044*^9, 3.794507539441723*^9, 3.7945076613143806`*^9, 
   3.794513108527729*^9, 3.7945131773343287`*^9, 3.7945150303039513`*^9, 
   3.794515314430607*^9, 3.794568640244478*^9, 3.794568999832246*^9, 
   3.794576044305722*^9, 3.794576683350511*^9, 3.794578135235751*^9, 
   3.7945784268994493`*^9, 3.7945793592556353`*^9, 3.7945794877294283`*^9, 
   3.795513845562728*^9, 3.795513892733303*^9, 3.795514546394617*^9, 
   3.795515771969304*^9, {3.795516175928775*^9, 3.795516183474902*^9}},
 CellLabel->
  "Out[1351]=",ExpressionUUID->"81fcff38-20cd-42ed-a259-4ec69eecaae7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot12scrit", " ", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sols"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2x12s"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2x12s"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2x12s"}], "]"}]}], 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sols"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2x12s"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2x12s"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2x12s"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2", "+", "12"}], ",", "1000"}], 
          "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793394861836452*^9, 3.793394918159622*^9}, {
   3.7933951496126957`*^9, 3.7933951633752604`*^9}, {3.79339523317878*^9, 
   3.793395327131968*^9}, {3.793395363113092*^9, 3.793395454093955*^9}, {
   3.793398236334831*^9, 3.7933982401612463`*^9}, {3.793398273947652*^9, 
   3.793398297786425*^9}, {3.793398587977316*^9, 3.793398589049642*^9}, {
   3.793398642868155*^9, 3.7933986473815727`*^9}, {3.793398766872898*^9, 
   3.793398769091921*^9}, {3.793398847935656*^9, 3.793398887738555*^9}, {
   3.7933989372257338`*^9, 3.793398938788555*^9}, {3.79339898752773*^9, 
   3.793398989638323*^9}, {3.793399423963974*^9, 3.793399443278512*^9}, {
   3.7933996196258163`*^9, 3.7933996224000072`*^9}, {3.7933997698848143`*^9, 
   3.7933998152795763`*^9}, {3.793399870324162*^9, 3.793399874653573*^9}, {
   3.793399955092331*^9, 3.793399981729393*^9}, {3.793400297337214*^9, 
   3.793400299363748*^9}, {3.7934003321033993`*^9, 3.793400385420542*^9}, {
   3.7934018012048273`*^9, 3.793401888718988*^9}, {3.793401932418544*^9, 
   3.7934019352989807`*^9}, {3.793402009236326*^9, 3.793402049607609*^9}, {
   3.793442209711054*^9, 3.793442344238595*^9}, {3.793442922320374*^9, 
   3.793442937773024*^9}, {3.793442988076605*^9, 3.7934430062331343`*^9}, {
   3.793443077052331*^9, 3.7934431164279118`*^9}, 3.793443181492978*^9, {
   3.793640604305517*^9, 3.793640631235282*^9}, {3.793640926091655*^9, 
   3.793640928013129*^9}, 3.793641015622568*^9, {3.79364137194876*^9, 
   3.793641374383918*^9}, {3.793707449793639*^9, 3.793707450610125*^9}, {
   3.7937183978205547`*^9, 3.7937183982066517`*^9}, 3.7945073426895533`*^9},
 CellLabel->
  "In[1352]:=",ExpressionUUID->"1f1eb5cb-25db-4486-885a-7ae0ff7827fe"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxF13k0lG/YB3BbJQopihRhZFfMjH2e7xjZGYSQLSElMpMoKYpE2X6oJEuh
EEVly5Y1lZRKtKooS1GkaJN33nPeN/PPnM95Zp5zX8t93ede573H3peHi4ur
lpuL63+/LXxHHjWNVtK4/u/Dx5AMfiORTvy/tXIzsm5IFPyzZVff9WyJin/e
4jPTkCrR9s+vNY4zEiV6/vm8GDP2hMT7fz7Cf2N9vMS3f3Z2uVA2McmH/7fg
3BE307XC/0yy+zzSenLFP4c90CUyvkn888qKZf3c3NL/7Jbw2+G9+LzzfD50
3ladt6rYzZsnnedtFOp1Sqx83tSsLZfSNWT+eZvHJfei/nnHWKw+e3Z03peo
KT0nvs17TCjcMlBg3T+H3rLW1aTOO0Hm+4r6xHlXDTDuPzSQ/edesyOTiabz
nr7aKG5lP2/tg7rb7uyYd81yjemm1HnfNJaUuT4y7xeXt2wKnpr3L5FTu9T/
zlvvtXDl5eVy/1y7b4FFPm3e9Zcm9qanz/vVEvWz9rnz/sMOaBS5PG9DYog/
8da8G/teZh/7OO9+Q4lWxvd5/813GuHmkv9nWvAjzcNi8/boFXI2kJn3YQOr
Q7+U552TF59XQ5n3Lf6OjlDM+20Q3zjZUh7kEDOjdSoOBNdTuuiUozzW+om0
F3cVEjL6kdrXvORRftYwRPdmK4EL9W57AuQx0y4ztiCqh/Ba9OuIWqg8wg0e
F2k4vSOiArULP0XJ48GqOkPRlR+J809C7heflEes6QkLY8pXokn3+uSO0/Ko
NBk61C31g3ib+0Vc4YI8rPy9tUaq/xJcC9UM3pfII+BPy6mwvzyQ2b1rW16V
PHLyJ2+ZTy4E/XFhrFezPDpc+JZ6bBCEt86HkrX35VHFP3WovloYR3NkH73q
lQdURWb66aJo2ZW92mVMHtfJI6elg1bixmhAgMe0PDRSbQ0+ckmiwF+vbjsX
CX3PhmWYpVI45tfnGrSChMUFLxaw5NfBzHtZZrQBCacZOp0CWA/dd29G40xI
uO0/k6XxRhHKXld1k2xJeJo2LLA1UhlLPCyfZ/iQsEkkPCD7uBoeuhxbdTWB
hL3CbtPj/hvR9Gyz/43TJKwXKI3N4dJE+RbZmprzJHitf3FQK1UTqY63trRW
kLDkdsvS7AItRPckFt5pJOFngQhdS4GMkM1uM113SFhWPJmpkE+Gk93P089e
kaCstHvGP4UC0+6OoddDJOxw02ux4KZCh3maOjhBQpvMnZwbQVRIWGv1jvMp
YMLDZ4kgtPHKLFCMV00BVtsuJLS36KCrQ9+XX1sBL+OH3r5do4tGE4HKpXQF
7H9RbrYsTBe5xoUOqxwVsCBOc7+5vB688S5N7ZACPqQetL0QqI8RbUdR5y4F
XLmzMqXwsSG+KxgKXwlcj4RB3g/fVOigDRh1nNi/Hvs+7kkQ30xHbLZZpH/0
erRmWiVbh9MhvsLhi9zZ9agRs23gv0sHlTvgYWbbegR2u8fP7TDC/pcZyXGr
FRHmOzX58goDf5K/CfvcVcSLI7Ll7O0mMLb81UHvUQTjaWvHpxQTJCzkipLm
1On4n9bhokYTrDkkOPHimyLCuU4nT0qagrZLtttORgkey77s7Ow1RaSxbQoR
pgTj2gMTvG7m4PlZIrKapIyx7PDQ3zlWWN1lNEVoKMNWNfywxGMrkC88f+qj
qwya/MXDEQus4Wu+6NxVa2U0fNYliQZa485Zb5JRqDI846m5UYQNkvUk9HZ2
KIMvzNLh5CQTUhGx26t3qmA2clVrZrsdKLZrTF7tVQH70S+Vc4N2sJGvUOQ+
rIJLj2RGb3HbI/L+u3GLVBU4LeyPCaXZY0DKcH9/rQr4XIqMzt60R3HDVMKC
Jar4pmD18mbVZlDnvKo2X1VF8rrGqt33HWFl3XR0U40qxOp13zI/O2L7OWmm
dosqJl315hxFnJCi3T8s2auKje/THt5zcMLonq0SA7Oq0Kvpeer4xglZbx0j
gq3VsDio8Pnory3gbrEwShxTQ1+F8YrTlq64H0N+cFtZA5qGtEEHa09Ip3z6
Wfx5AzbUn96WfssXn2be9D/doAk5m5++A8UBqNqR3GJB1cRl3dvjuS0BiOqj
XbqlrwnBy7vf2bwMgHh1dmCxiSYEog+3Ry7ZDaPQrX8i3DQxYdurKh+0G5nf
eiXk4zQhukxvTkk9EGaTXQ7sN5pYWszUrMsJwvJth3SG32ui0/Ju9J+KIPR3
q0q5fdTExhh+M/nOIISUnxzc9F0T29eHPybNBCF3jzlbQlALLLPQpGHrPZge
b0tuomohe2TH3dXTe1Dwse6eUJIWmGJchsfOBCPoDFNuV5oWpnQf3P7vfDC0
jQcPtmdoIUKMLZtYHIx72QJqEfla+FTyqJ1ZF4xJW5fk0RrO/6uvr+fuDwat
enpz26AWRGlG2jPSLPD7nCiVHtWC5aG0re/Ws/BYZO2Cg5+10Gr1zrRGgwXf
XZuqNv7UQgvNml+VYCFhTfqqXCEy2oe61yi6s/A8euPrA7pk7HjhauN6ioW8
De2UpzQyvtpI/+TNYmH3a+ekDcZk3BXPbszIY4FLO4oYtiHDQz/GILqMBYWP
Dy44+JAhK0YLc7nDwsRp719lO8noyhUIcHnAQi1j2l5wDxkkPrkmRg8L1tlr
+FoOkJFbYWvU94aFENvdfhrJZCT2KObOfGeBNjvXeCKdDLOmj/+Z/WZh0eW0
lUNnyRBYOmsbzcVGJm/dnawCMob1X49WCrDRXLVYRaCWjPJzwxeWrmVDaE3h
l/fvybiePvgjHGzAKfr14CgZ/LbVL9cas8FO9uwc+Mx53+SJwqumbPRyryp8
+4PzewGXN//ZsJEzFOfxagkFzwMjVvhtZaNb2tfq5TIK4v/7Gu3vwQaPC13v
hTgFus0fLzltY8Ov86fYMxkKhI4Xjn33Y0O9fFfXEzIF60U6bhEsNrxGTeoe
61Igc+muTO5eNlJl5Yof0ShIHrsi8nEfG9PpL2MemlGQkmabYRTOhuKDavYD
awqi9her2Uaw4boo3avLnoICcQlr88NsNB6wMuh0o8D8OIv09wgbE9cVle9t
o0Cx/9vLm9FsyI7xrbrrR8HP6daV246xEevRMHU7mAJyWLgkO46NmjNn37Xv
4zz3/tP/Mp6Nj937HraFU8CSmJPbeJINa4Z6SUsMBSemFqjkJLJxOELgbHM8
BR0/uL9UJrFRXjkU25REwRGfg7o3k9kY+NwSciuNAoW/ZcJFKWysUMz1bsyg
QD7xdejR/9gw2XbQtiGbguFn9BCzVDb2Z26h1edR8KZIcukvji8/0VKtK6Tg
QNtFkzNpbLxaIiJZW0qB3JSMgkw6p54mY4tuXqPA8s/d8nSOEXnne3UVBe6F
/Z++ccyuKRisqqPgTl3WK5xio2Ay6lFlEwW/uIzi9nPcq+x+q6Kdgm20Jd/O
cczvo3vlxj0Kdurrkko41ssWO3f9IQVHby1cd4nj3b2Tcdd6KFiVen0sgeMc
4Qeh5c8pyAwPT/TkuNvssk9ZP+f5vgT+tRzzHI21vzpIgX1Sre8dznrIdd64
MkJB4tTFMg+O/b7R1EvHKSiz4pl8y4kvQ221VMlXCrLp0WQmx/f8ZhZfnqFA
P/xVTDEnH39yn8wU/aEgKKd57Asnf+rPyz4Ucs7l1U5DobIce4kmPLm0kIr1
5n/V6Jx8p1r6N18UpCJUukHKilOPthjjsgIRKsajeq0ZnHpNN8hk54tRwRL7
26nAqafizJ8TeZJUDMcMX5jm1DthZ6XfeXkq9NIfRG79337AlThBZSpc+EP5
Hh1nw3TVxcuhGlRorm3P0ojlxNuR/tlKjwq56z+IoqOc9eQkiNQQVDjJhuxu
ieL0574YTblNVPC0vfvSzunXA/IhoT+ZVFw82moZz+nv3t8BGT6OVIikMa3M
93Py9WR77UNXKnrrZqe+cvbDxJHNfy/6UuFsOBHHy9k/fm80Y+0PUhFke+jX
as7+aqtSLmqI4sS3d6evynZOvyfJ3lOMpSLpUN9Kkhcbrw1EheZSqIjbE5Hf
58KGQ+bkqZJLVIQNR43oW7FxnTVaLV7KWV+pqOh5MzaEzd89P3KNCqLP2PQL
Zz7cm+le41zPye/rBhrTkA26Y/lFvsdUyCwMMF+lxukH1aKOPX1UFHv6V/cp
curFe370xSsq0sQDF0TLc/bX9WS1a8NUjK1sKslezamfyJ5K91kqQqb+rh7i
Z0OqU629SlEbmlq1xa858y88jzS8Tl0bguWVJ/xfsNB3YM3iRC1thIVskX3H
mZepikutt9O08bmh8/O5uywsjh3rEXbQRsuP0iD96yxMo+S9f6Q2TMgLdIko
FuoLPp0Li9GGYpxGg3w4C0f5VTfHxmsj3DlB4s9eFoS6S5vz07ShXve2I2oH
Z357Xs3pL9QGVUNqxQdrFpwOXXN26NbG6QjZEM1VLFTerL5PrNPB04rLNiX5
wQhf8yPaRkEH4a8X7OfNCgaO6Oi7q+ig2vWZhF16MO6b3SwOp+jArFHYsCsm
GO/7amMrzXWQlPmQZuUbjBXTDVBh64BxNoQUKR+MEM22CvFWHchwRdKX6u6B
H1nm/H93dFCw5emClQp74EyNOLnkgQ4Qz7gmsnwP9PXI3jzPddBcOfOuZywI
PEYFwp8/60DkWt7JotwgJNvF7GqX1EWS0273Op4gXA42lglh68LqvpxCaNNu
vLnadvLROj2ELVkVylLchd+7es4phesjLiD+jYG0Lxyo7v+pR+qjjNL2cMNS
X5RyD8VqxeijL1XupOpvH3hkzLAMk/RRPDRaq9/ng+Z2STO7PH2cLYifq032
wXGZbd/239MH7YrSD0seHyzvHbe6I2mA3YrGFiqfvaFCX/TXr84AT55n2VUN
eqH8csn6Z00GaM+TM2167AXyCls789sGOBf9R7Cv2QsGwxkFKo8MsO5gkIzK
eS/YJCpbTgwZID1dTC/I3Qvs59YZB0QNETYo8uNehSdustI1E3YaYgFTO3BX
vTtM89btuLaSBoY/S8BhtSvIGUIKt6VoWLnG7e4DblfIJP1+/2IdDU6V6f5e
Iy74deCpN58qDYtkjHnuVLrgil28xxbQsNNDrrHQzgXLuScdZ/1pUPrNbM5P
dMYbzyZj81oa+naGyG4W34L7jld4PW7R4OMcOJox54Qay8wWdhsNzzrv7/g2
4oRU7RBkPaDhmp+P11idEzYJKxp8GaCBxQpf9cbbCSWNyVqnBAnkftnlcrvC
EWFrPGXfuRFoX9S92tTfAd62G5xebSNwKKWJnurgAJto7hN9fgQucs12T8AB
CqP5k13BBN7tducdkXBAT8VIU20MAdUomm7D/c3YYMX2TC8lcIanfniashkj
4ceyTP8QqEhKOWMmbo+PTir+F7iAHoq4xjCfPbwmlvNI8wKmEqujz0zZwVLu
A0WSH+h6eUBJ7ZEdZOOPZ4uIAm6GQePKiXbodri/e5bEadeB39t8+O2gOuYo
2GcNrC2XWhgkaIsaB6tbJ2yBrXWv+Bq+M8FoMNpL2wy4HLS50NrDhGuSxsuL
zsCyta2a9DQm4jcsLgnZDlzO+nXj5zImhkLqLUQPAJNX1i2DuA3Oz8qesC4A
6p3HfijoWkHVT4LGXQh8HHsfGCplheoHwl8rioEfXTGrhucs8SD3j4tUGbDC
0iJWpcMSs/RepU83AV4J3oWGWyzhGht/N+4hUNPlk+RzyALLhSf4234B9zzf
Sj17a4bHDSeOm88ClZHDKTfumiF1N2nhwzngfouVZdF1M4jec+V9wUfHA8eb
iq9jOD7WPvtFiI48UncWS9kMIr8zv66Wo0O9mLdVPdwUS4Y3vdprSYfbBr1Z
CxUT3D/11vWnNR0Uz4TGNSs59zHjg88P29LR/OVE3kJeEwjmlffGO9Ih/d0n
WPLlJgi4r36U60kHOtkhpgmbwP9kor1zLx22mc3leV+NwXfrXJlcFh1zse8p
DQ8YeGFgbPYmh470tmWZV+sYKKsde5t5gY5DOQsKqooYcK0yFBUtpEPii6uh
QDQD1668CeG6Tsfr8ODUeh0GPLLk9F530OE681GFWmSEmgMlbaen6Lisfqyx
7TQdSTOb3e2n6VDOmyvYEkvH9n1/vi/9ScfOolc/ZvfRIcSyXn/sLx1HNbWP
x3Di8PX/Er93sRFC8uvSQsXoEN2ixbSVNkJQ6pj/8wwggFz3fLGlEQonpb7+
dCHQ1P20tMbaCIaV7aYkGgGxwInIHbZGkK5WPhMsS+DWRZJCu6MRdp2rTPD7
RMPylSnsKC8jHP70prLzMA11P30EZ/YZIb9HSMK1xBCCt4QM3583gmqneWkU
Z055bVUSScs3gp9zXYs3jwEqZxiD9EtGUJITNfT6qA/PDQfic0uMQI2beFpa
q48bFwafulYZQWzjj8E4N31sjakJetRpBH3e4C71i3ooMfc+3zhtBIb+OglL
c12QVdfRiJ9GEOg7cLaZootGobcvb/02whYxyj4rWV10P3Ff2czFwOPFJv05
v3Xwzd0lqVWAc29vmXqsVaYDGts24s5aBqpnE9cvltRBdybN+bEJA3syr+m2
cs5Zl0Oz3+3NGeC9klmdMUbFgGd92hNLBgYi1TsiX1LxTV7vYY8tA7eNl1CO
3qRCooxi0ufKwBrDu6cdQ6nwblUlvwpioPkufwJpioLvnyRFhk4zkNL2mneU
c09Izx7uyDrLwN62s07RI2RoMSsiN2cxkJfq6avxjAzWdesvTRcYmOs8Hlhf
Tcb4/qgH50oZkI4S6C8MI+PDgqEEuxYGDnqknrr2SwtPpa8tbhhnINOvbPvs
Ei2EPDrUvHeCE/+ZyK5LfzWxPNrigPIUZ71iq9w8JzRhNzQ4cuYHA8LpI1mz
TzTRVSp+h81rjB7zuQtj5zTRrhsRqyhhjOhdxTIx6pqo3GzKm25sjD02r1dL
eGxEnGXNMSlTY/yuSrJxsd8IN4YS/0VzY5iKaDcWmGwEj5bg0iobY5gUn5R3
19gIG9GH4s+cjaG959EZe+6NGOl2UpYKNMZDRxwwLtwASRs/u4JTxsjP27z2
2XcNRJody60YMob7DtLlgENqeOzh77Zh1Bgs70vrFAPUIL/PUqL0kzH6RxkZ
35zVcO/CsrT8CWPwipvoNpDVsOJ3dmzqL2M0JaSlCY6rouhKVWCw0CZU/taN
SPBSRbfoiL4qdRPOa2pYn7dXwbrXFs/yj23CjZ0vFCI9lXCiRb/MMW4TNOsC
locwlfC1UDV20clN6OyZWhZGKKGFLUQOSNmEmuZyrkJpJfjwP07WPLcJK9Wc
O0rfKqJIy8W0uXwTWnI0l9J9FaF+YkdVP2fOGFbf3Ce2fz30tGPSJTRNsEt4
f79oMwm93hLUbLIJ3g/efzpWQcLepKt9Mtom0JC4Uf+wiITSD88kFQ1MYEte
oVGeQsLadLULVBMTpAlZR77wIoFnsvfKZlcTXPSuOd3JQ0LnZaWOxKMmMNwu
cL/XSh5uax/+5H5igmSKOi1qRhbf7yUOBB8xRdjeSzzHdskgg88jxF7eDAd1
FnDF3pTC8v7KPJ42M7h3hz/dqSiBBYeOOOiyzLE83cGisEwMXMUeZQOiFmg8
bND3uEEU7MyyRNEWCzx/aiX685IwGlTi+JcFWSLiOR9rf7AAllmwVY8KWSE8
RO4AZeFCvFLrfnKg3gqDbF8N3XpulOcQ8u89rMGd/WZtXeAfwr2MumzNX2us
8jcVd2dPE1WuP4S6uWywc8YpLMB1mhBaWLskmtcG6rljC08aTRNNbob8o/w2
WGsvlT0rOk3IChjPVSy3ga3S+cayiu/EkI/duJWSDQy9n5ib/P5GBEnuvhvh
YIPS7S0lG09NEVHHLhx5ddkGX0f29UT+niCWhi2y2HbFBhMriq6KjU4Qmf6B
okNlNpBhSQ3e7J0gbljq5n+psOGcF2F2atcniKFlj9p4btlA/vAVnqadE4Rl
Dhe/0hMbDFb950Wq/kKIV3sm7fttgwi6RsOdtHEiv6jd6desDfKXGHgdYY8T
GzJVpCO5mCjcHODuaDdOmB+aKYtbwISt40Y/pvA4EcFIfnROmIkxha3XTiaM
EQMPG1e0yDHxn+rUMbmET8SVkTXnhKyYSBFQumGVO0rEZR/z6rdhwuKGbenQ
oVHCx36cdNWO8776aVxwGyWk6uvLrbcw4cHT+yFMcpQ4kbz1doI3E+KD8Q1F
Z0YIf+rZSYEDTNyTFMxbkDFMyMasMFt0iQnJ2HSlFeUfiL86EUv7iph477sx
/EzqB+L5+ODjSyVMnDRcWqaz7wORsuWGu8k1Jlpcpn/06X0g5pTt9x6rZ0L0
YFdIacd74tWj5BzeJ0yo5O3//m54kKiJndn+5CkTrQ13TofeHyTS9T2V8p8x
UUFJEFK8NkhYXlSvMOpnwiXLdLY/fJCo3d9198goJ/5nL7dkCw8Sp9UoyXZj
TBh0JG1e/n2AYA1kOaz7wkRelLjIxRcDhKLV7jdN35hYrZT5W/LSAMHH3VOQ
MsMExVay9e/JAeJtpf4ur19MuK95Qv/LGiDqd+VrbJhlYmvt4ZWSzgPEGWnB
73NzTKy8SNlqTxsg/gfG0JU/
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79269#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF13k8lN/7P3CiyE4UlWSXyDZjz7xmyM5kmaGikG2UQhtRliS0l7ylpEWE
FtmL7FuWoizJVpEoQsnS5nd/Ho/fN/4Yj+djzj33Ode5rus+t7THfnuvJWxs
bLuJj//9t/QaaasYLTBi+/9/nMarAwYkEij/Z63UpOt5Emn/bNXSlZsikf/P
Tp6zzy5J1Pxzn9op47MS7f98U4weEy8x9M+R3HmKcRLT/+y87dajySlO/J95
FyJdzNYJ/rO83deR6tOi/3zkhR4laVrin1flC/ezs0v9s8uZX45DKxd92/Nj
U53KolXEnjw57bxo2mG3K2I5i9a+7pSeoLb+n913prve6190tOWaq1dHF52u
faE9fnrRYwJHrfx5pP/5cLmNnqb2os+s/yFaenbRhR+Mm18ayvxzp3nk1Fmz
Rc88LFtpbb9onVA99wafRRevUJupuLToJyar1+eOLPptltOWgO+L/il0xW/T
30Xr9wkWZK2Q/eenh5Za3jFadGn65IGEhEX38m26ap+66N9Be8qEsha9mTLM
fbZ80WVdPSknPy+6f7NEtfGPRf+9wxxhZ5P7Z6OANs3jYove2SngbLh+0ccN
rY/9VF70jdtxt4vJiy7nrq8/jEW/28c5TrKSw/SctJXCRkcKWwdV5DtDDl9H
DnUntGRQ1huE6zx2k0O80r3VjCfVFNwqddm/Rw5tHEJNKyLaKW5cPyNVD8uh
wWi6SZv5nhLhr5PxJUIOu52TPCRXfabcfH2wOfO0HOzo+q4W5G+UCr3cKZ9E
OZz8pr/p7do5yrvUiZUKt+Qgutxkx3jRXwrbMlXDoWzielduodC/S7B+r5/7
7UI5HP9e1mc9tQzUVxkxbpVyEEjva3JV54WH7sfsdc1yWMovKfCsSBBRN2Ta
ejvlUBxrcKSfKoIqv5Q128bkoJmbnSi1bxXyRvfs2TkjB5fQW+OjbKuR5qtf
sptNHpxe307R76/FSe+u7ftE5eFwUrg2UE4a5h7CyScM5XH3ZPfD5VCE3vuB
0VhTeXSfK5JUG1CCsttDvXNb5bFqfbPajnBl8O206k7ylMfBpxdlUk6p4uW2
k+IPz8jD/Uhm6bivBireOPjmJcpj63jUXAqbJnKcZIqLb8qjE9xLtS5p4hKj
3Kk6Xx7iD4UvX0/Twon2sxkNZfK4ktD+Q1OBhIMOLrMtDcR86+qyFe6QwLSb
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
yE4DJpkhktP7LaHtc1n8pL4GWtX3Xvc/ZImz77IfP+HXwAjFLtktwhJmz93z
LAvUsXLnmkTTREucXNM7NcetTpyjH50VqSL8+GbYwAlVFP1OPlVVY4mIpveS
eq6q+L0zJjKo3hIqEVr1z7RVcUrW9dCrZktsbFa5avZZBdfv87he6rLExcAD
fNscVFBb5qUiMm6JtcvIFXaqGyE+uKZJWNwKKd7iDy4uKMF1C1dt5Wor3Kkd
EeDoV8LtjG9lgZJWED0h1p5cqgSVvc9z22SscDDN9afhUSVQfxxOvqhqhbv0
a6/NZhXhx/WKJWxshWOlHjed5xTwbGMst/A+K3BZ7dt2QEwe2u2rWi4FEPcr
MTy366cccsIyLooesIK9ztUQ1oAcbrfUrRYPtoJl5WHezkw5xO5fqioVZQVe
bUkIQg72eVF2qolWUNzxTvBLoCw+6R9LtiizAlXdWTLhszTcBvl2NVVYQej7
F5Olr6Xx9vR1WZtqK/D8SFq4UCKN5t6S+1sbrNCxf+Ll7Blp5B7/Web0ygqR
W3ebs2lII6zqyKDXsBU2UwRnPx1bD2HLIJUoAWvssFvK/sZxHW5WCvLqC1vj
yfYD0glK66Cu92B0aoU1ToSrFJ/6LQlbpZF0dwlrTLltZ4jelUT8sp3SVDlr
hLo0dJXOrQVntcVKNn1r1Istu7s6aw1mDKTZjntZI2p1VFy0lgRO5pX1k32t
Udby26uaXwKiG12ejftZ4/jxuVnNEXForf7vqGuANWqoE3vvpIgjYI7vh2Go
NbjzfHfU8IhjNH9u9NcFa8Qe9X/TM74Svaqtr0NKrbGmlCHL0SmK1C/CxzjK
rWHsN6spXiwKj0wHhbOV1vhre9bDPlkUo3JdwTfrrNHjWhZL3iWKmTX9kvWt
1sj6Y1ed+3kFhHnGfEQ/WkN6JnvMl3sFTIe5fj/kt0FAhUJyg6swlqdZ3NUV
skHPdMELfRNhNLuftq0SscE83eJOi7IwHPoEbnWssgHXyai7jnNCcGsXM/0t
bYNuMst1KEEIoVWyFyy0bfBEPF/pbYYgcm5Q5IZ22iCHY0VpQBsfvh/9zuXu
boP8a+v2dqTzQdsp40vfbhsIdVR/DQjjQ4mgYF6Xrw0kPMVirJT4UBfRT20K
skFd2N782Che9Hgc25UbY4Pcj+nNk+DBMsWS5IiHNrg283JmfJALFhz7j//J
sUHMrtHu8nIunBmQ8TiaZ4PW0ImSymtcEE6K33Cw2AbxB7RyHR25sHb59mKf
KhuQPhT0Pa5fBs0vcx22nTbQblR/v7ZoKVwfaQtL/rWB7v2EMMciDhRunxNo
ZbNFmfM26qZEDggse8p3gsMWaVEHDfUOcaDCZTP3KLctBDtsB99rcUCGx2Qh
f4UtKmVn7Y/kLcGwp9249QZbPNvTIBZWwo59q/c+D3O0xTUVpV373y5Q6mpV
69WcbHHcx7Qj4s4CRSpwoubDNlu4zkbZf9y7QGmtD6ow32WLUH7ZuLtsCxTN
QyFFon62WL7g+m1u41/K7MuYu/fDbfFpOuzH2Yu/KREnb0X2ZtnCfvVWLqnE
eQr/ES5L9wfE99TR1wN75inJvv4iw49s8STzRV8/dZ6SZ6V3ZyLfFndj+QIT
v85RhoXbapaU20LlqjLPoOUcxeoGG/eG17aghWRXZgrMUlYW7Tp36Jct3nfv
eJ5VMU25c6+W+fOPLd5tfTqUnDJNUU/eKBXORsefIXSVHZ2mWBybfRS7lI57
nnXU2+RpSpjx+bZrgnTsr8xV6XrwnfLhZZlolSwdton3PrZlfKM8GJG8JmBN
x3+rtw5YVExSYlNOuvXb0nHRrP7A0puTFE/7cfmHdnTsydklNh8+SVlbWppj
40SHSYFfWwwmKfHnd9Sd8aCjUsD2hVvsBMVX++oUTwgdAQs9KVVZ4xSZaFFz
rnQ6vEP2zyw3+Ez5qxvG33WPjtnjhVeNuD5TuscHX6Vn0yHY8zHl5etRygWn
PFfTx3QUeDnt4Nw3SllQtj9wspSON9dLlmSnj1B6287f4HhNxyMF0ZEIpU+U
4pjZ3a876Ngcml+4+ecwJcFg14Y7b+hQbKoMtm0epljd3ZRP66fjSfD6W6zA
YcrT4JbnkaN0qDd3cx8p/0hJVCWftxujY92zlrnqyx8pgR+uO0pP0FH3TinA
zfcjRcl670DFNB2HclzKT4p8pHCyt6ddmKVDaVC4g39kiPKuwMDP7Scxv5Xu
Q4PPhiilfnfU1P/QIZwo58+VMET5T4r3x8ICEb9s7YkjfkOU/webwneB
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79269#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF13k01F/4B3BbUUSo7KEY+5J9/7yZz4xlxlakBUkllUqSXZJIQiVJREVF
khSVVEi2slZk156lECl7fvM75/f7Nn/MnNeZmec+95577/N8ZD0Prt/FwcbG
lsV6+99Pm10DrysGH5ix/d+Liyru+14smfh/a19JvVwkdv0/Mxrb72eIFf9n
l52Tz5LEqv5zr8ZJaoJY63++utI+Jk7sy3+O5ClSOCU28Z83bb529+cYF/7f
vAuRrparBf6zvOPIwIvTK/5zYJMhkToh9p9FigX72Nml/7Nr/KzTl1X/nLXz
a32N6j+rrnz8+PSmf7YI8LiwsvCf9S673EzWkPnP291vuuX2/fMJG4lLlwb/
+abe2da4iX/+wR/C2L9U9j8HlNsaaun9c7zM7xVPE/754SdqQ7PJmv/8zipy
LMHyn/8UlK1irv9n/VDD7XW7/7lEWONPRdI/PybFZe4P/HNXngvN99c/zyy/
sFf97z8b9Qo8yBNe+59LjyyyyTb756c3fx5OTv7nHj71S+uv/POc376y5Xn/
bEp840ko/+ey9u6M6KF/7jMVe0H9/c9/szcOsLPJ/Wcz39daR1f+s/s7/k0m
Mv981IQZPqP8z5lZp7JKdP+5nKe2NgD//OEA17AOQw4TU7IMiooTwdZmLvTL
WQ4jA0c6kxtzCBnjCP17HnKIU8wVd378gsC1p64H98nhNefyeuFjrYQH90yk
WoAc6swm6vU2fiSO7dfP+X5MDjs2pXpKiQwRV9/6N9w6LQdHeyM3a91xosLw
/tjuFDlEjxupd0lOER+ujK6iXJPDiiXk1uFHfwm2xWomX26z/u/Gszz0Lwdk
fPZuz3ooh6O/ynqZY4th/iYnxuO5HPhv9ta7afLC0+Dr7dUNcli0TIr/2SMB
HM9c87rnnRxKYo0D+8yFULk3Q2LzDzlo3b+dIn1ABEWD+/a5/5GDa+i14UE2
cVz3Nnqyg00eXLvGT9rnSyLaq33LgRXy2BAtWH1IThZWnoJpUSbyuBHdWbAE
CjD8+H4wli6PzsRHUhrvFaHsUWCY6CAPEZkGja0RyuBzZ3Sm7pSHf+m5NRkn
1dC8OVq0IF4e2wNvPR32XoeKjg3eRSnycBg+PpXBpoVClzUlJVfl8Q48i7ST
tJDkXO7yolgeogWC5y9f10ZUa0JOXZk8LiS3/tai6MB/g+tkYx0r35qa25Rs
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79269#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF13c8Vm/4B3Aze+9VdjbZ+3x4Ho+9iqikjNAQoaTIVipRSZIitKQSGZUK
CVnJbKBU9o6SMn7P7/X6/b49/zyv9+uc+z7XfV33Oec6Ut5Bm/fQ0dDQCNLT
0Pzvv82e0XfVY2WmNP/3YyCJBn8WSSf+31o5mdmlIgX/2ba1t+SayOP/7Oa7
+PyCSN1/7lc/SUoR6frPuQKOSadFvv/nWObSjckiC//ZfduNh7NzDPh/s63F
eliu5/rPcs7To6/O8P/n8DYDInNB5D8LPeYZoKXd8J89zv51+S74z3m+Q831
Kv+sIvDkyRn3fzY/svuSQPE/62a73UpXl/zPXp63dt4Z+OcEG7ErV8b++ZZu
WtfphX+e5DxmG8gq9Z+PvLQ30NT957OSP/mrUv65/Cup5a2x9H/usYqdS7H8
518PXgjabf5nveMGXo3+/1zJp/6r+sI/PyGLSpaM/vPHQjeL4Pl//sN9aZ/a
6j8b9nOVFfLJ/Oenhxlt8k3/uerWbGh6+j/3satd2Zzzz8sh+19wF/6zCTHM
nPLyn1/0frqWOP7PAyYir0g//3k1f+soLY3sfzYNfqd5QuCfPXs43Y0l//mE
sV3UH6V/vp6XnFep888vmRsajuCfvxxkmNK2lcXCbylbeWUXgqbbjHfeVRbT
o4c/pLfeJiSNovUe7ZbFaYU7oq5PXhG4UeURtF8W7+i5m/liuojdTH9iVY/I
otF0oVl36yARE6h3eyJGFj7umd4SQuNEbmdYy90zsnB2NNxprfODqDYomfPP
kEXiD0O1j+K/iS85M4LyN2TBz0LeMVWxStCsUzX+fo86ficz9/FVOkge2OeV
Vy6LE/Mv+u3m1sGs43bS7hpZcN7qb96pwQZv/aF761tkwcghwfm8ggtx16Xf
9fXIovKUUfiAGS9q910T2zYpC82SexkbDgqhdGz/fs9fsvA4fmNqjEYUBQGG
z3xo5MCw58dJxyJxJPr1bj/IL4ctiTyvD8lKwcqbJyveWA43Ez88YMFGGAx+
HjtFkcOHcxUS6p8VoLT7gcE5JzkISbao74hWArun7YdMXzmEPT0vfe2kKt5u
SxR+cFYOXuF3q6YCNqH6/ZaA0gw5OE3F/b5Go4liN+nKylw59ICZUeuCJi64
vnR79VgOwg94LmYXaCG+K+V24ws5XErv+qkpr42wLR6LrY3UeOvr78nna2Or
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
Ji5vYPu5tuYIMb1syY5HTcT/AHFGVTY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79269#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxF13k0lVvcB3DkliSkLgkpOeYp0znG5+s4hkzHPM8hJHGoKJJElCnURSqh
kYSQm6FIkYikUEohNJiLiHrPu9b7dp9/nvVZe1h779/+7bX3du/91r5sLCws
t1hZWP73b+I7/vzBpypdlv/72PW3hAwKZhH/b5VL2Xl3BIv+2LSjt+KCYOUf
O/gs1GcINv/xW8WT+imCPX+c/zc94ZTgyB/HctyRTBL89seOTpdvT8+w4/+9
7nesq9FWnj8mWU2OPzy96Y8PPdMgsr8J/rFA5YZ3rKyif1w9pN/eqS32x6+M
Y2dSjP7zfGkDv5n1fyYf0fBq3fOfazYqzj/I+M//0rZsqxj/z3VXp8Oysnb8
8QCXQo71pf+8zNjbwHvzP+sQoxwp9/9zQ++bC/Gf//N9jpaWgxD/4/fB7BOq
puIoWDGxeOsqosvyUo9vzk4c57csHwn82Kq7TSuGXO4pjs+Fbidrk3/q4nKd
6/694ugJCxoQCRImPNcsxcofFMfjnztTwkRUiWP7yNe+HBNHifXno5nLhkT+
i/D2G6fFsfHAg+OJ1fbEA42KmT3nxPFX1NM2ORUf4v2lKX6Jy+JIPnV/k+DV
EIJltbz2SLE4lAVPy20biiS2BQV6FVSLY7bdao+lYhyh130twbOR2f5W+Uy6
52nCm/KxeGu7OPad8QkS/ppBHL8o9nzglTj2+wx/0D2YQxSwe87nfhAHshwr
R+rziabAC0JOX8VhTZUQdzp7hbjzae9e93lx+MizONInbxJF/pq1u1lISK/l
GTLOKiOyxjjWBXCSkLdkUbcoW0nE+/U6B28i4e9/rOZpxjXEwY9XboZtJeH8
HsE60bk6ws8nfClCigSdnOTHDkKNhMMw1eSoMgl9b9JKMribCWPvDblx2iT0
v15Z4+TYQmh8GPyUaEjCGUGjow9X2ggZz1KNVEsSfq1++ilzVSchNBiVlOlM
wsHJus+Bd58TXO6m/dk+JDy81644sb2HWBkQlL4YTIIBj820yMNXxKTLeERh
BAk8qknu+Xn9RKdT/ObSZBLiaYVrLq4MEg/6bPzvnCOhUPJ50z8PPxBlDmI1
NfkkzFokUfKuDhMZdvcdHlaSIG4YJKvTOkbE9aRca20ggdd2mzplzWci3MZ1
oaOVBFWe3Ldrfb8S9laL5/oGSLg3WELKa5gmjLpaRt+OkuB5/Wz/XaFZgkI/
pz48TUKuR4+9aOIcIWiu8mqCXQI13IJb96TOEwPG+/5eJS8BurP6G33zFaKj
RcuXgyyBl7QREnn7b6LBkLNqvZ4EePfPOF6JZcEl2jXbzXYS4H5du+1kBBu8
8SFTPloC9dMq7perV8Pm/u1h5ZMScNuR/Mzs1RrQdI+qUM5IgCdYP4+8zAGS
ttAL6hUJpLAc0LN2Xodxsh2fY4cEXIRbrpEVeNFfvcPbrVcCT7rfCTFe8qJN
bbbc+4MEPn/P2uMcswHFKmlW+74zy23melZe8yFY8Un6cRFJDPImDO0o+xvf
JXR4bu2ThHM23Wh9ixB0h6gtpyIk0Wo605JYJIyEC8Yx/nGS4NHNOGB8QgT8
m2ynduRIIruyJNjLRBTqrHs7c5slMczObd93aDsi3mSnJQpJwb5CjWg3IWE5
7RuPzxMplIdWiOG0PGimSy16PVLY+aVKmP63ApJXsxwTHZTCskCwzZp8BYhE
r5t+/U0KC48PVQfdVYRuoFiX1TZpiMYbls/NKyGGZplOHJKGJtfR5d3aKmBb
LOYVIskgRkCj+AkrBUId1DlCUQZR/8zkRJpSoHq5/6WPhgyKNHI59p+lwHfX
mvOl5jJQWV7SlZXRQGuON4l6UAYFBqFmM/aaSNMU1AxokcEqae0+tgZtCEcl
7L4bIIsOtZ+K6UOAmqWI4UCYLKTogbeFufRgIV4pxXpUFn8te93uVtNDTPuH
CZMMWUwWvFSrS9LDkLBOxLt7sliRpMQkq1Bxo34u+S8uObyQlQxzS9OH+m/P
aptSOWy24ue/HWAIM/MHxw1q5ODqny3Llm2I3edF6eQmOVTRBoPiHxsinfxu
bMsrOZQ697qLiBvh034XwaEVORQ7mM/kfDBC3nu7qBBzeSzqbplf9t0F1iYT
aspXeQTNOraxnDPDZt6b3DHz8hAUnRtpbzODgvvaNyEsCviaME7r+m0G56WW
MNtNClAiCrKiA81RqWxwRUhbAURPdPkhqgX8CgmOm6cV0DtYvXnDCh3tJ1Sf
PZZRhH1C17XJZ1bQ5HnKdkZNEb3ZA1NHp6xwPceL7AJFtMf+ClLmtUZcaWr+
lJ0iPofaGK+ytoZm3zhjc6wi9Af0ZC16rXFd9oJAYK8iGveypqeP24D66XjZ
aqoSGtmy5yZJ9hBN/7J4Y1IJd4JuNTZxuqDBK+ZGxZwSHjG2SjjtdIG7ykan
2h9KiLZr0uNydEHeK82adrad0FNwkGy94oLNIqcOTvHvBGdekX8m1RV8N6Xm
VImd4DD4eMQt1g1/Nft+vZ+2E+mJ5cec1nriy8Lgu5dKytg2wpPQU+eNos+1
bdypKihu3MH9/pM/gv+h7wjMVMHx4OZRUbYAkGnDRx5lq4C25EBz3hKAtguc
8lGFKiiMTIytNwnAjKVT2qcaFRzynotTLw6A7t15m+ZhFUhXtxrdDQxEf9zO
t5Eaqpgf7ZvgGdqLAqVHai91VbF/8ruN0OJeBL11TFWiqUKU/Ch7M28QWMjH
iDELVRzfnl44phMEic/PLtv6qMI7JJi1KzsI4ZZBfoppqpCqCk5INt0HbpFr
UyMjqrhyYkHhWUEwYB/3dviTKqr6r45IVQeDkebxdGhSFSs7Op/tfxKMV6yb
r73/oQpzJdmgxqlgXBxNdB/gUgNby6qFfVr7oVAW2PFCVQ2rfX2r6p/th7m+
QnHTCTW0e75n+RQagqNRnDmNSWro0y90kTwcgrKq0YQHqWrI1Z8ucjwegk1S
l7wbstWgbWtVkpkRggEu3i33StQg2WumEFARgqBXM4nlPWp4ZsbHEjMVguSA
Kr98cXX4VGl+f+geis+4lbhORh3KQt6RTb6hMNp85eZBRXVUJbVdLQ0KZY4z
a9JMUx2nOkYv0Q+HIlI8/OAiXR0Mhfqu8qxQ+A0qJ1gfUcft9iSBsUehaK6W
uV5/TB22z8qnq5+GQixVrE0qQR0PfZSpYc9D8Vabj/t3ujrK131nLx8IhW3u
zNniq+r4UW5sQsyGQs+u7Ap7N7P/Wqvc84IMXJS73rK/Vx3zd3ml5bYysLwq
/9PrAXX4iy/YXRdjoKYiTb58TB0j2V0Ou2UZUODdX+W2whyP5+bGIS0Gksf8
elvZyJi7sXp9J8HA5wb3RRUOMqRGeEuu6jNwZZ+FDudGMhqTg1sFTBkQfir/
qFqKDCNH9noWJwYOF5DGtiuQUdh9csTQlYHeSJG1KSpkFLPwSUd4MJAhtd58
ty4Z2/oVJ8/7MjD9m33/M30ytFR1vVL9GbDoXU7X2EXGsvBg/969DKxN+NrD
Y0uGg2NQ/1gIA35uI/OHncgghS06J4Qx0Kw6sHnUnVleKvqa5yADx4afutYF
kNH99cDj4cMMzKN4xD+GDPphA1JaHAN1RV/OHzpBxsviiAyfeAaOc8jZJCSR
oaLOf1PyJAPcXSWNhZlkaMTx9h08xUCPykRERTYZkU1xU2zJDOT+I6/UeIEM
NX79yqgUBiQ8Si++u8acr06kuUY6A1+bJu0mSsjIqegnRZ1hoEJCcf1yORmp
R53ulGQwEHFqfzPnXTI27Z9YaMtkQHfy9hHBOjIW+F9+f5XFALv1tLJUIxm9
ZwrKus4y0Fal9Fn9MRkxNjS5mnMMpAuGXjZ4SkZt5/WglH8YsI8ud7TtYs7/
cMMBy2xmPD7M8Ox+yVzfljBT1hwGhmjKLaGvyRiSvjtzienr1xlHjw2S8b4k
Mkgul4FgrjtqaSNkUAR8H1xlWjVk7uuFT2TsFlaa4z7PwNILlaKSSTLaWa5w
+jL9gBzuUjvHbM+RynWD6YTzlXxtP8jgiKz69Zpps9/fnvStkFF+9uPoEtN8
u9Vix9goMCwcb+PIY6Dv8QHK/BoK8/wpLGNn+qJM9RT7egq6o9QuTTLr+6TO
X93IR8G0q8fFx0zLzKq7iwlQ0G8/XJXM9LTdob93ClMwGBg3Aaar/r3bTmyn
wCGH1XyYOf7DIj/iLCQoyBoSHQhjGrEULTdZCj4Z5hfMMue/+mPE7F4lCpSl
TK97MN1u/O+Nw2oUNHu1fr/HXL+MkkXPJE0K+NMbs9iZduTV3JxNUJB/YSJV
m7neI733Eqp2USDBcq/2EDM+N7V+6jRbUMAl08p6hBm/kEta37ttKFgcGHkS
xIzvsl/d7mk3Ciw1otYIM/dDU9vylt/eFKw5Y53Rn8ZAooJO93p/Cs69efkk
PpWBTfP1kGVQcPDwpn03TzPw2unXgsYh5j1iz/iUGHM/5tfr3jaOomBPRK75
qUQG5OLvi/glULDtzPsWEnM/z47/7gk/TUFT2cNlJ+Z+rzFDclw6Bd/ir+lE
xzJA29S4lJ9LwRm3zM1nohngjGCtuH2JAvjJdcQeYaDrjV5AQxEFq3eON3lF
MuBa2NT7ppQCW5XPV6fCGQhXbq7kf0jB4Q0hr2nM/PRT3ZZ/ppUCGednupHM
/HVUjzrN9YwCAxnh47nM/NbSVPVm66egp1JmppCZ/2zUIp7JSQoqLUlneqwZ
+KbP8tP/GwUJygEbGHQGPhq4jg4vUhD6vIdvhXm+tO7aVN/ProHiM8GTb2gM
pFmdCHy0RQMGfplu99WY+W7z3g7bNBC2h13n6U4GGHbaerUkDZSj0PSRPDM/
nL4JlCtpYOSUq90JEjM/vHwe5Rlq4P5nlztKm5jxC6FtC2dowGvsRqzDZCjy
GPnrpg5poHCzZrrVp1CkhC/PB0RrQCx0t53WSChCIio7PBI14LAxOvBdfyjI
x8SPmF7UwNNmi3TfZuZ5nsb+SqxNAzuKkvjTzoVisLT59PPtmrjyb98ij1Io
uibYvypLasKmT4pmJx2KB3IGZllymij6dl8hVSwU+TcfcTmQNSF64KPNm02h
8L76OGXATBMSDStjH3+EYPRCa9rYIU3sbQpM7GkIwURye+ZKhyYiE3ls31BD
8DOw57z0YS3UudTMm+0Ohqzeml9+tdqgrqG117IFwqhg+55yAV20q1RIr9X2
xSERD7EPrgR8kvssBGS84G2pZD/gRSCSmM1VE/KCRRzrqV4/AhY+ASxuXF6Q
+FQ40xFC4KGohk7LpCczruMP7p0gUKR54dfaSk8omTE8skoIlBx8k24GT4wf
js8zWiZQ6nf24pP77pD7areu1xy4WWXPsnjIBTW2ZvdPWQJC42rkt64u0K+n
hunaAI6GKVZ9ei5wTlV8c8UReH9WkrSRywVJSmuLw3cDUtOXFnIvO2M0vM6E
LxJIUelrnu5yQv6K2CnzImD3z6EH5+CIjTzTHM1LgDlr/g1zbzt01586uWsF
ED3ara1oYYeMINLqzt9AiG+I0g5NO/C1Oa96za6HmV5hfiof0/GPVqa49WDP
GT3m/NAWvD9zZ4V26KF7a4fftJQtuMYMBsJM9ZATHbR5N6sN2s++d14010Oi
8tMP0VPWSKYd6T9qqQc/L6nWG2+tsa6g7FWSnR7+GgtuVL1nDU43oeeXPPRg
e327Dn+4NTheTD96GqaHxrjU2JXPVmC/f/72jjw9TJRXBaz/aInX2jTjwYvM
dwBX2vzQC0vcvvf1fe5lPYwOZE23NVnCuVqHj++aHjSNN009z7dE+a3BcJYK
PVQJ7wm852YJ97wdmm9b9GDesXqls4qOmsji5nNzenAcarPOaTZH6oKNm/W8
HpIOSrFeuWqO3QeWv69f1EPe/st1zxPNwR1qLhn/Sw8R3yUGU8zN4es/lRS2
lorkTSYhKX1m4HNQoVuKUsE/PD+d9s0Ue1Vr+9eaUvFi0Ci1W98ED7peltSY
U6H9/JYpIWOCv/dNx+yxpKLa/p5ZK68J7l8hSTyyoyJPfkOJwrtd2CiQzjjm
SUWA79bBXYd3oXbRZ93CASp6ni1uKLhrjHX3uXVG8qnQcCny3GJoBE8Xad7M
Qiru7iVVvVY0QtWC/rDeVSoa1g9N3RE0godSZNKlYiqukA6WlU0Y4s7l4ZfO
1VQcjRlK7DpnCJcTNcHPn1KRU5YxkTFhgOJd3vkN81SwnaNGhpTQoCq3XZdY
pGKnnX2gfy4NDdzv39z/SYVqd4NFWCINXS/cBBpZ9JH66Ethow8N39ycUh9y
6kOp08BTdysNugzLqNat+mB1iyJdy9JHV66uY7ehPmJklybKUqlwil75br1L
H1tTpmyHjlIx5FGX+cJUH7lhOi7i+6n4Jq7Z2WOpj2CvFNbXdCoEb6sZ9jrr
wzE5sGctHxXeD+VUB4L1YVWwbWdQjh6+f9nCO3pOHwtJaqGP7gBZF8Za8nL0
sRTg1NrAzBMVemWMTZ4+FGy7lJ+cBUIrzKceXNbHQ0f3Wd4IYCLi2LPzJfr4
oHV6OkAH+PjXaLJVkz4oDZxOXucIvBQtX1s/oY8kJ5KDwEcdhD+Pbgyb1kff
kuTkqqc62BhnEikzpw+JsoTJ9eU6sBodHv/nhz7izG0vRUbroKOEv5WxigZ7
7a0TxQI6eKQRlSAlSEPFRPU7NyttVNkYrcqi0fAm+pw5V78mEk1r4oWNaFgd
/Fb640NNuOpLc1zZRcPrRpU1PaWaYFNZt77agoZimWOBcyc0YcHXyd/nSMM1
kQ4BdWVNjHfZywjvoyHU/p5eVboGtlj4WRWdZcbVtPzcN1cKJgx6X8hl09C4
vXW1hwkFD3SM7auYcf7s1B47QKbAT17G5fElGlpTk7R4N1Jwh2vSZ/wGDe5s
2447tpFh9vRAhFwDDcNuFDlnbea9zTj+UuUoDUWi3NKp8urodvd3VfpEw9fM
7GtxIuoQP2AqWPKFhnXHrecT16uj7fKGzMJpGoIXSfVNE2rY9PNCQsYSDWdV
NlNnStVw/Vb1vhBuA5j/No+TYb6DuvjGteTUDfDjnYJs5i5ViEk//XGNYoD5
E4GhXlqqOECUVu3QMoB4z5f9OvKq2BIUrigEA0RZwGHrBlX4PGLZwWliAK+X
1YLH+1Xw45Ag57ibAQp11zU9DFLB9rcmfYXxBhgXT4l5mKeMU01at+0SDVD9
9ouUYJoyZq/JJaw5bYAu74C2qFhlNDG4VfemG+BeC2/FPj9l+HB0pymfZ9av
guY35rv2uoqTUWMZs7+vBR7xrTuhcGpP9bs3BiD8nitQWXdCk3wiS1DZEK1D
sR/zZRXxyltQ/YKqIexuxV+/J6CIsNTS3m1kQ3Aev6o4ukoRJR/7tkhpG2L7
P4VkxoACtmbJX1Y3NET66V1fXVIVwDbz6paNsyHaD6u92v1dHk9vSrekHDeE
n8b7i3c75eC6tXOR9YUhhpJP/9pXLgNuQUZV7UtD7PU+kMeRL4PGjX+HHugz
hPvS1XsVqTKQWOsyPv7WED7uN8XVgmQwNTf6qnPcEPz+H49OS8rg+JNfdy78
MsTlO79jlAukcT1cIVhDxgguNem1Xpel8L0tZSgk1ggtpN/Pix5LYGDdS//l
OCOseaXlFfuvBJrMhKdOJhiBs3nq3p4SCaQ/u/nz4mkjGDrVd1hlSECmu2VT
x1kjjA+Fipx3l4B7P6uR9E1m/QNK4bM/SHg8dqD4Q7cRKsX1qhiqJGSzu4db
ixujUszxQETzDmx8V1XA1mwM9RrTfcm07fgrOtZWI3QXKGUfM34NiIDlhvvt
IT4TfKkd7TzFsQWM3NspfE0mOMtCq+e25Ue9bCLHhmBTfKo8vvr8+o3YYMKQ
O85tBlOxTs3ThrwYkO96EVlnhh30nFa+v9eh7CIhPuJujhGr+7M5R1bD7bb6
BpFf5gi029IiEsaGY/GXYwduWqBCtL4/WmOFWH9ojYnXLQuEsF47t7h1hcj1
38c3etsCpmk5KyfYV4g7phqFU5UWWCLnPWnrXCZGNzxvZrtvgV2RSs58e5YJ
04ssHNIvLPBW5SzOZP8k+O96pB74aYF+w9gTpmuWiFvjIue5zeiYmT7ior1x
gUi8EO/5zoKO2vpJrx+L84SP9QSp1IqOX2x7glrezxPCdXVl5g50JNuFR10s
nSdOpbk8Tvam42SZI5+S6Tzhr54zwxlJR/XnZY+3J78TYic2Ga+5Soddv2Mf
lecb8YsStb73Oh2PjkZIO/yYI/onhruvFtMxns6yEP1hjkh3uONmWE6HumCE
x6rKOeK3jHVYfB0dAnHHVGac5oiB52kXV72gw0/UYtb1xixRk7Cw+8VLOtyn
lF9cyJwlsrQ8pAv76IgyVn03HT1LmF5RqKS+Y5bX5At0WM8S9yI6nsR+osOx
YL7MbWWGOCevlmb1lY6hkx6dCuMzROhQnu32KTr2ihq92vBihpAyCxp88I2O
TLeO8PU3Zgh21p6i9AU6dvwW+kHKmiHeV2kFei7RoRP8zs4yZoaoCyxUVFqh
47aff35y4Azxj+i6779/03HB92rva7sZ4n8AUpyn3A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79269#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxF13c41f//P3CVIjIrZVW2RGSdc5Bzd45kH/sgO/MkFSqF0jCaKg3ZZSQj
QihFyUrKJpIGSUURERm/1+e6ft/e/uC6XV7nOR7j+XwdCY99Vl5L2djYHIlf
//tr7DXc+vTrA122///DThfZ/174KvX/rJYan1QsnPHPJq+6i5KFS/6Z6Tn9
5IpwzT+/U46mXxDu+Oe0tYyos8KD/3yCs1jujPDkP9s73CoYG2fH/5l78YTT
zg18/yxj+WP4+bk1/3z4NYUaPyn8z+tKBPqXLNn4z6Wf6E3NOpL/3GV4YvzC
zv88da9SyNTqP5NCKe4NPv+5fLXy1NMr//mhvsimouH//DhrLOjqVal/7lu1
9aZV6n+eC9xTyZ/zn7dThzgvVP3nyu63yZHf/nMVZ339IUj/84cA9lF1E2m4
X3q5zaZeTJetU09wwlYaCeUk7qM1DbqbtI+T7rtJI6OUkfEg+68ubj122rdH
GqgX7WkPFKO6ccyeUDokDT+tIxMyG9WpEXtJd75HSIN897XtsQUDalp7cNPd
c9KgBknr08vsqE8pReM+16Wx3P2ala66J/VD6k8h2VvSUGed/2WctZ/KtkJJ
ZzBXGp/ElbYzPx2hbvJnud8ulYZSimGkn/Ipql7bnSi3Z9I45qu1ztntHNWD
/Dl3Q5M0pvjC6jhHrlBPpki29nVJI+uqa4HUoZvU2+xuUwkfpbHBvEnx3ZM0
ajUrWdRhRBrabR+Mra5lUou/7tnjMiUNRffaP/QfOdQMX62K3WwyYPf3WW5w
tZB69Qsntx+XDBJnH4b93lJCjfTudgxYIwPl3Te+wrCceuhzZk7QBhnEZ2co
SEw8pnp7Bs+GyMtAZeFyv4PoMypzgGZ8TFUGOlPvz1/lraEaeggknNKRQdrJ
y3329vVUysf3X2MMZNDy9e/KqvlGqoLbPcpFCxmIMmt4zi5rpoq+DzsT5ygD
p8mGH15lrdRVLiY98Z4yYEwYXvwi0UGd7xPenBIgA8urq/nWP++i/tg1HJIe
IgO5QcfHCUk91GaHyPX3zssgYjl3aPz8e+rTN9a+xddlwGuk/Dfu+UdqIVOy
vDxNBs3+JTXxWQPUK7ZVzOclMsjS2DJBafhCPdVx4U5DpQy2qB9O0eD4Rg22
dpp+1SCDUhGRXE6vEaqd5cz1N30yWBZulpRYOUbd2VI/9G5IBmEym9TKRH9R
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
GTXSwWdDwsm28Q+vCHs7D04ddSChw9nFaIRwjXrf+iEXEvgKU58vySTyv6pD
y9KThEMRu5i8hCMGXjo99iPBOIq0SpBw/6Pnx+T2kfAqpOfrKsLaVyrSrgST
YFoeNr1AjBfvV1w9f4SElY3hOsOEp5A76HuchCXR3s8aCD/O+J54+DQJPA/j
T6QTPsmpaB11hojPjZzC/63f0N+f69pFEiwvX7GlEeZtyXuWHkcCVu88vIJw
h9poSFE8CdHnKsWeE/FIuKGk8iyZGN/3p2kIYbe/e7803ybhjFALryxhWdd7
Kf3EvTjLzvRrIuI9Uv3DdjSPBJVbR3fvIVwkq8wzd5/Ip8M29mWEdX8UhAo/
JmFp+zZbMSJ/7FZjqvLPSOjb77s6hch34wOVb5p1JNR85L66nrBd+H17mxYS
Nk8G/pkm6kfs4zjf7k4SnA9IfXMi/Elftf5ALwlcR0QePUpmImBVsUbsIAn6
7x/wuxP1qL5/YiT5Kwnpfy9m3iXqdbZdLSPvBwl/jnlrfCfqOSqxRLDxDwnL
N+e5OxD1bro4+eLNPAnzL/q5o4h+ENytceLLUjLW/kxpyv1fvyiU/mTnIUPq
kUX+p2tMPHhY1kSVIGPzMkrewmWi/sT/nDKXJaO0zKFtkug/nCBrO28hQ//h
8Z2DRH82GT68e1SDDHamSHUB0b+D3Y+iHhiRQb/I489G9PuaqSfYEkjGcH3r
q4ljTPQ6LExTDpNh9CVjNj+cibQnugWGYWRwbn0X5xfGhGJklbh3FBkiScxv
X44wob/m2WxaAhnFnr2P1hLnFVfIkqKCVDJ27k54+pM4z1re6vlVZpCRzRxe
2xrIhFN6dffbe2SIZ0pdyNtP1CfHsthvxWQ8VPq+KXsfE8MsusFMORl/uXkG
8gOYCFatKRF6Tsbecp5bvf5EvatvSrvcQIbar/nwceL8tNcMO7fqNRlnzXxO
riNsTH5zKLqdjNudNjFmLKKetdQ9lvaQ4f9yq/NVP2L9OpfMwvvJ+LXY9WjE
l4kNuiPkPwNkxPn6ODIJ88NQOugrGfmzM5Md/zuvaRl8P36Q0Z7uq+9NeJLO
9td3kgzZpmz2VYQ/73AaGpgho9GY1lfnTZzfO8tbXRbJWHpkyd4bhBuM1jzp
YadAsLDI/hjhRyb7s224KICRpF4Y4TyzprhmPgo2jDyquUw4hSF/3HgtBbIe
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
2bB+jvr/APLndU8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79269#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFuHc81f///y8kRXYkStnj4BgZxzg3Z8g+NpVklKRJyjhklCjRUklmKREq
IUWRlAYhGWW1kJBRQhm/5+dy+X1f7/PHOZfr5fl83vfj/rzfzwafA447OTk4
ON4SX//3a7Xze0vNUJkpx///4aavOdgnmUL9f6yTlZp+XzL3P7Zu7CjJkCz9
j912TD8+L1n3H/doxtOTJN//x9mrWCdOSX77j2N47yudlPz9H7tvzrkzPsGN
/8d8izEem9YJ/scKDj+/P0sU+49D3hpSU39L/scSpcK9S5bI/MflX+gNTcay
/3G7RcxE0qb/8Z/iJ+I2jv9jfbah98td/+MKUc0/Nef/xw8Za9aXfP8fV90c
P5SSIvcfd/NrXHHM+h/PBe15IlTwPzahDvAmVf+Pn3R0ZcT9+B9X89bXH4H8
f/xpP/eorrU8vM++0XKulzblaDMT+eUij7QKfb7wupem642i9O95ySO3nJVb
duufKXKqPA7skQfqpT60BklTvZb9jVE/Io/dlLBfCjK61Oh9+nnD0fIwyH/r
cnTBnJrdGtyQnygP6iF5Bv2BK7XGsGRi1yV5LPW+6Giqu4P6KWtMXDFHHroB
pyetbh6kcvCoG3+7LY8va9VN3L6EUdfvDfC+Vi4P9UyLuN2ax6hm7/JOeD2V
x1F/isQ2r0Sqj0H/7XUN8vgjGPGCd+Q8NTZTtqW7XR43U7bfkTtyhXqN2+tP
2md5rLNrIPU8zqbWBmRIbR6Rh9G7T1aOF29Q7w/t2eP5Rx4k7+cz9J8F1Fx/
SqUvhwK49+5aap5yl5oyyMu3e4UCrv59GDGlVkqN8+vYsl9MAZq+l4dgUUE9
0n+j4NA6BaTeylXd8KuK6rcj+G+osgLIC+d6N0s9pbp9pVkd1VaA8Z++0ykC
dVQLH+G0Y8YKyI491+3uXk81/Nw3lGCugOahf8ur519TVb2KDZPtFSDlVrfy
FFcTVaov4uSFLQrw+P3y584HLVR+T+sPqTsUwPplkTy44T11vltSJXO/AhxS
RAVXP2un/tz6PfR6qAKUvm2pSkv/QG3aHLe6+LQCopfysVPn+6g1nU7+9y8p
QMBS89+FZ5+pd91kKyqyFdC0t7Qu9eZX6nmXardnpQq4uVHtl+HLQeqx90l5
L58oQE03JHPjsh/UYCeP6caXCihfs+Y2784RqqvD7KXObgVwRdqmX30yTt3U
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
G/WyDN/U4iILemq9+94bfqP+f/bAigo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79269#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k41O8X960h2WWv7NnJbob5vBmMfSklEtGmxS6pCCMliki7tZRIkmwt
JNmSSmSpkKQspTRE1p55rut5vr/5Z67XdZ/POe/73Ns5cn5BG3ezsbCwKLKz
sPzff7vdo2/rxiooLP/vx0GVCv4kmUH8f9bLuZz5QDL/P7Z/1VOWJVn+H7vv
mq1Jl2z4j/u1T1HPSr77j3NXO59Mkhz+j+O4H6w/LTn9H2/1yLs3+ZsD/595
/8V50dYK/MdKrj9HnyeL/seHX5sQl6cl/2PxcqEBVtZ1/3HlELXtjan8f9xt
E/f7LO1/PFNSK+aw8X9sdMzEt2Xv/7haRHumLv1//NBSSrZs9H/85NZkWEaG
wn/ct0rrysac//Fi6IFawaL/sRnxjfvs0/9xbc/HrITx//FT7ubmCCj+x4OB
HBP69orwPfdyg1uzDIWly1x4arMirlYb8R5taKHIkmOM7u9QRH6lc37F7QUK
8p54BR1QBJql33eGyhA7uObjNCMUsY90ZEppnT4RG2BU8D1WEcaFrzcfX7Ym
cjvD2wqTFUGEKVpSq7YQdSZlv/deVASn74WNFP1dxGDOLzHlPEXo7z/DsLsV
TLCs0DQdvqOIoTWaZu5DRwjZg/t9r1cqQjPbJmGfdjxh3lFwcsczRRz3J4lv
35FM+Bl/vbO2TREzAlFN3D/SCXq2/Nu+bkXcyvC5pxBxhbjOsWPm6mdFrHVq
0+ivySXq92dJe/xQBLlj0G7jhZvEg7EDB7xnFKHh2/iX+rOIyPcnPd7JogSO
g3s5rTNKiYwRbt59K5Vwbf5h1B/1ciJhT49noKgStHdeGoNNNRHx9WZR2Fol
XL6dryY39YTYsyt8PlJFCTrLaQMe0s8I9y8Wdsd1lWA68+lMBn8DYeMndDXe
VAm59LS+rVubCZPPn8YSrZXQPrbA83SplVDbUWKS4qIEafcGviT2N4T0p6jT
5z2V4DXd8nN31Vtilbf9+8u7lOA8ZZMyIveOWOqTVM0OVIJrhoiAxPNu4ue2
0cgbkUpYP+z55Grme+KNR4JEyRklxHLyHru89Imo693k/+CiEvhttRfOP/9M
lLrLV1fnKuHNwfKGy7e+EOmbn7o/L1fCLQP1KZOWESL+3dmCllolqOsfzjbg
GifCN3nNvmpRQqWU1B3u3T+ILa5zF3v7lMAe7Zh5rXaSoLU3f+v/poQoJVm9
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
/B9PnAyD
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79269#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[169, 7], 1000}, {24.142857142857142`, 1000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 800}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7934430926665297`*^9, 3.793443116729176*^9}, 
   3.793443193686583*^9, 3.7934690595887623`*^9, 3.7934851458564987`*^9, 
   3.793485626542159*^9, 3.793529275638933*^9, 3.7935297623217793`*^9, {
   3.793529802940392*^9, 3.7935299218475113`*^9}, {3.793530270676573*^9, 
   3.793530283999229*^9}, 3.793531393229205*^9, 3.7935321096505136`*^9, 
   3.793538240605304*^9, 3.793628682380995*^9, 3.793631362438917*^9, 
   3.793632431638509*^9, 3.793632610898789*^9, 3.793632892708564*^9, 
   3.7936351358708353`*^9, 3.793640073838176*^9, 3.7936401129967937`*^9, 
   3.7936402180988493`*^9, 3.793640631982995*^9, 3.7936407377176723`*^9, 
   3.793640928449429*^9, {3.7936410162773647`*^9, 3.793641029251762*^9}, {
   3.7936413750464907`*^9, 3.793641392337468*^9}, 3.793707483819921*^9, 
   3.7937176709745083`*^9, 3.793718173467409*^9, 3.793718267006864*^9, {
   3.793718398618573*^9, 3.79371844300532*^9}, 3.793719539392353*^9, 
   3.793801388464744*^9, 3.793801473275423*^9, 3.7938015650299273`*^9, 
   3.793801636731715*^9, 3.7938017399793653`*^9, 3.794507022829624*^9, 
   3.7945073432354803`*^9, 3.7945074948428907`*^9, 3.794507539781345*^9, 
   3.794507661646035*^9, 3.794513108950261*^9, 3.794513177725816*^9, 
   3.794515030674335*^9, 3.79451531481456*^9, 3.794568640585038*^9, 
   3.7945690003655987`*^9, 3.794576044730104*^9, 3.794576683761204*^9, 
   3.7945781361323843`*^9, 3.794578427242117*^9, 3.794579359596012*^9, 
   3.794579488160967*^9, 3.7955138457709703`*^9, 3.7955138930841217`*^9, 
   3.795514546624456*^9, 3.795515772244461*^9, {3.795516176122764*^9, 
   3.795516183680949*^9}},
 CellLabel->
  "Out[1352]=",ExpressionUUID->"05a90b56-e6e6-4152-9288-6fede47f4de4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot12scritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sols"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2x12s"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2x12s"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2x12s"}], "]"}], ","}],
      "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
   3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
   3.793641549374053*^9}, {3.793641626778944*^9, 3.7936416332225246`*^9}, 
   3.793707454354916*^9},
 CellLabel->
  "In[1353]:=",ExpressionUUID->"b0fa1912-129d-48af-828d-2c393c86e548"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxF1nlUTX3UB/DbIEmaRCpRKdKkJ83D3buR6g5JiaS5NJBUFPI0UBINKiRJ
RAhpQpSKUqFUktJwu/ciejQhDRTv713rfTn/nPVZ3+/Z56x91jrrKHjtcfDl
pVAom3kolP892/p+aq8dukul/N/BbyETMiCdCf/v9Rezcsqkr/yxXUtX6QXp
8j929pl6lC5d/8f9645ZJEu//uO8JcyEJOn3fxwrWLbmuPTEH2/ddunO+Bd+
/H8v/B3rumGF6B8rbxr9VHdC8o8jXhpC1oT0H0uVi7N4eFb+8T2uRXOrieIf
v9kY+yV5w19PFlUvpTn8tf4hQ8+mnX9dsXjdZG36Xz+wlJEv/fTXVQXjYZmZ
q/64T1jznMPFv54NDaoWK/xrUxgUTK756+qu3gvx//11jWBj435U+mN2MP+I
jh1xjPRamuI8oHSaSXxzIm5ynd3rqwXyxtH6JR7EbK+45epUwEtVrnuCiK/v
e3DtlxV4zP8Rq7GfuHl1R+coDWJ261/7HEPMUFroNbEJag1Lv+w8Q5y4J5DC
sw2eBF6Q3TZM7LtY9KZjEJQNBQW5TRLXeefqqeyGK/5Gld4UZaR4PH/aybMH
4v26XIIllTGmNMpGwmcv7P9wtTBsBcmzXLbnuoSCn0/4j0gV4rq0pnOOYeD8
ztz2X23i00ruMg7hsNFLPPuICXGw7Iju5n1gyBkYSrQmPimIvFv3g6pHkWGK
PZnfLu6T9Ww/yA5EHc9wIblAfvKzBREg7Gb3NsuHeGCyMY4eAXN90mtzg0m/
s7vqXGYEjG7/FJkfSfKfMmMfWBHQui1+WdFJ4oBm6smoSKjt3uxfdob0fa0M
LrdGQrGzYkVFHrHD5+O+ygcg3anGua6c9L8v33qs+wBs2TRzpruP5Fbassdd
DkHfxt1L+DRWk32GTo9U/Qstjca+gvqrMab3lvS0VjRUWwvdXWRG8nnKW88U
RMNFy2uOy5xWI5oISOnaxYAXcjI0DhN3UXlbLGLhk76TxNYW0k8Y501wOgLf
V5uK3t69BikWC1QKx48BlWvemBS5BmO2WKuoWCdCwoWN0f5H1mDtDaXLLjmJ
sFTScWzVOZJ3GuX32x4HPZ6g1ux6klOa3vkUJ0Fkb1ZqoqwKot/3YO6FZJhN
nRD1eaaCte0VD2v50sHS7kej2WviCsnxzUbpcFKAErNyQAU9jnIzaHvTQe7w
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
4v8B0w1jxA==
          "]]}, Annotation[#, "Charting`Private`Tag$79396#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF13k0VV3cB3CpJ5KIPBUqQxIiHhmuqP2L684DpUiSJMmYoUgyhVAaJMlU
hiJzhqiEXHMqGRsMcQ+JUimSpHe/a71vnX/O+qzvOfu3p7XXOQr2HjsPCwoI
CFAXCAj8751xePRFzfuy7QL/dy0ykTk2IB2H/t9bbiQkl0hn/jHzaU9xinTp
H1s6fH8UK133x32aZ01ipDv/+Oa/3IhoaeKPQ4RLNkZJf/tjq71phZ+/LIL/
99LfITbUdeJ/vMF8YpR3TuqPfZ8ZoIRv0n+8qlSif8ECuT++N2TS+txI8Y+7
aSFfYqh/PV1QtZK186/1TxkcbDry1xUrNKdrYv/6PllGvnj0rytvf/aOi1v/
x72im6/vvPHXc14uVctz/nobGhGOqf7rqp43KeFjf10t3Nh4ApT++K37oo86
TOyapg0sxX+QQNcOya+7sYWN/vM6rIXkDYP079phm8m7y6pvR5BWaePhgl1R
vDlr3hTZCc2GaJzABkTummChYDf9rPFg7Djb1IPfzFGNQfGXI/HYra+Kfgvs
RbXOKbJ7P2Af9F2aa+GCSt67uNhOY1O1buupuKFMp60PDwlsAIF9LiVdCzxQ
uGOPtbvUBggutFOXdPBEJ4Zv5Xivw/mbFPFUay/k6OAz66eC86s5V69beCNL
vjEjUBvb7I2dzE4fRLOXSDxjhB0QtkJv13FkMDjwPpKCfW6WK2h1AqnZFRhc
MMPtnU+0TGg+gWQHAqKuWOM8ihXWvMQXidoyXyU44LyitiWU7Yt+9Uqrprrj
XGeEdz3OF03sG/XL8MM+Kj013O+Lnu8NX11wHntXNPV8gB+qebnLqSQev69h
tDf9uR8qslSsqLiJ8ztqmYc3nESxu6steaXYtse9z748ifaY/4h/2YtN/2dp
lPUp1Etz+3ehhjIIOMapTFQGoqeNhoeF9ZUheKpZdUYrCFVRRMqW7cC5DXN7
/O0gdIOcZbF6tzLUDI6L6jKDkT0MXtE4jX1GrafVJASN6u+WtHqK3x+T/ha+
+wyaUt4mnu+2ESBXZ33O57No+5BxY7QftlGiggolEkWk0IKczmyE4DCn69bJ
kWillMWn9dc34vYLMvoYUUhvgcvzxDrsM3d7HYqikd+bhIuRsioQrPfaaSgl
Bs1d/Cbu0KwC8kM6hFTEZST4I3e57AY1eJuReOOM0TWk99vu3q4CdRBw6DJu
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79396#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
e0D2D/H/ARf/7xA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79396#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
VB02Et/eyPVzYcESb12I6Pqf/x9XekGt
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79396#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.7936416375070543`*^9, 
   3.793707484256727*^9, 3.7937176713672237`*^9, 3.793718173936474*^9, 
   3.793718267309087*^9, 3.7937184438951387`*^9, 3.793719539712245*^9, 
   3.793801390904216*^9, 3.7938014735562353`*^9, 3.793801567236689*^9, 
   3.7938016370086107`*^9, 3.793801740330552*^9, 3.7945070232745743`*^9, 
   3.794507495114111*^9, 3.794507540052476*^9, 3.794507661952422*^9, 
   3.794513109247881*^9, 3.794513178032401*^9, 3.794515315334182*^9, 
   3.794568640881857*^9, 3.794569000979068*^9, 3.794576047574548*^9, 
   3.7945766840868073`*^9, 3.7945781369714823`*^9, 3.794578427563827*^9, 
   3.794579359945434*^9, 3.794579488714509*^9, 3.79551384590807*^9, 
   3.7955138932370243`*^9, 3.795514546791697*^9, 3.7955157723880987`*^9, {
   3.795516176267992*^9, 3.795516183826655*^9}},
 CellLabel->
  "Out[1353]=",ExpressionUUID->"e308b59c-06a3-49f5-8dd6-02253322f2c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot20scrit", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sols"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2x20s"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2x20s"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2x20s"}], "]"}]}], 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sols"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2x20s"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2x20s"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2x20s"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2", "+", "20"}], ",", "1000"}], 
          "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793394861836452*^9, 3.793394918159622*^9}, {
   3.7933951496126957`*^9, 3.7933951633752604`*^9}, {3.79339523317878*^9, 
   3.793395327131968*^9}, {3.793395363113092*^9, 3.793395454093955*^9}, {
   3.793398236334831*^9, 3.7933982401612463`*^9}, {3.793398273947652*^9, 
   3.793398297786425*^9}, {3.793398587977316*^9, 3.793398589049642*^9}, {
   3.793398642868155*^9, 3.7933986473815727`*^9}, {3.793398766872898*^9, 
   3.793398769091921*^9}, {3.793398847935656*^9, 3.793398887738555*^9}, {
   3.7933989372257338`*^9, 3.793398938788555*^9}, {3.79339898752773*^9, 
   3.793398989638323*^9}, {3.793399423963974*^9, 3.793399443278512*^9}, {
   3.7933996196258163`*^9, 3.7933996224000072`*^9}, {3.7933997698848143`*^9, 
   3.7933998152795763`*^9}, {3.793399870324162*^9, 3.793399874653573*^9}, {
   3.793399955092331*^9, 3.793399981729393*^9}, {3.793400297337214*^9, 
   3.793400299363748*^9}, {3.7934003321033993`*^9, 3.793400385420542*^9}, {
   3.7934018012048273`*^9, 3.793401888718988*^9}, {3.793401932418544*^9, 
   3.7934019352989807`*^9}, {3.793402009236326*^9, 3.793402049607609*^9}, {
   3.793442209711054*^9, 3.793442344238595*^9}, {3.793442922320374*^9, 
   3.793442937773024*^9}, {3.793442988076605*^9, 3.7934430062331343`*^9}, {
   3.793443077052331*^9, 3.793443173022769*^9}, {3.7936406472978*^9, 
   3.793640665968298*^9}, {3.793640705579446*^9, 3.793640707850029*^9}, {
   3.793640933155513*^9, 3.793640996078887*^9}, {3.793641378889105*^9, 
   3.793641381201693*^9}, {3.793707457526559*^9, 3.793707458707697*^9}, 
   3.793718353427245*^9, {3.793718402938336*^9, 3.793718403333542*^9}, 
   3.794507352297159*^9},
 CellLabel->
  "In[1354]:=",ExpressionUUID->"b135be89-c533-4ba0-881a-bc4fced6d582"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
73NzTKy8SNlqTxsg/gfG0JU/
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79508#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
kB53vck2Tb4iwTP7548dRtyTne68nCL/DxZs/BM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79508#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxFl3c41W/cx61KJXuPsrdI9jrvw3GOcazMZEZoKISorGOXFSopWZWGFSot
JKOBkNEQsik0VLQ857mu5/l1/vie63V97/G+3/f9vT+fj8TuQzv2MDEwMLTQ
H//7b7Fnpqdp9pYRw//9WEyEg0aEcgn/z9sL8y7UCl36jy07B2sKhOr+Y2ff
Hw+zhVr+43eqySbpQn3/cRGfTdIJoYn/OI61Vi5VaOk/dtlZXPXpMwv+nzeu
xrlRNnP8xzJ2CzOPT/L+x0e6dAl5S0L/sUAd1zAj45b/2C3tl8ME/z8u8Z18
3qb8j5X57t496fKPjcO9TvNV/2OtC85XclXF/2NvjyvuV4f/cYKFyLlzs//4
ilZW34mlf/yR/ahl4AaJ/zi80UpXXesfp4l/432Q/o9vj5l0vDCQ/I8HzOI+
p1P+8ffKBn7qjn+sfUzX+4n/P67nUf3elP2P75KExWtm/vGb686mQV//8U/O
0/u2/v3Heu84bl3nkfqP74WtsSg1+scPrnw6nJv7j4fYtp7bUfiPf4fsb+C8
/o8NCVOs6Y3/uGHwbUHi3D8eNhR6bPLtH/8tdZphZJD+j42CetSj+f6xxwC7
i4H4P442oEb9VPzHF0tSS+o1/3Eja3t7OP7x6EGWeQ1LaSwtS1jKKjkQGPqJ
3F8dpbEwE/Y6t7OMIK4fo33TSxon5K8KO959TEDxA7dD+6XRw8z5nCe2j+C1
7mecSrg0nhgtPddyek+IDdQu+xArDR+XvN1iAnOEopehHddOSsPORs/dXPML
oUm35rP/GWkkftHb+kZ0mTBauMgvWywN3vWkXfN3/hIY1qoYTNyg93dn5Tz2
lwniB/Z5l9yWRvTXhnfUz2tB7C1L8nokDfYr7567q23Ebp3JG5s7pLFmkxj7
wzscoF2U7BkakEZ9iv6RYSI3mvcViOz8KA31mhtnthwUQO3s/v0e36Xhdqx4
fpZBGJcC9O77MMiAZc+XZJtyUST6Dboe5JWBfSJXa7C0BMx2c+XHG8jgcuLr
yvWQg+77kdkUsgxeZ9wRUx2Rh6JXpW6GrQwExDtUd8Uogs3D8nWerwxC752S
LEhWwYudiYKVaTLwPnLtwXzANjS9sg+oPSMD23nacgGDOqqdJevri2QwANY1
27PVke3Y6Py4TgaClVw5Fy5tR3xfetmTBhmczu37pi6rgVB7tx+dT+h629pu
yJZqwMlu5cyrIRlw503y7M3SBKW7ferdlAwYJHwfWTBqQcfmjNb4JxkMbq9N
rT2oBSGr7QPzLLLYIyy3vAHaGDIL5GNWkYUqe3VbS7MOOtv197Bqy+LZHrsT
o2K6aCBvuLWJKIuC8xoJXEd0UUgqcxB0lMWJqqNF5tJ62I33OSpRstDL/uJa
EqiPGW1HbpdOWRw3YOwv6zXEN1lDjopAOcyu1I4tKRFhNGbcfiJCDh1Uvix+
eyKSCsxiAuLlYB6Yfs7qKBH8vA6LUufkoKxXWcb6lAgtxv0v8lvk0B9fkLbq
b4zoB0HJES/kwJ5emiySZYy2I+EEpzdyyF7kf+Bdbwznhbgqrk/09qF3Lxxe
b4KIt3mZKSLyYLeu/fy2wgRNZy5S/GTl4eDQ/f7IoAlYd1xaNdkmjwf7TOwt
GEk496Tq0CpZHovm9i1nHUkYi78l985OHgcMy2sEY0hQJNwfuecmj/JBpdB3
l0m4d6vNJjxEHtSJ7oWaDyQwBXesc4iSxwLx+17OjaawUO5t3JYij5i6mS0E
eVNkTw8e4ciRx5snTNoeJqZ4W/JOdb5AHhJmOUHpbqaQ9hiffnZVHhmdGukz
h01xQGi28GotXW/H5lsnU03xO3OJw/epPNysuVrZq01BsvzZTuyTx07FGFOR
R6ZIW8sQu4V+Lm1P6DB2dpui79EanT+z8ijbcDpOe8QUYlEbP71ZksfsfOWB
Ax9N4afDdbV+VR57LJKuRS2bovIrv9eZDQpYo7tw8jgzGd8rRQVD+RQgfUdh
e8QmMoz2SXbbiSvA7oVdYQw/GUky8imqSgogP82TKN5MRteoCjZpKUDJLU18
VoYM/gvbl+eggB3+1fd8lMnwcNatfmKpgJb42R+i6mRc4SYEXHFSwLX3VkFb
tMlY6CSJJ3gr4OeDj2vC9MnQSrV45X1AATd+bmmSI5ARQ7LNIhxRQO8lWRGi
MRlPVh3NxGgKOL+i1/qERAbn/V0Mv9IUMN8SQG0jk+ES7l3/6qwCynvvGxHN
yCja5h90u0QBTQsERaI5GTMfD8jnVijg9z1R9k46q10NGQ2uV4Cq9FzSHJ0j
fCLybB4rwKX61a5COjdtjrZV6VLATJq802f6eKxv4lk3vlaA1bQQYYpChu3p
1KaZcQUMhOQMxdPnz7PNjGhbUABJla+gi67v/cbTapdW6H6xHWR+Rtev2J4/
E8eiiHNJFjORICOEVlTkyaGIJWFn6TFDMu4ZXnExFFaEIBlZa+l+MK3c4BSR
UURYkvfKHN0vkU7jrwRVRbwjMah2apChUfy631dXEaVvmUOObyNjj/m685VW
ithpmPbJQpGMaLGLUS+dFTHorpd7UJaMM581vJa9FeG+6x53gCTdz3O7ZYzD
FfGs9kznuBBdb+DKOv9YRQw3t9vt5SPjJzFr7uQJRYjyPI58zkmG8tzDqv6L
imi8r7lDeR0ZmXpCenvb6XodQ88mfjHFVfZq0YweRQiEle4QmDdF0xh5teat
IkjKPf2Z06b4ciK05feiIvrcc611h0zh9PaFdZagErIWT+oltJhC9HiSz529
SiCeE7A9f8oUmrZi5KHDSii5efzqtxOmsJauk2eMVoKYc1kJMcEUMR3v5y2y
lXCqNmupKtwUY6KGEcP3lKBQcq1t0dUU1x5+TVvDpgyr5csyphKm0Fr1um1f
qQxng+3JY1dIoFo10UzrlXH3QkaAeCEJPue32Gg3K8NJZ3in81kSsrSHp4UH
lMEtozNRnUzC7KFdQmN/lMFwzmeYL4CEC6OOx4OsVOCi8DbtnhwJjM0Wxukf
VVC/jTt/qcQEHQkaXW2KqkhJa/QrTTPGlqwPK9cW1NA1ckj5Myfw4cfIcL+a
OoZVJ6PPxujj0tz9Z+wZ2yGspLZf9pkW2MXKFicmNKCz6xqPUZU64BT/bnxW
A+ONtW83FqsjJNPz+diCBoRNjhiN0ePJAKNg2eiyBkoDs8evhqvj4lSKxxCb
Jt48nTxXYKSOrdX7Ol9qaIKL9mlcunsbrEy23mhO0MT3lIFD5StqSNt7y69I
Wguhw+5kw86tmENFykZFLVgwS9lJ1G4FRfDy9XBVLbgVK+YJndsKpvbcBaqe
FtSPar8g79mKSOnQ8BUbLQwV38zI+asCvxH1pB3HtNB4q9v6q4YKiI7Vl1l6
tXC4+FBCebUSvuPGRECMNkjXnR1vjtHv5Usfzh9J0IYN76TxZJc8aKzK9kmp
9Li1Zjpa4T79Xu8uf1Saow2BpoX2Mfq9KutZeXG4TBuTulpvBej3uFPUTReH
bm08aRqLSKyQw627dzoIEjr4ebFrQj9FFkfFluOtZXWg0qGQsD9cFojT0XdX
0sHmlenY676y6DC7e+2opg74DX8FO9Hj4MTgvaRb5jrY8Draes8vGfB+fwil
EB3sbFjT4xxCj/vqLXX8j3WwftXHxJmeJ/lpiBedeqKD+8Yv2NhdpeGidfwk
W5cOXGcPXuk3k4a+nsZuptc6KD8tK3pWVhpMxpc4FhZ00DoV1vV+TAqZdgn7
WoV1kUJN0UrzkML1IJJ4aIgudmZhx6S3JC6EFG1cpMflMMz9LaTnwemhv7/v
jdLF2/N/2PeZSCIooq7TM0UXBclERWUZSWjHSh+zvKiLb3mezP6zEmjJZBmQ
fKaL672rn8pDJTBS2XKyR0IPz0JMjimcEUf3PMtHdTk91Cc3jy+niKNJ2ZSa
q6yHVSaOF/3HxFF0vZXNWVsPPkKc6+q9xbH7Slv6EFUPPISaD6JbxTFV8CRz
+ogelMMn/jZmb8F8WkfOn049RERS3q9yb8bwc7Ylj5d6KBVlGX75SwxdG6wc
ml7pod3G+UTjhBgqUzp548f1sPbHl+zh22IISug6zbqih4FnddsN3cSwdKz7
LI+0PsqXlqeP3BDFr3195xWO6uNsV0mV8i4ROGi5n9pK/44Mj5nMwUwE5YxT
SdsT9BFA5jYM0BSBR96PYMMMfUg6Hr23yCGCR63CZnYl+sj2PX91tFUYyeLe
SxHP9KH997C8kaYweAbmqU+EDeAXxcIUJCGEA8Xhxp1bDCCe9Tm+nVMILQdW
tXulDeCwJlBOjUEI4cxcUkNbDfA7YiJfY0QQr9U0VhaNDZCsfuM660VBFJ48
ellgvwGErI0bOjcLQom47q/ffQMk6Z+bD1UWQPX1G3KvmgzwcocDV76oADR4
be3M2wywkvxEq4dNAAbTeZeUegzwzHIoKWyeH9bpipafpgwwfrqW50wVP0Je
W+VFchuC7/TWBDltftwNzlVP22uI1rpLGn938MHorY7bn4OG2OMonUU25UMz
6V3iwVBDmNpY/r2ozYdnArKvbWMMsY3zTF+MKB+GHt6J4TttiBVO6zurU/S6
c8PbjotNhnDxam6bi+YFpUTC/6aAEX6v8LesuccDjTx22TZRI4jnCFT/quSB
eMaviTcSRqif/836t5QHPyP7d7MoG8ElUfClXAYPKuxSPZxhBNKpNQnsPjzg
Yfzs+CfACNbb5pw3c/BgxLOJZH7PCKJ97uZMQdzocKxg9mg0QlCPPWuwHzfq
LfObQ1qMoH3SdmzOjRvZ2qG40GWEAU6Fh6vm3DDlkDdYHDPCXf3B6XJpbtxo
yNx+eiMB156Gv2Eb4sIRMU/J924EHCdaOF3ZwYXdtmpOQ94EyGycH8604IJ1
POOJQT8CvvVFrNKMuSA7W/q5M4gAkbxz04nqXOirm2m6l0DACRmpQ3+4uaBG
DfHMLScg73KQRnk/J0RjTHIybxJAXurwU+rixLoa3vYTtwlQWrWorG3jxLDA
na1xTQR4q467jdzhRNr4rz+BfQR4XZ33L8nnxMzRxAuU3wSo/tp9udubE3NO
SgHFDMDq7eCL71w54fWJh2kLM7B3s4TGV3tOWEpNagqzAtxhHgI6ZE40Peh8
cXYD0H1lztGfwAktp9t7+TYBcut5eQp1OFG+eJE5hwPY+XAnZWQbJyRTkws4
uYGyCb0PckqcyJMM0s7gBeoOEn3UZDjB/sClZ6MAMD9zQtJAghMJjsT9qUJA
/i3l40JbOLGyoLBmnSjwOpDzZ9VmThxM4S5M2AzYWfGpztPfT0j80mGSoLf/
dDHmjiQnXO+P98ZIAb8YukqWZDnR7dBx4I8MEFYULpSmzAnyQt3aY/LAtr2l
p0K2c+JBckHRsiJgvG37obP6nFCXSNILVwEm3Z3kZ0icKLt3sO+rKrBncLzF
3obuv4PzwWB62Ox7eMOzm+5X9jyBdVEDGHam7LP150S0OJfBnC5gITASLRXP
iaW7K/3+BsDtnNYX3tmc2Gc/dmjSiL6eZr5rYSWccEyqLR01ATxESDc/t3BC
+aPjxkEroFgyp3snff/rHaiNJ2yBW1+Sm8QUuGDy0PiwkT3wx7mg6hS44Jqh
+vayCz3shElnBgdzIVVt/Y1QH+CodvGpI2+4MBX6wII7EsgKP5zm3sqNkHc1
f1uPAQmckSYdE9z4Y3qtJjIaOEExDr7KwgNegTPC7+OBjR8PrZSY8sDk7qG5
qgzA7ZT9dHgHD4r+SJ6wukT3576u5NWPvFD2EzJiLAOq2yPOe3Dz4U4Xx5e6
a4D20N6dh3X40FX4e6doFXAlRqvmTiIf/hAHFD7cpY+30qxUL80P16TUpykv
6P6FV9CaQwXAw/GJteUnMLJpeVOulzB6H55INv8DRBf2bojOFEb2AZm1L1aB
pxJCF582CIP7mSvzGxYiOFJ7A1M2i4A7sfXPIjsRIenPcu6OiYDzV/4XESki
fC+Sva5Gi6H7mmZwsQwRgT+lj7DViSHLpXtRVp6ISzs76kdmxcBxe838NhUi
3tSwug86bQZ7cNA0RZsIh5Ot+jJaW8A2bTp02JKI97J8r7ISxdFxetR1xYqI
tauv3H+UiiONdOx1tC0ReuJ9lQXN4thYUj2Q6kiEUn3D0A0GCWxwF+kp9CTi
lPHegXcxEmB9+an1+WEiDp8Sr958UhIsjeerpC4Q8fwN9WrKa2m8MSCZjVwk
QjT2xZVAFhlU3fs4ml9MxC2/6PFbqjJwvW3IzV1GxJ0bfHqhyTK4WTESylBD
hPiqsE2rviw8LkjpvWsnIlKMtbqoXg4awh29ec+I+Hz16hXNOTmszwvd79BJ
xLbID6lGovKoy2m98LyX3l+/YKw6Th4bT/qv3n1HhH+8/GHdHQqoj7zRcuYr
Eb2ieS1TG5SQ8cPefcd3IsI7/8RYkJTgE/b726YVIn7lPM/TpOfV7MFWcol/
iRj9JXqy7KsS9gQsph5ebwydfLsPEpP0PNh5u43tFmO4K/V7lo9vxX6N+6/X
WxpjrXe+aHf5NjR195fXWxlj8szMjpu928AX+CnG39YY/VsKyz4sb0PjZRnZ
VkdjrIyucT1EVgePQFZIrJcxOPRd5Tsm1XF/xXfjjzBj7DL8xntFSwOcZ2KG
L0cYY//m7/FJuzWwRz3/psMxY8T/Nf7RlaEBjv0vnGtijXGS9cq38zMa8BnS
vRR40hhK7gMFxsWa2NjIbjhRZIxtPJ7nb8hpw2uXAmdOqTFuSrutprhq49YP
k3HiFWM8/pqUO5KuDU+1yNTCG8YwZ+5+//ubNmqLx/tdbxsjad9TVcEOHexK
qD/Y89wY69e7t01n6eGG+e6ihu/GeBl/pVY0yQgayhJGhBVjfEi9feFbqxEa
2EffNv4yxtmnXmvc1xLQ/dJd4BGDCUqjzhcOpRCw5L4z4/EGE3peKLfqbQEY
hdgef7LZBDv1ZzoqfIlod+AQNpcwAev60tPuqUTYanfdeSpFb7/7uLpnJRG7
f1t+fSZvglpx1Weu9H1MTqLs61Q3webb636Z5RijO9/IpZdsAm5W1c8Vg/Rx
o/5822FOH+/LQZ8BRhLGPB/kvLQ0wdZ4zw9uyiQsSeu96LM1gc1HObtkGglC
VZrkQVcTyGnKvvHfbordj5U1hg6aYAPvTjeRq2R8+yDMOXXGBN0XvG8njZsj
t2C6/cI5E3yWtlp6tcUC223qYuwv0PWNam164GaB4BqrxaZiEwj59EzpvrLA
fERs1/lyE5wsvftKe8ASk2um0uyaTZCuE+7pu2iFhDs1JNZWE+QZdX711rSG
1N6Y3w3tJngmlC6w9rg1vDsEDyh3muBH+qmnlI02eJdtabnulQmeZL2J/iho
Sz93N9c/nDdBxhHfSgNbO4T2RD06/MkEZ98HnG+PsANPvEWk4lcTCOq39Nws
toPd1PjM2WX6/hg+IZct2aGznP9JCDMJb1kZU5QLd6BV93iSvBAJ8zmeMvbr
HHDLnsKcSyJh6EdW2SsFZ6RY1ieKUkjQrc2MNXVzhpuJAutlcxKm1ZbzRDOd
wbR946bb1iTciB9yYPvuDGvuF/yvXEj4Xaz/c81TF8x0OymKBpLQFVQez5Tg
ivtP2ssvHSIhcOHzSsBDV2Q06aiqhND1yAzKmv5whUa1sIbRERKY116P9j6w
C3GZw4ZecfS6VGwzwcjNDcLWfnaXTpPQ55A6ImfvgXnTwZfKeSSEJ3+xJeR6
oMnQzOlWPgl7N2X3DPZ7wE9FcVcbvQ6WCTlyL8PVE7VsC74z10i47x+fyaPp
BerzsAjlBhI2OUQzU+28EWOWWFg3RUL+67YrQQ0+6PUIcFObJaFjx4zh0JQP
pMMshco/kHDakI2cyeGLZ8VcOaWfSEj9xBzX4e0L3l8FSdk/SYjn/yp0bf0e
XK24HRjEbopCb3tvAX8/dHPP6CtrmeI5R0DiwM69kFR4vlymYwpFuUv5tJN7
EUaovCWlbwpdAqvW0Yd7IXwgVFUEpqi7nsRBldwH31YGqQ0WpkjiCi45urgP
y0eENsy4m4LYnnTn69kDkHhn8ao00RT+ltNrZDiDcKJZv8oxxRSjHpuoompB
+FKmnLTupClCaZVXDGyD0BzCrrE/yxT3K+0u/8gKgi9rb6b6eVPw9Vm62PAG
4+r2nZRH1aYoOHr6tZ5kCLae8L89/NYU79zyNcRdQqGnnZArpE4G1dr3FO+G
SAzsFtIq0CAjX/ZHRYNKJA5nVA6Ka5PRa9mvHWAXifLJV8LyBmTwlW6XuZ0X
ic25KsVaZDI89xlxy8gdBdPngQp7VzJWBu49P2Z8DM+vK7Sn08jIM9ykKHEg
CgEDDQFciWTk4nbwcHoUWJgcNpxOJiPiywezY1VRMNoZbXUhjQzHV0uw+RKF
6nUvX14/Q0bcCHKJ4dHI9T0+2n6djLOXJcZcwmPgtvnFCuNLMiTEOefaymLB
LhRy634/GU/6Em/V3o7FIx6+4LBXZKhtZXwQ0RoL2fW7ZmbekXGzp7s1ZSwW
i1+nBl7MkHGd/WtLpXAcShZSs1M/kDFSPytkKR8Hh1lla5MFMoql9x2/pxmH
+uGQ1ttfyYjVm33DYRsH2tO/tQV/yRBxeb0ST4uDRkvxIWdGCjIitZLLMuIw
3UBS4mKhYHl9gu25/DhQ606UJKynIPDjacPJm3HgK+Q/tZ+XgtUfFtwcw3F4
cu4uVUaAgt67RxZzZ+JwNNeNdUSIgvCTRx9OfInDcGpJzI4tFOwRHBMfXUvD
1dCtB3UVKWiQO79fR5kG10M9Cl+VKXCiEsgMmjRs2hc6Wa5KwRn3dr8MQxpC
PO+5iWtSsHfX4+e/rGiQdnUXfKNNwQ+ig+4bRxoGHBj6cvQoiBQiGEe506Bv
QbZcBwrGzVu6OA7QsECaXfvImIKcwZaKvyE0FBHSmo+aUtA0oP6mOpIGFs1e
3QULCjRzpHrdk2i4rRr2rcyKAlIi24pzGg17FQVvettSsP9FmDRvNg1dWzzk
+x0p4Agviem5QEOsMONEhgsFEfyWJr3FNGznu1RotouCvqFCqdwrNExxUHYx
eVDA1ij4gf8GDXkb5vgfeFGwtlbF17WKBos16b1hPhRUVDrt9Kil4c+qaoaq
HwUfyzaelrxDw+5vYWtK91Pwhees1IeHNPB+EnzkdpCC11bHDRebaGifu3+c
P5gCT6dhodrHNByd9NDpPkyBpKZtsVYbDcqjjEup4RQ8+uz7IPIJDcNvLlWZ
RFIwklNlf/wZDVn9lP1/jlEgJPXYxqiDBuPuOdk70RR4Rauea+yk4duz9LGg
OAoK2ys2M7ygYWhjf8DveAoWPF9/+UTnZqroIj1mQsomyvFaNw3X0n3CeFIp
mNTMtlTooY/fdf3XxZMUDNZxvgmiczjHlzjFDArOH/i8JpbO7ra6rLezKHj1
R7nPic6kU7EZxBwK1NY/MP9GH0+xt5238zQF5qpn9++iMycPx3mXPAq2cccY
p9Ln/2HvJDGRT0FKeeB0dBd9fbkFZYcKKDB5VnPEgK6/pX9C5VchhV4fXORs
fk7DdX7luqQSCsyaYl5w0Nd/yvmwHvdlCprVynpk6P5E5N1rKiijgNnRV4OF
7p/Ha0aKwnX6+lbW8t2g+0sSNu+sK6fAYHY4S/gRDUq7suxRRUGnj3XrjgYa
uC8Mvn5+k4J01e1D9vdpWB7a7OVcR8GzL2s2bq6n6xPzmxq7TcGfk3HJN+to
aPWoOHDwLt2P117J7DdpyB7Vj0xsoICJTWtG5hpdj0T8KucjCu5VFNeNXqLB
c/ezxAuP6d9PlNvbPUX0/Z1wya59QkFy0XP27jM0tE2H3XjfS/fj0+gWpTga
yuUfbgvsp2B03cBVwjEacvay1C8PUhBdv1QjHkaD14fsFo53FAwdCztuHkDD
z4Wqd4bTFBzfaeFuRKVhVPWHz9NZCqqDPNMbSfTzFmQ05/CRgm/nPw9z0L/P
3C8d3/d/pkBRWSNgiwoNqt9nOfJ/USAj8fgiy0Ya+LW3nZH5S8ELHjX/9Uw0
/D4SIXqTwQwbmyo8R5fj8GxlrcKTNWbwKftQsnYqDr5/pIy/c5jBQFysGQ1x
yGPxCN0hbYZmDuZNL/zi8NdHQLNH1gxujvul/XfR2z/u/majYEavPwf03tjE
QY1mcsRqqxk8CvJ07HXo99Oq/FEzHTOYHQz3L1gXhx8/v8YYUc2wofx21N/C
WDh9Tj2pGGoGjXy7zif0+/mBrQn1WrgZyGyvl866xECy+jebfKQZ9ryUPWyg
F4OFg4cyZKLNoOBE9V//JxqJHx1OiaeY4cPLgJ6u2GjUTW85y3/BDJEC7trj
cVHgGb5VwtRihoSyoHeDQceQwRYVdafNDI46HQ321GPYoE9yOfDUDIuBv1qa
5I6BKa9300CXGdK39UeFDB/FF7vFiGuvzSBjfH3MzvIoulvlbWwXzTBxKipj
UioSaRXnfxUIm8N21+y7zwPhYB3aPbBDzBzrEo/khtaEI2GD4s114ubw8eq5
sCYjHMf86/2CZczxI2n7TUfTcOyT6O8hqZnjca+XdXNdGMxOs1/9YGqOvrR8
3V1nQ7EmKs5BN9gc242IczmHQlD3+eNK42Fz0GqDFaxsQ+Dr51JIDjfHcvh3
SG4LQYuN6pz9MXOkcZ0VkvgajATJdzEHE81RVbffMTIiGCxPdG6UnjMHOehT
eE9KEJh4PjGyN5vjs8njIPn4QNQk7yrLbTFH19aR3ZHUQHp+3kYVaTfHwonv
pez8gWieLDgr32EOicyWj2uvHwCt3lLFZMAc6ephERr9+8HoUeYSMUd/L6b8
rFBnHxiueVSNcVsgerlLWELDH20fBw8W8tHz6NztDjuZ/JGmZrfVTdACsac9
q8a7/SBQb1LRL2aBxYKnexcO+mFru/yNJ/IWEBUWHnlVuQduk1+uVBpZwHyL
c/OwoS89nzrgt59ogQttQmfluXwxc2BSRp5kgTF17eVHEz44vDR4qdic3v9w
GG0szQcnmB+W5DpY4FjiTse+0d24K5F88eg++vwsqTuJZ70RvYfBQzvQAtc7
UpP9DnmDdC1SbOmQBUrTXXkHKd7oVjtwITDMArdzCSLnVrwwQ7DL94q1wKfW
Uts8Ly/we4icIZ+h1w0Vdx6HRXggJL8qnbvZAkPRbGGuNq648zs/ubnFAnGf
p545crvit0dSXEi7BVRZpKmd/TuRLOUe1tthgaux7oxbPXbiQvkG9+xBC5wU
u3+hJNQFrQ17lLnnLfD1co/kvTtO2CBhJ9u8aIEo5aDzUjQn2MYbiId8scBT
beHPf6hOeEPh4e39YQHyCssupglHLHQ3/TrFZAkhngAHLQFHCI6LPOcStATz
nyyXilP2cDdd1/pI2BIKg0vfX+y2R0nZl4ZgMUu81Liu5aJhD+UDT2t6JC3R
fU+v/8yrHSB+C88/pWKJY5tt1O/K7MC+db17uUwsMRF2R+xnjy0eKqWwch20
RAWbs2D6Wyq0+gQ6s4MsEedUx+h5jorq42WneA9bglPYwPChMxUlnW3CghGW
eLLV/6IwvZ5KObRGZQvNEobF72sMXltgRy3NTuWMJX6+CEwgLZvh+S5u/qo8
Sxh8fHBqT4MZSCwlb9TOW+JMWWwSc6IZtB0f+WgUWULUk7CvhscMoj9Ww/Sv
W0Li5Mlvj7QomNaLyjdvsETG/sSdw9mm8Bpn83zeZInHLfLTXl6meHPygpTV
Y0vwUieUd2w1RcfQ/XLbJ5a4Gv8zIuo5CTXRPxucey0ROctoNLKBhOPNR8b3
TFkidG2qIH+BMbgsQpRp7FTobNpZOb4eKHrEsVGPi4ps+5GM700EqOlWzH7m
oeLEvNyHxYMEWMvPXPEWoiKuWZxTr9MIJ9Z6SBClqVjvTcn4mW0Ilsfm/Ax6
VDAUfFMvJ+ojR2966Y4BFbkvX+VX/dSDZE3Cy0MEKsx5rh/dXacHFDdmjZCo
aHlX69ytoIeoGM2NjTZUdN6piC4S1cV3fQmG6D1UBI6k3GwU10ZibcOwZgAV
mXupL5kntMCr5PZwfh8V+o1tz0fKtLBd+OxR9yAqyufkru/cpoWgZbZvBsfo
+9ZR8lvFUhOzdcuzv7KoYG0eiFI7tx1DKt0vIx9Qscth7NPv02oo/MAVxdxI
RdulrvLyA2rYfc1eNv0RFXVri4cbTNQwKz0YUdRGxWFfFw/2KVV8FxkWa++m
QkEs59Lm8q3g2vDRn3eSCubGOynHXJXR167CdXGaipXi6aPuPMrISzx0T26O
ChE7/a1zHUrYzPiVTX+Rin5LYb6/RCUoL6/c9F6hokeTmj69XRHkqXW/KzdZ
wfCXUmi0pjzWXzK/rMNphYviyXmey3Lo8D5p3cxthZFFreC++3Kwf8de3C9g
hfubNC8dJsnBq4+P/FvCCrYGnm/2uMniWLNUlrmWFZK1XiazXZFG9UWC9ISH
FTKFdUrX5Eng69Gv67y9raB0Xmpxar8EtJzLPrzzsULzD0qsOiRwn4OjdjDA
Cj5LvNdZ5sTRFjtMfB5iBf322pKjxuJ4uzvKsybJCq57yY01GzdjM2GbiWqq
FULKqCpvG8XgJTIpW37SCoqsLkfuhYph6iV14XKWFZYVelrPjoriE0k06ly+
FYquPBe81CSCtXL382MrrbBXa/Dn3SIhmDMfiv5TbYVKa5nHhZ5CSBuR3H20
1gpN19xGpLcIgSvvhEJoPV1v30O1dUWCEF3vWu/fbIXJ0vjfTNcEoP5hud96
wAqRUosLBQN8cK/S4hL7a4WNzFtaYs9y47brMns3gzUMWb37Kny4wb72Hls8
szWkpm45+qlxo8nNkHWW1Rpv+2SdQ59zQXIDabWOxxoNPgM9w+u4MOVrN09V
sEbkGY0Fn20cMOLk+bCqZI1djld1xl+z4+z9vpmardZ4k6d20TqeHWbcLhOC
GtZYdjqcM/pqE643erydMLLGVaIfx80MNhwUPvD0uIM1NKymmtmlNqCtVaVd
1dkazHc8Dxu/Xo8twYstYzutoXrfmYmQtR7d7SFNZp7WyG3OP3eCYT3UwyLv
8O6zxnshmwb1uXX48SLpcnmMNTyS9v0QHF2D2MTiuKHr1ghp0b5bZM6ETUfW
WXhXWEOkqEfwhSAT8gMCuaeqrLFhRG7vsRlG1Frqli7WWSNNoPOZWSojprh6
WpgarcESYC+U080Ay4sMrAov6fqFZm53zP4lvMr0667ot0ZAV3T9szN/Cb5x
HXnqr6yhZnfgQiHpLyHaN0/B4J01xBg45lpK/hCqFdUsbaatcaOOe7Ur4DeB
/45nRtgv+n4YzterCP8klF5tdfr5xxoZCmwB1S9XCGr5SltiGGyQedVv21z6
CsE86kdVyhobuE/mDhxlWSEcN8nsOc9hA4fcXbfmVn4Qxl408DZL2eDrM1Lu
FZbvhIoZsfPsVBt8quVsYcn4QkgpSPQatrbBesbGgAjHLwTfHfMylXb0/jnj
YtliXwiiDx5UWznT+5vtt6+q+kw4kbmrLW23DV7FjvX4v/1ECNA693lDpA1E
amyUui4uEEgfGO68OWYDLesjRWNYIGwpCjh+PdoGfRGmUmwT84SB9TrrLBJs
0E8M2pGlMk8wfTcgmpppgy8r2+U5Oj8QJBN4zdZdsQFnx/yGi/qzhL86xzcN
XrVBaNFoSc38DOH1/HjvlRv09Qt1z1UXzRCynGvdyTdtwFt/X9hr/QxhVXHH
4cQHNjg/5PuBMDlFGOrJvMj80gY1k+soJS0ThPqkHz4v+20w5x46w58wQcjV
91QofWUDluzKR1akCYLl5a11xsM2UGxN4/jZNk64F9H5NG7WBn6RSy28/WOE
MyqamXYfbaD/tbd7d/4YIXjsgoPEog2OOsf+3u01RpCnHhhpWrKBcLhZWfDC
ewILY9+lrB82EDzuI3789nvC6C39fV4/bXCF2bpCLeY94cG+UlW1PzY4pc5q
mW72nnB2y8Zvq6s2kPh4YF8m93vC/wBOt8S0
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79508#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF13dczV/8B/BSSCpNDSVN7b3XeVX3Nu5tqkRIGiQlKiqheRukSBKijAYi
WhIladCg0jCSRBoUURHR7/4ej9/v6/5zH8/HWe+zPuccKe/gdX6LWFhYlNhY
WP73n+Y32lk3VmHG8n8/dkuxPW9FM8n/Wzs3O6dM9Mp/prf3lZ4XLf/P7r4/
ajJEG/7zG/Uky2Oi3f85T8gx8Yjoh/8cy1G2NkV0+j9v2Hix5OsUO/7fyxdi
N1uvXvGf5ZwnRx8dFfzP4U8NSfa06H8WLucbYGWV/M+bU3+7flj5z5d8h1ub
VP5ZReju3aMb/tliv9cpoVv/rJfjXpCpvuY/b/Ms2FI08M8JtFVnzoz9c4He
8e4j0//8mecAPYhT6j/vf2BvqKX3z6lrZgTvH/vnyiHLtmcm0v+51yZ26pj1
P8/erF1pt+6f9aMMtz3e8c9VAuqzdRn/fJcitqZ09J9fXXOn7vn+z794TwWo
/f1nozcrKq4JyPzn6n2LaZfN/vl+wdfQzMx/7udSO7Mu95/nQ3bV8l77Z1Py
kePYg3+u7Xt9njH+zwOmoo8sZ/757+X1o6wssv/ZbE+n1mGhf/bs5dlgsuaf
D5vYHfql9M8XLqVcqtL95wcczc378c+Du9kndOiymP4pRZdXdiUsPeb8391k
MTm672VmeyFZYxytf9tLFkcUisTc7j4iuHh/c/AuWXSy8bYKxHQTr6W/YlX3
y+Kx2XSr3vp3JCZIv/BTjCx8NmR7SwiPk7znYW1Xj8rC2dFoi63uN1JnWDq1
I0sWjG9Gaq/Ef5LB3C8r5S/KQnAZZdPEnb+EZYmqyYfrzPJbOHij/i7CmsCA
bZcqZXH4e+0bu6klMO8qTPR6KAuegjetWzSWw9tg+PrqNlks5pbgqbmzAnEX
pDv7e2VRlWwcPmDOj/qA86s2fpaFVun1LMndwigb27XLc1YWm6MuToyxiOGK
v9E9HxY5sPt9S3IsFgdje5/HbkE5uDD4GvfKSsHGm+9svIkc8hkvby7DWhi+
ezuWbCWHl2l3JNTfKkDJ66ZhmpMchNe0qW+KVgKXJ/1ltq8cwqpPSJ9PUsWz
jQyRm6ly2BZ+9f6EvybqXrj4l2XJwWki7ud5Fi3ccpeuqsqTQy84FmtnaCHD
7YH7o3I5iNzkO5lzRRvx3ccKH9fK4VRm94yWvA7CXDb/aH/MjLep6br8ZR2s
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
YGv+9F5d4RDZrrMm78RjA9jofM1Vix0iG/QOHuV6aoCMg3cHJzyGiLGRjvei
lwZYw9Gq57liiCyyuLJictIAH1QvTs1GvSPpzgkBjWKGONDalZTmM0hiXAbd
sMYQmuExgR3mgyTEzcT8nhwzXbt40mPNIFm/cVr4toYhyhrPG6Xff0vEt/k2
5lgZIiD6a91g9QC5toeyJizEEJ/lw1Ved/STnJC85V+Y92xbjpNhQ6f6ybGw
+dmdhwzBMcDTvGNTP9kTUd6+NdkQIhE1vKMjr4l+jGwU/YIhKt8JD+QueU0a
0tl7pVuY9bt0npna+JK8vdlwtFPKCANbXnulOvWSjgn2z1prjVBYSx4sk+0l
dSpUu0wVI/TXPKp8+6OH5F1r5HLXN0JppvDJE3k9xLug6Vi/nRE6Xd+KfZvp
Jh/PP04fCTfC6aSsw7duPSe9/RxfbQ4x7w3Bc50pKc9J8ypbp2txRqBrXvKt
8n5Ois484Q06ZoR9p5q4V6x8TgJOtZz4dskIfp97YqNjushEatvJP+1G2LkB
Si0+nWSglWva87kRJPo/ix427yRPOe1d614YQSFutCNCspPcTG4XjH9vhOcL
5iGkv4PsSXh6imPOCB5nA1TnN3SQ6aiO0wKyxuBM4nlfVPOU/A7oPqd4wBgF
shYZoxqtxFVvywm1aGPUNtYeC1toIcWsHxO1E4zxpKViYOvTFuKZ/WOvaZox
klgEYl2DWsjDRjEb50vGCOgS2FlY8oQkrdk2HdFijML7ejOvKI/J4KexsUPP
jNEvGpW+XPQxMbgT8jau2xjy02Q6Y6KZjNsntKQOGGPx/Xeyl043E/uowry8
b8x4SlKsir80EYHeCbvHYibQfnn0et3NRhJ4cb9Fu6QJ3nWuWTSf1EgaAhf0
u2RNwFasuiV2WyPZz8Yn069mAt735qw7hBrJSw2duS8WJpgO2SCXHNNAco8e
yBfeZYJrP9hWh/o8IsrmS/9uv2eC8eZn9HUbH5Jb166vfVFngvUT8UKyBg+J
jqCTs22TCWKe6FUaCj8kJiPZV5Q7TSC0+Nkb1d464nBMif71owleSVvtXute
R0Je2mdH8pvi62RDUdGTWjJr8e3huLApTCLYPhuk15Ko4qxPmyRM4TyZctTc
rZYkRL81M1MwRR41ZeTOUA3Jkts7vMjMFGpSXHYSbDXk7t5MrdSdpvibPpv6
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79508#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79508#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k41N/7/4lKiCwVItllyW5smadt7NsMRrYQsk2KJJJECS1KKikhSVGR
bCFbRFLZoryJSpaESlG2fq/Pdf2+7/f8MXM9rtd5nXOf5/287zNHzDuE6ruK
iYnpAPH1v18L3/HO+okyfab//2E1Eto/JJhG/j9Wy0q//kjw1r9s+bKvJFOw
9F+m+8w/SRVs+pcHlU4ZnRXs+ZezN9omJAuO/MvH2R7JJAn+/Jedd+UUffvO
iv9jjr/H3Uy3cv/LUvbT409P8//LEa+0yek/Bf/lzaU875mZRf/l8o9G7a/1
xP/lXrPj38+a/sdzD2o3WVH/Y9IRba/Wvf9xJZ/SXH3qf/zYWGhbyfh/XHP7
W1hamsS/PMC54yo16z9eCg2q3VDwH+8kj7KdrfuPa/v+yTz55T+uY2tpOQTJ
f3l4H+uUuqUkvM6/UHFoEdZnemPAO+soiYxKEkdUU6v+Nt1jpIeekrhVbnur
7M6iPnJq3EKCJIGWLe+6Q4XJnmsXjisekkSATuSslKg6OZZByp+MlYTW3VeO
MSsUcnb3wfa7pyVBDpM0NqpwItdrl3zfe1kSq70uUfXVfcjDWTObpHMkoR54
5ofF7f1kpjWKeiOFkvgooriT/jGSvC040OtmuSQUb5idDFCKJxt05Sd4Nkgi
xl9ns7vnabK31ufCre2SmOOOfsb2NZUcd0O8c6BXErfTdhdJHLpKvsnqOZfx
QRJbbdoVBp9kkxsDM7fs+ioJ3a5hC+qlPPKjiaAgjzlJKHg1/zaaLiDf8tep
3sMkBdbgvaspacXktDE2jgB2KVxbeBz9S76UfNKvz2UfvxSU9lyZgFkl+dDn
vIKwrVJIv3NLTmy2huznc3DhsKwUlFcuvN+1pYFM/2RoEaMqBb25oTNpXE1k
M2+ejHg9KWTHXRhwdm4ha38YmkikSKFjYnFd3XIbWc7zgfY5OylsoTetT2Z5
Td4yFJ100UUKbj9bp30rOsmcHpbv0n2kYDtrdm5MrIe8PCC4/cY+Kdin8XEL
PO0lT7uOH849LAWZEZeajOvvyK93nRR4cEYKsas5jqQvD5Hr39L8H12WApe5
0uLFpx/IxXTxyspsKbwOLm1Kv/2JnOpYR39aKoXbGvKz2q1j5Pies/mttVKQ
V4+4obH2C/kgzW3+ZasUyoWECtl8v5Kd7P9cfjsgBZaj1tev1X4jm3a0jA6O
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
7kv2WfeUC1dEOX79/WuLT00sB0NOcuH/ASwcAMQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79508#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k81N8X/7WQENnXkmVkN5bIOq+ZsYx9T0lCUiHZiso2SpSKpJIIJbJL
tiQkokK2lKJFslSipJTwe/8ej9/v8/XHeDwf9845r3PuuWfukfI65LB3JQsL
y3vi4//+t9g70dM0WWXE8v/+VtPFAt+JplL+P2tmpWXcFc39jy07X1Zkilb+
xy7evx+kiLb8x8Nq8fRzov3/cbag7akzoqP/MZP97ubToj//4+07cspmvq/G
/2fOZaab2Uae/5hk/23iUaLAfxzWpUtJ+yn6HwtX8r5dsULyP64eoXc8N5D+
jwcYzO/nzP7Hv0obhKwc/sc6x3U92/f9j2v51X41pfyP7xmLbaqY+B/X582E
pKbK/MdDXKpXHbL+x/+C/RrWF/6PDSlj7Oca/8cNL99kxn3+Hzeyt7Udgex/
/D5g9ZSWpSw8k5+pO7VJGLG8oPLNOssivVaH81hLu9Em/WidOx6yyK22za26
vWCEnHq3Q36yQJv4YF+wBMVjzV+myhFZHNA7OkuS1KLEHNTJ/xIji60FXc5R
S6aU7L7QjoJEWVBCZI3pNdsoTboV3/ddlgWr5yUHIy1vyvusaSG5HFlo+Z79
YZEXSGFhUzEYLZLFyAYVQ5eRo5RN/r6eN6ploXKdEXdA7QSF2pt/yuOhLKL2
6wnv8kikeG39VLSxQxa/eCIes39NocRel+4ZGpBFXuruMpkjVyk3Vnv8Sv8g
i402HcrDD7Ipzb6Z4ju+ykK/972Fw6VblLuTfn7uv2Sh7Nk6T/9WSMndr3d/
DwsJq/33sZqmllNSx9k5D3CQcO3vvYg5pUpKnM9L1wABEtT2XJkEo5Zy5NOt
wpCNJKTdzlWUmq2n+HiH/g2XJ4G8dOHtDvGHFJePNIsoDRIMfr07m8rdQmF4
8aafMCAhO/bC0PbtbRTdD+8mE0xJ6J5cWNu4+JSi6FGqe96OBHGXlnVnVj2n
iL+LOH3RlQS3n+3f9tb0ULjcLQfTvEmwnWWcH5fqpywOiSpcDyDBPpWfR+TR
AOXbzonwm+EkbB51rU/PGKQ83xEnUnqWhBhWzuNpi+8oTa8c99+9TAK3udrC
xUcfKOUu0rW12SQ8969sScv7SElxbnR5VElC3halWd32ccqJ/nP57Q0kKGmF
Xd+y5jMl1NHtd2c7CdViYkXse79Sttn/ufxqiIRVkdYZ1xpmKGbdbWPDYyRE
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
1Nl1FXpTMZMacay7SwhrRU49qzpARYyLCXl5QQjsfTOtz0KoWMmx6cAnV2G0
MxON7Y9QIf/ldmFKiDASyHKPBsIJfXvEJW+cFcaa8zubPkRSMX61nn+yURhs
5o/rfsdTIXjjq52UkghWN14rk8mgYovBOO2sgCheGxgz3l2n4mfLhackbVGU
1X19n55DxcMNLp2620XhWm3Ix5dP5PP769a+TFHcKXkXylJBRerfPdwfVMXg
niGjN9xGRa2/l+vUfnFoiXX0pj2louejz8DRFHGsTQv1c+qkYnv2benEenFU
XmzNeNZLRVRUVDSFTwKcifuW7w1T0T71IZ6tRQK1R4taLs8S53V+vqGNuhHn
fzvuciDesQ1y0+OrQzdiz+F/c+v+UGFzt2RPf95G4nytN8ctUVF03PWMKrck
9u6fPh2ylob1ra7/vn6UBJ+Lpq2dJA3lXOKDRgOb4Kd1f3CtJQ0vtzasWxiS
RlP3i+JaaxqOOWyoLl2WhuDBmeh9djS8Deu1vi8tg8ZbJLlWZxq0YwTcRg7I
gF84OTjGgwbGkPdQxD8Z3P/jzfn7MPHO/7RfNlGThPWXo9/eCqdh28uU/fJu
JOzVSL/jdJyG8XjL1UpxJPD4PXepiKEh67Bj+Z5XJOwZ0s09mEiDTDVpqO6E
HDgbuQ1Hs2mgn2xha/u2GR47FdZfvEmDQqP6KtmN8qj6Tf9IzaPhXuY77jlr
eewmHz2dVUTDj/QB09+l8rib8/GFazUNeuGO4mlHFLDzZG1AzzMaWizn31M2
KKHI3Cu74RcNcSrVbPbdqtBSljKi/KFBx0KFn51LDQ3c7980LtDApuUjZMJQ
Q3ffLuGHLHRY5wW8cW5Ww89dO84/4iDmXNO1ysfcyTAKtoto30jHomVVQLqP
OtqceMTMpehIjX94+FuCOux0umqeyNARxj2hnFSkDq9/lrNP5ekIdGp3ufdd
HfGnzHw7Nehw8K3uamFqoDvdaHuvKTGXureudL2jiR2Ri3MO5nQwF++mdr3S
xMju+ot9xFzWvOBlf41FCz9l9Z7329Ehl3ZEFfZaEC3bYvqSmOtu7NYs7fil
Ba9HylpDAXTIakVXFDtqY+6L2Pqxy3RkO7EOJ7rqIjVzvC3jKh2XpmO2rb+o
C03bymjHDDquPvFo3NChi6AK6+mmHDoSzrgeekXRw1R4TNe1Yjr8Ai7Wzqjo
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
e1z4P1XN+bE=
          "]]}, Annotation[#, "Charting`Private`Tag$79508#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
wQ5Xt3LM/vtniYPzvrcWH9jh/wAmu692
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79508#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[225, 7], 1000}, {32.142857142857146`, 1000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 800}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793443144245936*^9, 3.793443173348229*^9}, 
   3.793443209441594*^9, 3.793469059897922*^9, 3.793485147612919*^9, 
   3.793485628506813*^9, 3.793529276031761*^9, 3.793529762565795*^9, {
   3.793529803230294*^9, 3.793529922140222*^9}, {3.793530270960762*^9, 
   3.793530284504855*^9}, 3.79353139532828*^9, 3.793532112019189*^9, 
   3.793538241081479*^9, 3.793628682718582*^9, 3.793631362738474*^9, 
   3.793632431936298*^9, 3.793632611471447*^9, 3.7936328930369263`*^9, 
   3.793635136477975*^9, 3.793640076054871*^9, 3.793640113444213*^9, 
   3.7936402184188337`*^9, {3.793640708734174*^9, 3.793640738153433*^9}, {
   3.79364093528004*^9, 3.7936409965058403`*^9}, 3.7936410297184362`*^9, {
   3.79364138168408*^9, 3.793641392771151*^9}, 3.793707484796719*^9, 
   3.7937176718273373`*^9, 3.793718174359255*^9, 3.793718267674151*^9, 
   3.793718354085444*^9, {3.793718403764099*^9, 3.793718444527411*^9}, 
   3.793719540078828*^9, 3.793801391339316*^9, 3.793801473892439*^9, 
   3.793801567695167*^9, 3.793801637363703*^9, 3.793801740733006*^9, 
   3.7945070237922163`*^9, 3.794507352829672*^9, 3.7945074954424143`*^9, 
   3.794507540402739*^9, 3.794507662318475*^9, 3.7945131096016617`*^9, 
   3.794513178382044*^9, 3.794515315816852*^9, 3.794568641239588*^9, 
   3.79456900171702*^9, 3.794576048210988*^9, 3.7945766844837017`*^9, 
   3.794578137423251*^9, 3.794578427929243*^9, 3.794579360343011*^9, 
   3.794579489358379*^9, 3.7955138461094093`*^9, 3.795513893474234*^9, 
   3.795514547041465*^9, 3.7955157726026163`*^9, {3.79551617646411*^9, 
   3.795516184085445*^9}},
 CellLabel->
  "Out[1354]=",ExpressionUUID->"3a367513-4077-4a4f-8059-9d6274a86e61"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot20scritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sols"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2x20s"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2x20s"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2x20s"}], "]"}], ","}],
      "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
   3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
   3.793641549374053*^9}, {3.7936416596344843`*^9, 3.793641664167588*^9}, 
   3.793707464001343*^9},
 CellLabel->
  "In[1355]:=",ExpressionUUID->"c3187c95-ab92-4c0e-9a9f-3728f6618ec2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxF1nlUTX3UB/DbIEmaRCpRKdKkJ83D3buR6g5JiaS5NJBUFPI0UBINKiRJ
RAhpQpSKUqFUktJwu/ciejQhDRTv713rfTn/nPVZ3+/Z56x91jrrKHjtcfDl
pVAom3kolP892/p+aq8dukul/N/BbyETMiCdCf/v9Rezcsqkr/yxXUtX6QXp
8j929pl6lC5d/8f9645ZJEu//uO8JcyEJOn3fxwrWLbmuPTEH2/ddunO+Bd+
/H8v/B3rumGF6B8rbxr9VHdC8o8jXhpC1oT0H0uVi7N4eFb+8T2uRXOrieIf
v9kY+yV5w19PFlUvpTn8tf4hQ8+mnX9dsXjdZG36Xz+wlJEv/fTXVQXjYZmZ
q/64T1jznMPFv54NDaoWK/xrUxgUTK756+qu3gvx//11jWBj435U+mN2MP+I
jh1xjPRamuI8oHSaSXxzIm5ynd3rqwXyxtH6JR7EbK+45epUwEtVrnuCiK/v
e3DtlxV4zP8Rq7GfuHl1R+coDWJ261/7HEPMUFroNbEJag1Lv+w8Q5y4J5DC
sw2eBF6Q3TZM7LtY9KZjEJQNBQW5TRLXeefqqeyGK/5Gld4UZaR4PH/aybMH
4v26XIIllTGmNMpGwmcv7P9wtTBsBcmzXLbnuoSCn0/4j0gV4rq0pnOOYeD8
ztz2X23i00ruMg7hsNFLPPuICXGw7Iju5n1gyBkYSrQmPimIvFv3g6pHkWGK
PZnfLu6T9Ww/yA5EHc9wIblAfvKzBREg7Gb3NsuHeGCyMY4eAXN90mtzg0m/
s7vqXGYEjG7/FJkfSfKfMmMfWBHQui1+WdFJ4oBm6smoSKjt3uxfdob0fa0M
LrdGQrGzYkVFHrHD5+O+ygcg3anGua6c9L8v33qs+wBs2TRzpruP5Fbassdd
DkHfxt1L+DRWk32GTo9U/Qstjca+gvqrMab3lvS0VjRUWwvdXWRG8nnKW88U
RMNFy2uOy5xWI5oISOnaxYAXcjI0DhN3UXlbLGLhk76TxNYW0k8Y501wOgLf
V5uK3t69BikWC1QKx48BlWvemBS5BmO2WKuoWCdCwoWN0f5H1mDtDaXLLjmJ
sFTScWzVOZJ3GuX32x4HPZ6g1ux6klOa3vkUJ0Fkb1ZqoqwKot/3YO6FZJhN
nRD1eaaCte0VD2v50sHS7kej2WviCsnxzUbpcFKAErNyQAU9jnIzaHvTQe7w
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
4v8B0w1jxA==
          "]]}, Annotation[#, "Charting`Private`Tag$79635#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
B+h3J64=
          "]]}, Annotation[#, "Charting`Private`Tag$79635#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
8oURqlM8Dpb4dIOOZlSqmJox5o4f36f3ohcG9olpZKsbI9Mh6b7Tl17wSyof
lNY0Rs8jIQ3nlvVB6cSQuIKuMe4ROn9TA/tgdeqmPA1jY0yXaWpPKugDrk8D
ZbZOxhhVPWAod/IpdNxUbD93xhhTf6ZyCK4bgD2ru39w9hnje6fMoCfFz4Bf
zLfmTr8xVj8+tvfRg2dwT3jFcf8hY0ysXZnbxnoG65bsZrNHjDHa8oFG+9rn
MD07OdDNNkaK4pLtL/Kew5mHf6qy/xjjjuSYi2MZL6DohPJRbSUTFHp9OVMk
egS+Pjo35hNhgmylcx7vMl/BMF+/53ykCWYmjmauKHoFzVTJafKOwpl0Ycut
Na8g5fHNXzkJJpjIeaDcrvsVKPW2i3RdMsFy/YRfAgteg8szThPFmyb4c+jb
QlfP19DG8i953WuCfNwJ8XTFMShVuLvZu98E5fiHjHduHYOLh7jr5wZNMMlV
M/IDjoHbuwstAiMmaPpYVu/rrjH4+ZE+sp1lggN8U4JuZ8dA5duUQOYvE4xN
E32cPjIG6dwuJ3bImyJrpN1/d+Q4/Nm/cuuTdaYYZ/eolu/cOLjf7/lKUzRF
taUBwuVp46B6xvCkpbIpen0vk3xYPA4P/iqcMtUyxa3zZz0cusfh+8/ZMD2q
KS6affd0ZOUbsP8Ul6B0whRfWyW05uW8gQZrQ2pxgCkyL3NbXSl4A7KM+aUK
QaY4wqsbE1P+Bj4ePZa09rQpfgkYVNNqfANn39udl441RcOTbmG/ht9ANWvN
ZdEsU/zjuXtMaNUECL+sucbVYoqDGfErB6ImIGlpaGhdG7k/ny3dmjABvNso
DkcemqLB4gC9ggsTwJXeu2zgsSkW6cv90cudgM8204HFz0yx8nJxXOftCehp
VaBZT5si1530xwc/TAD1y7Tiws+k3sHzBeGzE/BAto779heyj1sZtxJ/TEBT
mNFtuZ+mqByyeeT0wkko19639ju3GTK7O1S7JCchsezKr2xxMwz8S+uVNZsE
nuF9AzukzHDggMHOQKtJiOJVqlgsbYZvA6jGzbaTEHyw3uP4WjM85JzXtMVl
Erxk+p9QVM3QrkZ1Q7LvJJhe4i96Z2SG5+7tytPKmISFoRF22sfN8OnyDbTn
Lyeh+tP7H01+JL66qjd7bBLcPRyuGgeY4enCAxaOk5PQQlN5axtshkVHc3bW
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
jw==
          "]]}, Annotation[#, "Charting`Private`Tag$79635#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
fxakzUXYehD9/wETuLKL
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79635#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.7936416699497128`*^9, 
   3.793707485144012*^9, 3.793717672169283*^9, 3.793718174752056*^9, 
   3.7937182680018597`*^9, {3.793718430471394*^9, 3.793718444976821*^9}, 
   3.7937195403741617`*^9, 3.793801393609724*^9, 3.793801474194271*^9, 
   3.793801569935988*^9, 3.793801637647945*^9, 3.7938017410853558`*^9, 
   3.7945070244257717`*^9, 3.79450749572329*^9, 3.794507540675671*^9, 
   3.794507662632415*^9, 3.794513109923526*^9, 3.794513178687973*^9, 
   3.794515031986408*^9, 3.794515316140401*^9, 3.7945686415543633`*^9, 
   3.794569002111548*^9, 3.794576048750243*^9, 3.794576684867744*^9, 
   3.794578138053644*^9, 3.7945784282282667`*^9, 3.794579360714518*^9, 
   3.79457948970118*^9, 3.7955138462490396`*^9, 3.795513893596073*^9, 
   3.795514547258518*^9, 3.79551577274708*^9, {3.795516176587214*^9, 
   3.7955161842434797`*^9}},
 CellLabel->
  "Out[1355]=",ExpressionUUID->"bf93f6b1-678e-4131-8d3e-5e975d32ee0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshotinfscrit", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sols"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2xinfs"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2xinfs"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2xinfs"}], "]"}]}], 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sols"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2xinfs"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2xinfs"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2xinfs"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2", "+", "10000"}], ",", "1000"}], 
          "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793394861836452*^9, 3.793394918159622*^9}, {
   3.7933951496126957`*^9, 3.7933951633752604`*^9}, {3.79339523317878*^9, 
   3.793395327131968*^9}, {3.793395363113092*^9, 3.793395454093955*^9}, {
   3.793398236334831*^9, 3.7933982401612463`*^9}, {3.793398273947652*^9, 
   3.793398297786425*^9}, {3.793398587977316*^9, 3.793398589049642*^9}, {
   3.793398642868155*^9, 3.7933986473815727`*^9}, {3.793398766872898*^9, 
   3.793398769091921*^9}, {3.793398847935656*^9, 3.793398887738555*^9}, {
   3.7933989372257338`*^9, 3.793398938788555*^9}, {3.79339898752773*^9, 
   3.793398989638323*^9}, {3.793399423963974*^9, 3.793399443278512*^9}, {
   3.7933996196258163`*^9, 3.7933996224000072`*^9}, {3.7933997698848143`*^9, 
   3.7933998152795763`*^9}, {3.793399870324162*^9, 3.793399874653573*^9}, {
   3.793399955092331*^9, 3.793399981729393*^9}, {3.793400297337214*^9, 
   3.793400299363748*^9}, {3.7934003321033993`*^9, 3.793400385420542*^9}, {
   3.7934018012048273`*^9, 3.793401888718988*^9}, {3.793401932418544*^9, 
   3.7934019352989807`*^9}, {3.793402009236326*^9, 3.793402049607609*^9}, {
   3.793442209711054*^9, 3.793442344238595*^9}, {3.793442922320374*^9, 
   3.793442937773024*^9}, {3.793442988076605*^9, 3.7934430062331343`*^9}, {
   3.793443077052331*^9, 3.793443173022769*^9}, {3.7936406472978*^9, 
   3.793640665968298*^9}, {3.793640705579446*^9, 3.793640707850029*^9}, {
   3.793640933155513*^9, 3.793640996078887*^9}, {3.793641378889105*^9, 
   3.793641381201693*^9}, {3.793707457526559*^9, 3.793707458707697*^9}, 
   3.793718353427245*^9, {3.793718402938336*^9, 3.793718403333542*^9}, 
   3.794507352297159*^9, {3.794563762721336*^9, 3.794563795298415*^9}, {
   3.794563946197773*^9, 3.794563968193676*^9}},
 CellLabel->
  "In[1356]:=",ExpressionUUID->"1d82f6c4-ef1f-4d56-a927-f1acb5103798"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
73NzTKy8SNlqTxsg/gfG0JU/
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79746#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF13k41N/7P3BKJYqiRJGsWbMNIvEcy8xYMhuTREkqRZJKSUVZoiLvkhBJ
2iiRJCmSkD3KkkIqibKHosXvfK7r940/xvW45pzXnNc5932fc+Tc93C2zeDj
4wsiH//7b7Otp6G494Ep3///E7BY6vteKtbs/6yXEp90X+raP9vWtuQkS+X+
83qPH4XnpEr/uV3rpEWUVOM/X1nMDD8l1fXPxwXvr4yUGv1npw2pWUPDAvg/
C08dd6EvF/1nJfZAz/PTi/75YJ2RWfyo1D8vyV3Ywc8v+88uZ345dElM+6rH
5+pyjWlrLH706LTTtM393S4szp62QdL6G7FaK/55y6Ybrrc6ph1qsywhoXfa
NwxiGk+NTrtP5LDtbiG5f/Z/us5I12DaZ1aMLXoSNe28jxY1L03k/7mZcXw4
ij7t8btFEnacaRsGGm2p2DHtfHGt8eJz035kuXRFTs+032ast/L9Pu3JBRd2
rfo7beN20QcZ4gr/XHBglk2a6bSf3BjaFxs77bZ5qxI4KdP+7edVtCBj2mvN
ugWjnk67qOVdctjXaXeslXpuMTbtv2m8Hn4+xX829W3QPbZ42puaRZxMVkz7
mInd0Um1aV++Gnk1X3/aTwVfvPDHtDt9BPoptooY/Slnq6zuYMbXRBX77qiI
gZ4DrbG1N81WrAkyvOemiFMqt5Y6PnpuhtQnLnu8FNEwc0G1eHCjmducyeOa
/oqoMB2tNuB9MAvebXjzW7AitjrFu8ss+Wp25fX+mvTTimAzjV2t9UfMio1y
hnfEKSJsxHjVW+mfZp0pgxLKqYpYNNdyY//Dv2Z8szVNum6T/q6CCwL/zsAK
711bruYp4tj3ona74dmgvroZ7vZMESI32qtdtYXhvvrz7eU1ipg1X0ak8KEo
TlyWb2hrVkR+xJqDHVQxlOxKXrahTxG6ObfjZH2W4H6vl9emcUW4BKb29/It
xTVP48db+ZQgsG3kJPOONMK2tzj7LFICN2xh2V5FOTDcFyaGmCjheljr3blY
CaMP73sjaEpojX4oo/VeBWpud42iWUpYsqJGa2OQGuZtsm2N91DC/oL/5JNP
auLlhjDJu2eUsOVg+pN+Tx0Uv+F63o9TAqv/xM9kPl1kr5fPz7+ihGYIztI7
p4tzjk/XP89VguTdheeTrukhpDHqZkWREi7ENo7pKlOwn+vyo7aCjLe8/LZy
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79746#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
rBLf97k5F4TKLv+2M1gB/w8XsmTI
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79746#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF13c4l1/YAHCKyJ4ZJWT0tfce943v154hkREhRElKyt6yShKilEKSFDKy
d5RsKWSUFUlJaXm91/W+P88fz3N9rnPuc+5nXM85N7/L6UNuO8jIyFy3Tv97
NXSb72tcqNAk+7+DQofb9z1XGvy/5W5nZJdx3fvPRq9GnuZwlf9nG9cfdalc
rf95XCpWJ4lr8D/nspvFXOb68J/DqcsOxnOt/ecjtncef1mlwP837Wa4vd5+
xv8sZPF5viWB7T8H9KhAxhrXf+YoZ54gJ+f9z/aJv60+7Nn2XdeP3e3i2xZn
r65OOLJt7fPHrrOXblsx2yY/TYrvPzs75jsUTmw7ynBvZubCtvMVrwxeXtv2
EsNFIx8a/v98vsFERVZx24l839lqk7b9bFrn5Wv1A/95WD98NUlv2+sl9XuM
D21b6ZKKc+eJbVexSq03pm67msjN93R+22+LbEi+37b9i+m6l+S/bauOM1YU
sQr855pzlIZ5mtuuzf9yNi1t22N0kpmHbm/7j9/JeqaibWvALHVSw7brR97l
RC9ue0KDq0Xn+7b/5R2eJycT/M+avn2yIezbdhxmOKLOt+0QdePgX6LbvnU3
/m6VwrYbqDs6zuO2J09RLMsbCeLaT34jYTErIBvSYvlmLYif58+Npr0qAD61
UKUnxwTxMqGQ27q6BfBOrf3pk4LYt5OpmzVsEI5R/QqXOC+InZpr3YqHpyDM
R6ngU5ggHj+S4cLDsQi5A/4vHyQIooWZqoOBwldoVHm6eiJdEKO/qkq+3fcT
Jm+v7BG+I4hsu4lHlyv/AdkuCfUPD7fiHaiZLv3bgXzeXs53nwliyLf6cePV
XajVXxBzrEkQGfLHux2kadFF+ePD/S8FkZKeh6GukhEjbh3oGxsWxKo4tYAJ
LRZs9srZa7skiLJPH6bznuLAsoWTJx3XBdH+0p3lBTJuvOeh+vw4mRBSuH2N
NSveh9HuI3an2ITQMpq57YwgP+q7MGdFqgvh/ejRkt14EFWm3i/E6QrhaHIl
j9R7AooeK1FJNhdCDr6XUkdDRZHO0Wg0w1UI/WuuHsiJlcDXttGcJYlC6Bzw
oHbZQwYb31h6lKULoflyxM8cMlkstTlQVZUrhMNITSmXKoup1g02LeVCyFnC
fC37nhxGDiYVdNYL4fW0we+ywvLob2n/41XnVr7t7Q+F8+TxsMVG+psxIWTJ
+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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79746#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79746#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxF13k4lN//P3BJZYtCsqZsScpuLGWeZsTYYhZGhSSkkgoVRcmeFiVJZClS
oahsKbQoKiFESlLJFlKKsvU7n+v6fXv7g+txmTnnvl/bue9lHrtZXrw8PDwb
ya///bX26nv1oL/YlOf///DRZfZ8kE6k/p91M5Iv3pHO/mebl22306SL/pnr
OV6RIF39z+81Y+gnpVv+OXORfXScdPc/H+W/s/yY9M9/dt5wqWDkOx/+z0J/
j7pYLhH9ZxXmcN/j4xL/fKDeiJr8U/qfFxct7Jw1S+GfSz7R6xrWKP5zK+Po
95OW/3nsZqWkLes/Uw4Zband9p/LxDXHHiT857vmMktv9/3n+zkjAYmJSv/c
Ibz6AivjP0/576xckPuf11J7+E9W/efKtndpUQP/uYq/pmY/lP+5y49vSM9G
GVtOv9Dm1MiZ8rw2Ext1VEZKGUXoYHWt6VKTI5Rb7srILrHPLr42aYpL9112
71QGamTbm/3lqO7zJo6u2q+M7cbBoyoKetSwXZSrX8OUYXi93vHwjAU1szmw
7vpxZVADlM3ppU7UB0a3v29LUsacLedYpnqe1K6Mb5Kql5Sht+PED+ucPVSe
uavWdOcp45P8qrXcT8HUpb47tlwuUcaqdEbUds0IqlnT1Wj3h8o47GO82NX9
ONXD8EvekjpljImGPOUfTKCGpyu+6mhVRk7i5gKl/Reol/ncx1I+KmPJ+jqN
9xWZ1Ec70mQ3DCrDpKnLmnXuCvVO/86dbmPK0Njy5Dd9OJea7WN8byuPCvh8
t82xSCykJvbyC20XVEHqxN2QXyuLqFHebRv9JFSgufV8Pxhl1P1fruQGLFFB
8rVs9WWj96nenoETQWoq0Jo507lB9iGV+5lmfVhHBWvGPpxIFKmmMjwWpkSs
UUFm+JkOZ+caqtHHD/2xFipo7J8UqJp+TlV3v2l0ykEFstzq+XGzG6iyH0KO
nd2oApeftcNepa+owm427cmeKrAfZZzqXdZCne6QXpHupwJmorio1ONW6vCm
vqCsIBUs7954P+ViO7VhQ5TUzRMqCJsjdCh5+gP1wRu2z50kFYhYaU6effyR
WshVLCvLVEGDb1F1cs5naoJjFfdxkQpy9FeOGtX2UiNaTl6trVTBSr0D6frz
BqiBbJfxl7UqKJGRyeP3GqQ6Mf8kvelQwexQu4uplSNUy8aanvc9KghRWapb
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
FUsy+UpcKdL1rmqShgm/0Rm7Xw5obHZd/JCHDvuR0FxZ0o8/XTeceixIR2qf
6aE20q+hkNIwn0/Hhcklq+1IP89VantWLUpHrOKbM0+Ipfs4c55K0PHTZbVP
5R8HmPo7hNQuocNgQ5tB46QDajiiMlbL6OjtGnTaROaHA6W+9JkSHbM7Tyzt
J/aYshl9rkaHSX91vvCMA2KiLXe81KGjUyo8PoDMp8YUU+cmCzoW8pQzq+Yw
sSF0+hfLiuzH/y00kMy/T5vvn222oeOehBg0yHz8qWzc0OJAx92Y00ezyPyU
LtC3aNtIx9CSgPZCISY8HmvodfjRkbzqe8c6MSa+Xvn6ymUvHZOLf3YqiTMR
GJu7+30AHa4O6Z58ZF7H2KnldQbRoRriNFa3iIn8NiXFj+Hk+ytFxg9JM/Hr
q8yCniQ6PnkpCDksYyIxrbfm4gU6JKenineS80LXvugI+yIdufFfDOOUmNh7
2+7bg0t0nBRsqWpQYWIoKKw+NZ8OnwXzL4WQ8+jLnJ4TzEd0/Dgiruiix8Rr
hVsCFUN0PLhG1VayJtf3KvRhwAgd+470SiTZkPM9wjpYfZSOuAfBp4XsmGD2
fO47/5uOOsl55jP2TLzMl6z1n22OtJNX7XnJefrEKCRaTdocmWcO/Q33YKKY
bTk70dwcp7U/GjmFMhFrUxYlZ2mOJrEBtz+HmXChr+C/YmWOo2K/j6SHMcGr
KzS/ZL05rvEX3hiOYGK9WIPkG2ey/gKfkJw4JvoandTldpnjju7ckb3JTMis
92ZmnzNHaP0nbe9iJo4wojKKeszhu3D6oN5PJpa9t36TFbUOK7YE/vANZcGY
EpkorWOBh6UnHx2QYaPVQ9ogTc8CB3ipZuVybAScutm2lGKBkbN9ilNL2Mj/
8kZGbY0FsnalT4cqsbEkcdUlAwsL3DxefyZYgw3e76032BstwAq5o2pLHtRe
5K6oORluAfvJmGjTLWz4tFb6LIyygHShR5DnVjb4eDmC52IsoHWvx/CYFxum
Gw7bXTxhAXa9knjDdjYK5zU35yZZ4O053as2/mwkeoZ01eRaQM/aTIIvgg2X
JQ1/ZjVbgDdwischiw0Raf/ie68t4Gqy9+yeK2w8FF+0d98bCyx0bp0Xf5UN
VYFNfX3vLRDUJBv6JI+Nb6M9rQ19Flj9Qq1vcREb4c9m7qTNWGDCfHiNXTUb
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
Vlfyt2njvILQr79/7TETc2zPZ5Y2/h+FPlWH
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79746#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k41O/3/0UhM/Z9KczY17FkZ55mxm7GnhZlLS0qoZ2UklCoJPtStMiW
tMtSikSWkIoWFSqihZLk9/pc1+/b2x/jelyvmfs+932e57zOUzlom+c6bi4u
rnTi43//ndeNdjV8vGbD9f//FjLlwl/LptP/j40KMnOvyhb/Y5f2Z9V5sjX/
2Dfk592Tsk3/eFA/gXlctucfF0q6HUmSff+PD/JfVU+U/fGPV6wsqpz8uhD/
x6T5g34OS4X/sarHl9H7yRL/eNcTc3rmD9l/LF0j+mrBAsV/fH2I2dZhRfnH
fY4Hvx53+I+nK+qkXD3/Y9N95oEtof/xTXH96YaT//EtlpxS9eh/XHt+MjI9
nfqPB8h6WZ4F//GfiM11IqX/sTV9mP94/X9c9+xlXvyn/7iev7l5J1T+8Zut
C8eNXVQQmPbYwLtZwYar11bsu48Ksm+akvY2tdgoWcaaXglQQfF1t+JrF2dt
UFTrt22zCtAs//xphAI9gO/3Qd2dKthosee7qqIx/cAW0wufD6jA7NITn/1/
7emFT6PaLiWrgB6pwmLeWE5vMK/+GpqhgkWBpz1tjEPobwompNSKVGC86dg3
5/PhdC5eXav3l1UwtETX2ndoD10pbFPg2esq0M13jN+of4hu233hSECjCvZv
sJBeE5BMDzL7cHlpmwqmhaMf8o+dpMflU7oG+lRwPt2/krozi352YcB09lsV
LOW06QzeLaTf25Qnv3JMBZbdb5w9T5fQr37cvHnttAp0Ah/8Yn4ppRdvsLgT
zKWKhWGhi+zTq+jpI/ykjQKqyPl9K3pKu4Yev/7Zqq0SqtAPPvMRjjfpOz+U
lEYuVUXmxWIt5e+19PUhUb93a6iC9vfEq5XyjXTfdwzn/YaqsJp+fSxdqInu
GCSafchKFYVxJwZWrGimm799/fGovSo6P84urp9rpWsFVJinuKtC3rdJMImn
gy7/Ojrx1CpV+P1o+bLuRhedvNbleWaIKty+O6aMKPfQ5wZkNfO3qsIjXVxY
5n4f/cvq0d3ndqtC/f2q2uzc5/SOlfEyFcdUcWARaV/m3Gt6Q7/XhqsZqhBy
0p89df8tvcqXcvNmoSo6wmqaMs+/o5/0qfe9X6OK88u0v5u3jNAP9Ry/0FKn
Cm3jXfnL+D7Ro7z8fra3qOK6nNxl/nVj9OUeMxn9A6rgiWHn5tRN0h06m4cH
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
yvh/DeuAvQ==
          "]]}, Annotation[#, "Charting`Private`Tag$79746#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxF13k0VV/0AHAZokimMidjhveQeXx7v2eeKaQSkVCZSQoRGaIoCclMyhAS
UiKJyJTMlSnK0GQqlfHnt9bv1/f+ce/6rLPPuXvtu9a5+wg6eh44SU1FRXVs
8/a/T8OT02/rZypJVP930WrxeI1yJ8L/Wz4zJe0Rd94/G3UMlKdzV/zzIaff
tQncjf88LBOldY2795+zdplFxnB/+udLDI/2XeH++c82h7NL5+Zp8f/NuHHJ
Vm/Pzn8Wtfgx/TKW45/PdapCyk/uf+asYB3ZskXgn6vGtdrfaAj9c7/+pflr
ev95qaRut/GB/6wcqOrQ4vKfq9llluoT/vMTbZ695dP/+Vn+nG9iovA/DzFJ
3z6Q+Z9Xfc7UsRT+Z02YZLj2/D/XDXxIj/jyn58zNDf7o8g/j3nQflcwEkGH
6237LZv5SFR9ZLZFKxFMrVZmvNDYQtqrHqL88LgI5lWZ5VXeXyFh9jNbzzMi
iM2873p8+OA4/fIlor8InlI7vygqoACh7sr3voaKoEpBp9XFdV3I6vFrL4gV
QfAV0dZ6bA31quXzLkkiSOdw6wBJwQnGMmd3i2WLoMLpqwuG+V5AtZWo8alI
BMf5iZqHxs/DXrfTDjlVIkjM0I84JRMO5O57kcdfiOBFVzXOY8djwVHlc9Ge
dhFc2hn0iuFbAoRlCL0d6hfB/ET7UmH/25BDe3wp9aMI7jFtJwzXZkHD6XTe
w99EUL17zPDArbvwaObMGbslESQ4NP3R+lEIea5qNSeoRJHWzYVON7EMEqcY
GE9tF8U7y0+CfklVQITzwBEPDlGUOZE8g/rV4P/5bqHvHlFMuZ8nKbj4DJyd
/JYDxEVRdv3GyGHeF3BogmJ4UU4UNZZGryYyN4K+I2tquIYoZoXdGLKxaQbV
j6Mz0bqi2DWzsu35WitIHi9RjTMXRd5DjTtiaN4A72jQlZtHRNH2Z8uPk4/f
ApOd0bsUJ1E0W9SPmxLshbUhbokMD1G0SGTfyfWyH34cnQ7IDRDFfZ+OPEtN
ewdvDkdwlVwVxVA6xsCUtVGoHzzo+ihJFJkNZFZuvvwIZYeEqquzRPGNW0Vj
Sv4EJFg9P/SyQhTzFaUWVVumILz32r2WOlGUUjiXoUj/BfwO2v7uaBHFKh6e
IoaT38Da4m/S4JAo0gSbpN2pmwO9rubJ4UlRDBLdK/+YdwFUzJKUJuZEcep5
etSe6EXgNpHv/04rhvS/p5yd45ZgSN99Fw1RDH1y130oJmvQ0ax+kkFZDCm9
PoxKghtQp7u9cgdZDHtPuO+8e4kKM7XvWXJZieEbyrp8VAA1OuLHm8RgMXRx
an+fXbUVDz4vnZCLEsPcH999jPvpUZt0UV7lhhgm+wS9VlplQFEN3h7KXTEs
vlIpZ3GEEaeVrdhsOsRQujSnUFmaBd9VCTseGxDD+uUXoj59LNiquPDQ8aMY
Wj+wOnckhBWL5OMt3H+JIRfjwe9r79nQQ+b19TD+fTg8YFwhXLYLf4lp7nzg
vg9f6JVa7mjmRdI4pTkmYB+Knuxqis7jw8h0/RDX8H3Il8lmq3+ZH3dzWM4K
396HP1oLQhwMBVBpy5k3qY37cKGpkTJ4ThADPqTER/OKY6m3FKXdUBRX43/u
dHotjt2ckn+CI4mobbTcTO4VR5G0gKP9zNJ4dStVqMCoONpaVMZ6JUsjfzDj
3Puf4njLlW2FUCCDpNNCXRZ7JdBBAyk3JmUxRNv8OpyTwHcbVOXjtPJI/beI
hVdUEgvHgw/3LCshbwdlEWQkUYOj5Pat/cqokP2uz0lVEk12vNR56aKMJw3o
75SYSOLgzLsblt3K2HLbUZTiL4nRdot31zJV8KP7X3qXUEnUMrVraX2rgsvk
619iYyRx3ujQxndqVSR8qS3ty5BEpP37k3hCFePVuNVONUviY2nvZw68anif
uYwv7q0kxu46ol+op4b147ob5R8kkaL7WF3dVw0XYvwaV2cl0bR7dHV/ixpa
f3hjep1LCkvyE8ysT6mjZ6nz/kohKXT12OX1Kl4do8PX2N8TpPCyIZ9aQKU6
PpGSeidMlkL/vdy3MtbVkS8o8sTjU1IoG7baMxelgYrm/LpDvlKb+12OsvN9
DTQVqRDfcnEzPjejj7dFA0PaP343TJDCA4OfDfXpNHGcTzNg5KkUrpOyrMv9
NXFlrucITZMUWnZIssrf0ESOptOa4m+kkG1jgfi7UBN13VOofSak0JmpJs14
SBMLahev0jERMI+DK1dLiYQNN2I8JXcTcPz1m11LhiR8f1LwgNleAp6UaM9f
sCMhE7MZ520FAvKXDWd0Xiah6Pjnv7UkAr5QT9EqSyIhqSpoaFyfgDFq45fG
7pHQy64wm3CMgAmhyer7W0h4RY582cKFgGIBEdssB0iYs3XQ2d+bgBzCMUqt
n0nYU0JHqI8g4H01lY1KKsBvYWnMn+MJuG/lhpb0DkDaQ/Lz21IJeFHcSmWD
C1Bp43jVwRICFiaX6pVJAxqb1IfpVBNwa6E7wwkVwBN3BMyUGwjoxeNqe4EM
eGHmIq9EOwH9GwxKfhsAXlcemeLpJ2B+YK3rkAVgfoRmBdPYZr4CHksShwGf
9aSFrs8QsDVqa8NHe8BuwVXjuUUCVhlaKNI5A854HuUeXyPgtkX/zFtnAKnq
nn7uoSfiim2NR6IX4G4mnvImViLeDk4SoTkLSDhy/uJjXiLOGoRSJgIAKfcH
DQtEicj4eM5AKQjQZkmZ844MEVef2D9buwjoqZ08cVWViG16OrzqlwAjE5ZK
L2oRMdqKe3o2DDBtzCrIy4SIhtaNOfyXAculK/UdDxGRzrShomnTLUEcuywd
iMjlvDVjZtMjrb4fdc4Q8WbPo+mYTf/i6nmgfJaI19q+7ykKB2RykbsgEULE
XeEDrUab6wtV3tDlvUJEkkyiv0cooArNPNuOm0TkodMr5tjMz9TCfHQ9jYi1
quxLEAjolFlaNJdPRC3O9g/z5wADvzMHjJcRcZu/fZeUH2CCuod271MiZr4q
tpr1BLx/pYPlVSMRvQ3WFzQ361c3QBh+3EnEb6QMGe7N+vaKXi0oGCTipan+
hLDjgFsaDCnXvhGx8KD6FzpLQC6WQuaQpc18Ula+CZkASttt++BFJY1hawmy
vTqAR5abfS05pPFFwH29v4qAXvr7UHePNLZTGFm9iIBRSZFMKuLSmHE4fz1U
BLBCTucur4Y0iqtfVD7HCtgamue9Q1cac9yUA+3pAcc6aUgbZtLoVS3YO7VK
wh1nGvrHT0jjX3mvMyOTJHTOBYbCWGnkIBdgTBUJg+Yzeu/cksYev335qQUk
vAnrWdcypfFp/PUQ6zQS1n94pur9SBo3ot3M+kNJyM2hdkblgzQWSX29yadL
wvbLCp2vJGXwk+Bo0VSDJqrtbKO+oSiDl6L8td6UauL92w7KR1EGN7I96d3S
NDG8JC5r1koG24Y4z7b5bcYPTvtwXZJBX5J3vKnQZrxUOufpARnkfZlDqPbe
3JRnwsq2UmTRNlvDtOirGgpc//q34IcsPlnp209zVRnrHEIKyhdlceR+Uxm7
jzLaybMfrvkji8dYxr7ttVHGtH616nbq/bgnGtgVRJSRiz/Gf3b3fhxSW9tm
/EwJ2QrFFxVgPwZHPxwq+qaIdI0nvz2P34/VXMH0FhYK+PX36EifrBzKDup1
O2nuxyqX+AZDJTkc3Fvp8kZ4P4YOkPKfq8vhJ161XWbb9+Pux+nuBbpyaI+y
MXEDskjxP7oaZLsZ/5gund1XFlN/9nOLRMthoju3bq2tDOrPd1j6jMrh4aVF
x0J3ArI7BKtMfZLDc3Rv0m2RgCNdBD7bL3K4leHzArIT0K8sdkLnlxxeg5DD
WU+kMNPTwIebUR5/jN3mqmWQwqXvjfH1SvLI77Al6HKZBOZ9qWlljpPHwUMm
LgFi+9Aj2Uz49E157CgKPoNU+1BZeyKwKUUezVdFc1Tfi2Fr+nZiUK48+sUZ
hj6PE8N588PxM9XyONTVuXf3siiSHi8dbJyQR0LSg+KxdyL4Lnz/8HlVBWRw
3vdTv1YIc2SbFPtIChhiWj69I10I3YZt4mS1FVDD/vXOLcGbfbxyKEyZKqA7
xzctb00hFPvSmW3ppIBqxAHts/WC6Gfu5iwTr4Ad7J+LvnfuRWb+e7OfPing
5pFmVIx7D6J1+PDEjAJehwOzlCl+9Im3bxv/oYBfMm9/ya/kx/4tXPfG/ijg
uzO+gToH+TFjMtpuiEkR83Qxqu8GH0qXne7oUVDEjwuTN+n4eNFES7qo4bIi
2hZk1VQ5cuHFoO23X1xRxDDPqkE9VS4sq5yMrI9TRPpgmZ+cLFzIIZ7pWJei
iPI6uMWvjhOHmFh4nhYrYnB1cQT7Hk5065+PftiriF6H7lMqp3fh1VOVzlki
Sqg3y6seUcCOX/BBNKOkEuo/sjaLvcyOelx3C/1llJCKZltPlz07Ujcn/jBW
U0KHW+fluDnZ8byIn/9fMyUMH1k3TYpmQ+dRucgDgUpYzLVYsuTPimSrsru0
3UpYu5xy4/saM2YQ7jd7DijhSbU7JjcbmHGVJmvm/ZAS3lyo4suNYsbq8nji
wyklNP/T6r/OxozSLJ6Vx9aUcCXGujhBegfytRGbqsSVsf9wRPHdAEZcwqJP
riHKGCt1oUDBkgGf5X29c+6yMjokLL5nFWfAMAbCwcgrynhV8PIPtVV6ZO4q
fpF7Uxm/N65Ne9ylRzH7koyRe8q44TvobLGyFa2DH9pYdinj59ddj1Mr6LDy
yeN2EFRBu5JdW4yO0OAF/j/hpmIq2N3ZnN2uRIN4SUX9mJQKVj0PTLvKToPt
+k8KLiiqYN3U8JZXHdT4aeBpZKWBCp6wFAB2HWrkWKpFKR8V5MvSqntJ2oJ+
co0Vu1+qYGVFiQhd9To4K+zNutGigp79v9P9LqyDjVJQLFOnCvI3HzI6qrkO
6moKjtTvVDBOrF06tnENqCl5O3/82BwXXEiyH1yFeIvLp5t4VJEieG1UetcK
hB4cs8K9qmhzvuBU5cgy+FhpkGtEVbFlz7nh/PvLYH34J+dDWVX0Oprr2ay5
DHwOTk1puqp4abTw2YzbXyj00t7r56OKMm2jFIaR35Dmk8U4e04VjaC8fPzB
b7jmt7p0KlgVExeULPku/gavgIoO+2hVlLdp8yoU+A3KoSKBRhmqGP7VZHaP
yxI0xtP2C7Wq4prsrpU3W3/BaElj7FtBNWyOfkJTf3kBur7TfpPbp4Ztb1sU
p+wXoJ6gY5xIUEO3d4+CrNUXIKuwiemQshrGdRnSMy7Og2P+q2tDxmo4o26r
/+zkPEymt8RPnVPDjx+Mo0cOzUH/EMOcfrAaPrX7HWusPAfNvAbmhWFqePrF
XdWV3XNw//ZrFvdramhZs2ddtmQWTt9qvbGQo4Y/UxhFr1T8gO9X22+udahh
tmYL3fzANxhpY/pp16OG6wwsfu4Z36Bzu4ll/aAa0n69zmO7eb4qie7gCJ9Q
w/2WQaev/vwKXpc7bzH83ZyfLd0iwPUVfgZ2JbOLqOOr42mUE74zsHK6947E
BXXczbq6kO03CZZKx25Ih6hjzG0b/S7DSSjeMhkpf1kdDyRGzBoLToJdym9v
zTh1rBgzl9//5jO8aOLRt8hRxy82eo2p0p8haq/Dz4BWdVxhD6cWWJkA9v7v
xi08GniM+oRye8tHcMv2p3QIaKDdGiG3995HaHTbUO4W0cC3ai67eKM+gj8N
q/CQtAYung4sstf9CO9kFf7OUjSwSMhooap5DDJjL9zlPLPZR6vM6ewvHAUp
Mv26c40GxtEqBDLtH4KywqJ9g/UaOMDCURf15wMocJhbGLzSQBGn6FD/+g+g
MZWSJ/VWA0ek1I4XWnwA02uSRnOTGkhnxRVvev49+LwzSTnPpomxBX9iC4cG
YYmy8OILpyaW7mk5/LVwEAKLk74e5d/sw4sKXyacH4TLIaMkkrgmJgWU87Jx
DUKSqPdnapImek0wP6g5PABPvBPlrp7SRL0/2weoZvuA9EHFds1DEwOfi9Hr
v+yDBu3hCI/N//xXy8Cb08l90Mop9s48RBN5bAa95Ch9MFT7OGTXLU10ep7L
3J3aC1TbP7Rn1GtibeCsROXRHtDLEXR5yEnChXqUkOZ6CwopzGKv+Eho48he
eedPF+yNW/n0XpCElTG14jrvumD5fJ8jLYGE156EJxvc6YIHFlfsDiEJdX7N
3dgu1AXsW+at1lw3LcqefM+vE6h+D3OweZAwlO5U0EONTvj2rbVHzHdzvl2k
lThdJ7wazLMwDyZhyeqA9eHkDjhfZmOSe4OEzWd56kvr22HUvl7b4CkJaetU
QlzE2qDd6gGN3XMSVtnf2t//sxWqjVIbfBpJaHipJj/3ZSskKPthWicJ7zeJ
mBxybAWdneIas+Mk/D1aUsGQ9xqK6uLlbzECJtfWYodyC5zjtxf6aAvYtSul
fSytCRzNZa2HHDb7Plu1wST/JjAN3xIzsNmH3nL7E3fLvAnEZnLnOzb7eoHy
8bTTdE3QWzFd/3Szj2Y5KZXo6NMIssY+9onFgH0zp+poD7+E6QsRaXqrgEun
mr2mLV/AF2sp12wqxPac5KWrSi/g+Bw7tcDmNqyldFfchesFGAl/VuRhQIxY
OK74dKgehK5EpbOwIVI5V7m1utRDl2W725ooYmTGl62xzM+B8M2KccAE8YY7
Q878QA1UWxo/jzFHdIe4O4W5NaBVS/ElHUTk3RN5psuzBo7EyXy4a4PIH38i
xWZbDVyR3VbkdwIxbnXvaRXyU5j0e2bIdh5xMpGldt/LavAZLl9vCkTcSeYW
YLhVDWs6BeXnLyKmP/o4pu1SDRycSTwfwxGLvj4M72GqBq0nnl9K4xCl74bW
yNg+hqw1oRiTPMSP+4KO7mSsAoIzN2nLvc18liLUT45XwuPOnQsVBYjiUXPW
259WQmfm6mG+UsTo+SmgnK6ENXK/xNcniOFT9u9dOyvgSOSV19FvEDV6FO//
ynsE7DvnGBqXEd8k+Ae3Rj6E7tqYKIO1zfV3dK7InHoICW6iW99sIFJqHGbb
jB4CW+sRmve0ZNR4pKl0j3XTEU1rs8xk9H5Nl/M+swxYVlIXeIXJKOfZqfXk
Sil0FSh6Z4uScWbDbCTOshSu23TNiomTsVDy8cU6gVLYWUX3fT+RjI6mSm+l
HpcAs7fXlJ4yGaHz9zPSlwfANKUz5GtExm1lUaU6DsXQfmvsyF8TMnp+dLxf
s78YrmoHvrtoTsbRYuF7sdTFwJhT1n/FioyLrNZVqneLYPsx3reZ9mS8xnGR
t/NHITD0zDW1+ZKxfeU91WBCAdA+v1MqnEbG5OghuXu778F7DW390Qwyqj4q
65v+ng+lT7+NpWaTUUAkzuBsUz4cqdJkY7tHxsBBpzyPs/nw8MGoH1U5GTNj
L4lNDN4FuzRhteFm8ma/HWDb8yAPFHjau1NaydhfMLaz4UoebEvxO2PZQcbt
Fw8krpzMg4qbTWlt3WSk/WvBYiaQB4yxLhtPhsnorFrfe+5WLlSfL2pMWiRj
2uNRi2fxORD3++CxA0tkVPzxU4TolQMnzq7+2vF383uQh1e6zHM262eyL2Kd
jCc19lU+ZMuBk66zV3y3UdAgKstqICUb2A7Jm5kLUPD5j7kk2tIsOKNQ826b
EQXvfDi6OrA1A+q7+oqrTSg4X5/kXtyXDrvc50JczCnoF9p/6UNeOjy/KyrW
ZEXBLXFONw2004Gd87pP6HEKlhkXiZ+MSoOav06Mv89SUP+L7EwK/x1gfM6s
+SmLgqomQsWuESlw/KgEy81cCuYqrH6yskuByt9aE+R8Cj4471h5RTkF7GXP
X8ksomAmXy9f05dkeJQ90XekavN9r4y2xlomw9HL1R5v2yho15D17IpCEhQZ
OGbVLVGwq81RkEY4ERQIgiT4S8F8gUnDObpEqGMe+/B8hYKipbPOO2duQlfP
Mc4XVFpIyjE2GS+9CT+PHY57uV0LA/qCvQPhJpB8zINa9mjh7NaBGh7nBOhK
Jdl062rhgSQnmx1vr8Ph4LVfBwy0kCy8X3THk+swbv/sZo+RFp7uLb+qkH0d
foqovek110KP3D6pZe/rwF2qqDtwRAvlf6YUHt91HRxfEhSGPLSw7gXBUrE5
Dn595WGZTNJCno5Bhwj1q5CYPtWcdlsLZd3YMpTYroK8WUXIwTQt5Jw5Gio9
Ewve5Saz9dmb46FDmgPJsfA9ILTzTrEWhggnpjH9iYHPdJNXLRq0MM+oPWZr
4xXoE3i4rfa7Fv41uhDbfiUK/N4Gv/Cd08KL+742CLhGAXu44XnJRS1k7dNe
LdSNAovJienkP1p4PL/c7xRtFHQU727xodHGTMGAoMiwSGhSDYoU59ZGt9M+
PxOiI6DyoB5NorY27np95nxpVThEG1VH8Olp47XrYUZ06eFgqyXBcNdAG8s0
I9qiw8OBWp5xR5WpNq6lTeTwWISDKdub3YM22jgc+Bn8f4TBdJe1JJ+7Ng5V
tPkflgkDHlNni7xb2th1207avSUUvusM9BBStNHrfoGJ0qNQqNfUt65M1cZu
1RlJ8YxQcCZKHn2VqY3EGfPuaL9QeMT0w2m6QBt5H8Z2iwmHgnHb2QBCnTZK
d45ttd4WAiH6EZkVk9o4d/1HTXJVEHTbudrKzmgjla+amlxiEIicNeIu/qqN
oeS+0yw+QdCazXozd04bbZx7i9Okg4BjJT0yYVkbs1enLsQVBsL9B1XuXsw6
mGiZWHm/6AJ0sU2rE5Q2vZcYTOgKACGJtj/3VDYPZ3//zIw9CoCzUFIprK6D
Fs7pXHXJAcDj5ifDizr4cHHdet4+AJyaqIS3G+rg2OUdt/cvnIM/57i3Tx/T
wajhdNU2/nMgOGw4mBuhgw7GVWKLcWchpkG91CpaB+27Ap2Yzp6FhXuESPpY
HTxYxHZe/+hZaPBhVjhzXQdJYcb2+8TPghNDd7zcHR38dp672PelH9yXP6z3
omwzn/OPPs9u+IJ0jEvVyAcdfEJbeLPitg8kedpcuz6ig/FlrlRNl31gw9LA
ifJRBxs+DrxY9fSBLgEptvxJHdyp4Wo0qusD3pU/3N3nddAl/1Hl0SVvqBg7
K7q6VReFaJhaY496g5ry5URuOV385RywPUXVC/oduZXSFXTRzk6c3VTCC3zj
Sgb2Kuvi8oVLNazcXlD8eZBHXEMXw1710obMe8KeRGK2kq4uPrU+w6nv7QnU
8/0PDh7RxfovZhQOPw9oK5Rovhami7mJc+JRMW7g2l/nyhqhi0W6zVUl7m5A
S225/VaULiK1mAyzhRuQDl80SbuqizOEm0zeXG5QRt/TU5iki6+831YWFZyB
RKegseZCXaR6uTVzT99psN3z5u+WHl0M7UqrNDA4BczcPpU1fbq48+7ymWSZ
U/CCfZf32UFdvG5P7KDefQrEth2dnh7WRYrAchlxwhVmFyf730zrotbS1U8P
L7pC2Ov1R+nrm/U4dV76xBMXuO8n7aEqqYc6VKmpsorOcMTzrcQiQQ+HBpLu
m/M7w47Tfp+LZfRQ/aXdu0w6Z/Cxf2q7V1EPi7RtO1v6T4K6oa4RPeph1aqT
/P7Ak9ApYCfeZ6WHcOukZW2bE/xqvTbudUkP39JP6nVGnoAhxj7X1XA9ZHml
NP3U7wQ0GPPNRkVuzk+K+/rM8QRc7yxcyYjVw8/GHB3rpBMg2d3M0XFr0/x1
A6f+OILduy16EoV6m//Hmu9HPRzh1dTZoo/denhlfIJ4z9EBisVr97v36aGh
fZi+0AEHuHmKtvrPgB5SD0tbZpEd4PjXhMadw3pIeeIzl7PXAZZ/lA5rTumh
r9VG6tLIcZBZmtmZuqKHHDOSb+WPH4cUWju/AyL6mJF4rOjjtB2sn+BUfCum
j7y6rz0dO+zA6WXXLzMJfUylpZzYVm4HsmFa50yk9XFNuqy3OdAOWjbEL+ir
6CP1ZF/nHxY7+L28GEIy1kdOymrMU/IxsJ6/Eivpp48b7+0DVJ4cBfaRyhzq
Rn3M6fvQ+2fCBuKYgoMfv9JHz4HBQ4rtNrBdXdvG7bU+Sl5yHg+osAHqlO4d
/Z2b66nZB7NF2MCCxWxAwTt9rMSl3mAxG+hqEjczn9XHdxMDH2POHIKrD+6s
pPMYoHaHgcMgszXQBV+yVPU2QMYjNfte3z8IFfPf/j73NcC7O76xiKUcBCdn
m0xdfwOcH6A/fyPqIDSayXw5GGiA78t2+yc4H4TLQsMhHhEGyHJW6qe86EGg
bVEpyr1tgH/MtkQU5R0Aava5LcwNBrgneURAsNACyqOO3ktsNMAgRZ79RakW
4Lj6ypi32QAHvs6RVWMtoOFzerJ4uwGWZ0WwHXezgLBqI6JWvwFyEybhjbQF
bLG7ZxPwxQAfUkeCU4U5UBXYlY6zGWL2hhm3zG0zePVtwCNzlyHaf0/8uSvQ
DK7KWkjbchmiWMOgpcgxM+Cs1nrQx2+IAlx9pZWCZiDdLF7UIm6I3irTAunF
pmD7eSG/hGSIHxyqTrO+NoEnglEZF04b4hDLxDNhbmPwSS29xtZgiI33aSbi
l/Xh8WpqVEOjIa7J+LX+GNeHVbvISz7NhpgU5J5n1aYPUcLHzna3G6JSioW1
apo+pBVvP5YwYIiBqpQ6I5I+NNWdJLB938xn2voDz2U94JrgbWPlMsLH+SkH
/grpQq1UNAOrhxEeijAq9bmrBUq9nB0JXkbYXgm5qze1oCzo3g0OXyPcscfV
NjFMC3I6XvFwBRghJWlc/5u9FkR70hEFwozQR+ywggqvFhx4FGZBTDJCti6R
PNZECkypBaca1BkhR/LSMatrZDg+wWTfVm+ETQO1ibLBZHgfmyZs8tIIH1gI
fmZzJ0P7UE2xeYsRnpk3WPtqTIbyi8t1h7qNMP3jqsIXJjIENZybODlphORl
38C1awishj6EMGZjVOnLlTyoDJD1YiejGqsxKi//PVLLCSCr+mBmnt0YmUq+
rpj+IYGp+HS+A7cx7o1/EzL1hAQxW+0EySLGKPrm3d5JEgloXxrsplIzxpOM
axYjZpqwpC5IdfGkMbbdyasfiVWHIWJXz/lnxshsUWBOOaYCmV9Zg2meG6O0
oVgBnZ4KOBYcFLv2whiXXNiTh2RVYEZkICDrlTEy8DJbN9KqwBLvCH9zlzFa
5yhann2gDKzbv7lwfDZGssmbHwRqZdCdpF8t2WGCr7s1r3g+VoSyDBD5ZGeC
fPHXHknoyMPihUV6BwcTPJMdVH1RTh6UDt37OnzCBK2/h+q9E5CHmp07Hw24
mqBt5An5jGU5eBU6Qm7zMUEXxtfxDmVy8MEx2L480gSTegcas/jkYOu+mtTQ
EhMcWeb0SFySBQMaz4trZSZ4gnGPnPInWbg6KuR44ZEJijGUbvvxVhZYU2Ik
/KpNkMhcTF34QBb4th2pdmkwwV6BmARrZ1mQ+/qnz7TfBEVmJWpqqmXgWKkS
K/+6CW57WxFMV0GEqiN/mLuoTHFPe6DtrQQiMG99yhROY4qCpx7MWnsTod5W
k2GGwRRXB4Ji3WWIILRde6OC3RQDK6iphx8QYNLJ4ruxhCnS1R9VcH0kBR48
bq+DLE0xerRjxWBEAkIjsi8NFZqilxxD2I40Mdhxjt7Q4YEpFoY4v3eOEINU
V3e2yVJTHNvd69nrIQaPjFRzZytMUVXn0t8vZDGYZH3bSP3cFOnjs/hXp0XB
KIOKQaLHFDu03lueUBOF3Y/t486umOLtpLMjX6aE4cE0/x1mYzNs37rPZttR
QYhOjzg+YmqGch/OWnprC4LTge+iJRZm6O1ZVThAFAS+Z8/KTA6ZIUcifWQ6
lSDExB99ddXRDCt/NY5Q5e8FV6Xb89vPm+Hu0u2ZF0YFQOgyhz59vhmur95+
gHv5YV0laMfAfTN0qSl3GFrig3ffJ7rzi8xQ/PC0yssOPrh+6NEx3YdmOH2O
WdgriA82JA/4RjwzQz1x2nvKw7ww9DY+g6bHDHeEX/alKeaB6sjfJ3r6zFDI
RmoLSxQPJKrbS+QOmiG3UOiKnSMPGN2VrqCMmKHw+2SGBm4eeBrQ8frSjBnK
1GvqXIvlhiSiYrzFNzMUEWL7m+7KDd7jaZaCs2bYT3Os7psON4gbu43W/zTD
tNinZpQt3EC7pTfv+m8zdLbcoNUf5YKxSvXTx5fNUHt8T8aVWi54djpXRnbN
DG/olsdvTeOCZAHGXxsbZvgw4YBp3QUu+B+AbYfV
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79746#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[70085, 7], 1000}, {10012.142857142857`, 1000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 800}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793443144245936*^9, 3.793443173348229*^9}, 
   3.793443209441594*^9, 3.793469059897922*^9, 3.793485147612919*^9, 
   3.793485628506813*^9, 3.793529276031761*^9, 3.793529762565795*^9, {
   3.793529803230294*^9, 3.793529922140222*^9}, {3.793530270960762*^9, 
   3.793530284504855*^9}, 3.79353139532828*^9, 3.793532112019189*^9, 
   3.793538241081479*^9, 3.793628682718582*^9, 3.793631362738474*^9, 
   3.793632431936298*^9, 3.793632611471447*^9, 3.7936328930369263`*^9, 
   3.793635136477975*^9, 3.793640076054871*^9, 3.793640113444213*^9, 
   3.7936402184188337`*^9, {3.793640708734174*^9, 3.793640738153433*^9}, {
   3.79364093528004*^9, 3.7936409965058403`*^9}, 3.7936410297184362`*^9, {
   3.79364138168408*^9, 3.793641392771151*^9}, 3.793707484796719*^9, 
   3.7937176718273373`*^9, 3.793718174359255*^9, 3.793718267674151*^9, 
   3.793718354085444*^9, {3.793718403764099*^9, 3.793718444527411*^9}, 
   3.793719540078828*^9, 3.793801391339316*^9, 3.793801473892439*^9, 
   3.793801567695167*^9, 3.793801637363703*^9, 3.793801740733006*^9, 
   3.7945070237922163`*^9, 3.794507352829672*^9, 3.7945074954424143`*^9, 
   3.794507540402739*^9, 3.794507662318475*^9, 3.7945131096016617`*^9, 
   3.794513178382044*^9, 3.794515315816852*^9, {3.794563786965438*^9, 
   3.794563795665794*^9}, {3.794563885511486*^9, 3.7945639685701942`*^9}, 
   3.79456864202136*^9, 3.794569002539386*^9, 3.794576049294142*^9, 
   3.794576685342681*^9, 3.7945781385445642`*^9, 3.7945784286199512`*^9, 
   3.794579361044609*^9, 3.794579490125681*^9, 3.7955138464434853`*^9, 
   3.795513893858335*^9, 3.795514547709597*^9, 3.795515772950898*^9, {
   3.7955161768305893`*^9, 3.795516184452084*^9}},
 CellLabel->
  "Out[1356]=",ExpressionUUID->"8bb54005-20c9-40e2-bd5f-d098a1ecf15f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshotinfscritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sols"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2xinfs"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2xinfs"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2xinfs"}], "]"}], 
      ","}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
   3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
   3.793641549374053*^9}, {3.7936416596344843`*^9, 3.793641664167588*^9}, 
   3.793707464001343*^9, {3.794563822721657*^9, 3.7945638288261623`*^9}},
 CellLabel->
  "In[1357]:=",ExpressionUUID->"26c3de44-d3c3-4bf3-94ce-92bf09f2b87f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxF1nlUTX3UB/DbIEmaRCpRKdKkJ83D3buR6g5JiaS5NJBUFPI0UBINKiRJ
RAhpQpSKUqFUktJwu/ciejQhDRTv713rfTn/nPVZ3+/Z56x91jrrKHjtcfDl
pVAom3kolP892/p+aq8dukul/N/BbyETMiCdCf/v9Rezcsqkr/yxXUtX6QXp
8j929pl6lC5d/8f9645ZJEu//uO8JcyEJOn3fxwrWLbmuPTEH2/ddunO+Bd+
/H8v/B3rumGF6B8rbxr9VHdC8o8jXhpC1oT0H0uVi7N4eFb+8T2uRXOrieIf
v9kY+yV5w19PFlUvpTn8tf4hQ8+mnX9dsXjdZG36Xz+wlJEv/fTXVQXjYZmZ
q/64T1jznMPFv54NDaoWK/xrUxgUTK756+qu3gvx//11jWBj435U+mN2MP+I
jh1xjPRamuI8oHSaSXxzIm5ynd3rqwXyxtH6JR7EbK+45epUwEtVrnuCiK/v
e3DtlxV4zP8Rq7GfuHl1R+coDWJ261/7HEPMUFroNbEJag1Lv+w8Q5y4J5DC
sw2eBF6Q3TZM7LtY9KZjEJQNBQW5TRLXeefqqeyGK/5Gld4UZaR4PH/aybMH
4v26XIIllTGmNMpGwmcv7P9wtTBsBcmzXLbnuoSCn0/4j0gV4rq0pnOOYeD8
ztz2X23i00ruMg7hsNFLPPuICXGw7Iju5n1gyBkYSrQmPimIvFv3g6pHkWGK
PZnfLu6T9Ww/yA5EHc9wIblAfvKzBREg7Gb3NsuHeGCyMY4eAXN90mtzg0m/
s7vqXGYEjG7/FJkfSfKfMmMfWBHQui1+WdFJ4oBm6smoSKjt3uxfdob0fa0M
LrdGQrGzYkVFHrHD5+O+ygcg3anGua6c9L8v33qs+wBs2TRzpruP5Fbassdd
DkHfxt1L+DRWk32GTo9U/Qstjca+gvqrMab3lvS0VjRUWwvdXWRG8nnKW88U
RMNFy2uOy5xWI5oISOnaxYAXcjI0DhN3UXlbLGLhk76TxNYW0k8Y501wOgLf
V5uK3t69BikWC1QKx48BlWvemBS5BmO2WKuoWCdCwoWN0f5H1mDtDaXLLjmJ
sFTScWzVOZJ3GuX32x4HPZ6g1ux6klOa3vkUJ0Fkb1ZqoqwKot/3YO6FZJhN
nRD1eaaCte0VD2v50sHS7kej2WviCsnxzUbpcFKAErNyQAU9jnIzaHvTQe7w
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
4v8B0w1jxA==
          "]]}, Annotation[#, "Charting`Private`Tag$79873#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF0wk0lVsbB/CTFMnMjaMk8xxJR6Seh2Q4Y6ZEEkIiDVRUiAzJkIaTpGhQ
VDJk6tySpBO5ESVRnfdVko+U6iYNV/neb63vstfaa6/f+u9nrz2srRm4zS1Y
jEajNVD9fyMzePBxw1DNCtr/m/hKte29dD7868Vnc89U0S9OmtXWXZlPr560
V9C328fowkkTZgdXZtGfTvrcH7zUdHr/pBMlq/QP0Ucnvdb7fPmnz+L4r2dP
JPo6zZebtK7ryOC9DOVJRz+yhtxR+qRVqhXIadM0Jl3bt7K13VZr0s+cEz9n
OU15rKx+Dtttylb7rAMebJqyQMlsrOHYlP90UFtQOTjluqJPUXy+9qRF0gtP
uZ2d8nhkeL381SkvhwHJrDtTru9+mZ/ybsp3JJubd6POpF9tFf9gyaLc8ECX
rTUDaF12il88KUvaLooMNocFy/ZbXfenvHrB1rkmKwDP1/luC6csqFxY/HsV
+Ev8TDTdTRnBoWuEDQkRVsXDCZT5fgUBo67QYF35eVMO5dbnFRM0b2gMy5/r
/Z5yQPTsEo9wqBoKD/cbo+xkXsQwiICLoTa3NtJ0kbYuvKpr2jZICen22aqs
iwnl/iaKQTtg99tLV6PmU/nLfLkCn0gICdr5M8aAyk9cPXHKIwq83tgz4y0o
r37pr+a2E5wDFfKSbCnHJisx3HeB9eveoTRHyhk/eWJrd4ORf5n14dXUepl5
Xrktu2Fub+yh4z5Ufoid3DIrGqT9WM9zg6hc0PjXAU40/BLRDQu2UrnlwL1T
/GgYWTcYUxhDeTP961syGtq9U1TLMim7pztlxsZAQ497aFUOVW9q632hPQYq
vLQEgnNUfsXoYrDuHjjmecfrXjVlv11RB3v2wBrXHzk9IsouM2Yf8tkHIueI
P6ab6iEthG8wUhcPbc3LgiWt9DDha4vhd/P9UO8oVSNjR+W+rBU5RfvhrEOx
h6qnHja8HpZewkqAQHx93DSOcpJRd+vKRBi08lRc20bVv6OPpngmwVe95XKl
EfqIJZbaVz8dhBV99s3pMZRt8zQNHNMgNd95f2iSPiYkh57yOZMGc5Q9Pmqf
0qfWLyskmIeAMS28PU9IOem6KKgiHWJe5manzTXABMaL0L78LBjPHpULajHA
BX2W/cqpR0HsR4n8XF0jfFWYdzbJ9iQwJvxr3ctMkBbUZd9x4zy0Jls+ajIy
w9X+a2Mx5TJoHBn+cWXEHC8XVwn1XStg+Fsv2WVugasVM1Rk1lTDxXe3/pI9
vBg/bU/wbeoQgKx68cf+fktc2tt4+wnjNmRurgk5p8PA/ss9Udz8BhjDkv7Q
/VYYNL/UY2ZtI+y0EFbPubcU3ytLDnkeF0JvmTDjsaYNztM7KBER1wT/hD09
bbh3GUq3aJw46PAAjO0kfofcskXBB9Wx0p4WcLqguem6ygr0ze1a2xX7EKLV
N2i99gU8hxGZF763gsl7z9ndHESTFN3kwuBHoCT3SVL4E/FBtI7QfqQdxO+c
Ltc+Y4fbzf8z60tZB4Rb3no+i2WPgi+3fXT3PIYSl8Bz9WP26C+TEVrh8AS+
DqvJD+SsxJvCTEGsZCfUuDtN5zs4oOzAehXP/k7Y75xytnrAAa8N16aTgqeg
STB7ClNWYWPpPXpGdhfYWCXz6RaOKPYp1PBz3DPwnd/+Y1qnI/qsOXH+m183
fP0rq297ohMKZxKy3a49kCvut9NNxxkDt9l6s82egxJZc0FM6Ix69eGr5Cee
w4y4RA/rHS44lpwgverxC6Bd8SvvU2SipSrz9d6klxCZV56l2MjEv6vn87+b
iuDGeN7BRiETX43PSwgyF8G4X2piZDMTHdQb3z6yEMFB7fW7nrQykfHURv2s
lQjOXJNaf6ybifL8fVamdiK4Xx9soviBiYMsqZEJdxGovpn7UEGVhaObRg7H
x4jgtnGapMJWFjKSapx660TAeKrSdmw7C+Xftk5rqhdBRWzxUeUoFtJ+x20q
aRDBhbYmNdUYFs5TMWJECkWQtm2GqcYBFopbKvV/fCgCt6oDrqY5LLQw31pc
8kIE/7GJy3OpZ6GtqfpivW8iUGBGmhyQZWPaUaklS0wIOHdXbraNAhvT7/rE
vTMlwNy6dOizEhs96PedC8wI4BoMFgXQ2Tj+uzRs2mIC0mf6adrpsPFvA5vB
GmsCxO+5zKHZsFHVude6x5GAsWWatPhgNibQRC9m+BOQUlVPLgllY+OGHQcy
AwhQNva9/SGMjVcVFeoVNhKwWO3k3vXb2WikVflFJYSA7d+lv9ruYyOfvShU
aQsBQ9Xfh/45wqb+w5XxpmgCRKYdnXvq2DjzjESI7mECzg4rxE2/w8ayx+pt
odkEBF5x18u6y0b/+YWSJUeoep3umHNNbFR7x54wPk7tby6p3tzBxopmn380
cglQkHq/SfktG/0SWRUd5wlwHJAYL5Ph4OoUrrp3NQGzLrpcWirPwVjHTIuY
GgJaAzK4jYocfMGXNMupJcCdkD3fpcJBo2yrV48EBPg//cNxXJOaP9piufg2
AfsatY+4MDho65G76MF9AioKQKffj4NPvf/s1H9GwJe9XyQCAjh4cfFrmQXd
BDC8ioeJjRyMDM/kqPQQcEtOrqo7lINib0S9Yi8IaEog7R5GcrAoalfAI4KA
l4FxGypTObgzNtnf6i0BM/Vv5SWUcXD+hVnHPb8Q4DJ9W/yvCg4OSLRdMxsl
ILNXK3BvFQdFazp6Jb9S589NN9wp4GB8Kp0vGCNg3iwfwaZGDj6SYDrJ/CTA
Yvh7F/cZB9MLO4MyaSSsL2coqP/mYG7Q5ddvpUmo9fku20Hj4t+OrfHVMiTI
zrwpnTSdi9wjo9oHZElo8F0uOSTJRfbEwUNq8iRoSTlMVCtxsV9hUQ/1OWEg
yPUD25CLW9SOWq2nk7BVbUtLrAcXk21+HRvUIaHpvmmzmRcXX5nr3D6lS4LG
jo/CPm8uLpz7UJKpR0JHc2SD8wYu9vTelbisT4LFrj03lMO4+CQn8qa3EQnf
2lMvXdvPxVr7eRf4ZiQkpJxPFF3lol7brXcR1iTIREswA0q5ONLsceMn5bzQ
CMWBci5+D2noTrUhoYplXfixmouVR7Pm5C+j9qvwWCh2h4tCLbH8u8tJYBXQ
JA07uXiNXLdm2I6EOTc2HN71DxfrpPtq77uQUHj5/pqfv7gY9lHDeAWTBPM8
Y439NB76k7Ezaym7xH0rT5vBQ+Wml6OFLBJiV2Y/Pi3HQ0t94zsxHBL62uuV
G7V5aEJzypzpSkLpoPppWTYPD/d0qt/wIiEtP8Wf5PJwaehYlOFaEoLcPuiW
ufLQY7ee1mnK8+rqKjhePNSbd+9QrDcJ6dnrmjIDedj3ee9pq3UkhDJOfZba
w0ObN067sv2o90lWdpYo4uH2OYkuD4NI+L00Vqb7Mg9/ZyaqGAWT8PzDmydF
JTxMq9LwTKN8xKtqveN1HrrVq2itDCFhwsgtKqWOh44ZhiqVm0gQPc4umN7J
w3Ris9zuMBIEqd82dnbx8Oa6vaatlPnLNhgW9vBwYKVYk2Y4dZ+XFlbbk5RV
9DY/pHwzpq0lcYiHsYz4dNUIEnJMl2S7vudh/Bap7DDKO/rOeGh+pOaf3KxU
R9mAvaW3YZSHZ/jcgvVbSRCf9vTikW88FDobF5VSflWzLMz/Jw+lBGnmvyjX
hRWamf/i4TN3xRXsbSSc1Jj9dWKCh7lZUe15lP8LTeUalQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79873#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
DRf8jzt597Lhmhj/p6Ul4nn5daIb+tjwXyPuMS4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$79873#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$79873#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.7936416699497128`*^9, 
   3.793707485144012*^9, 3.793717672169283*^9, 3.793718174752056*^9, 
   3.7937182680018597`*^9, {3.793718430471394*^9, 3.793718444976821*^9}, 
   3.7937195403741617`*^9, 3.793801393609724*^9, 3.793801474194271*^9, 
   3.793801569935988*^9, 3.793801637647945*^9, 3.7938017410853558`*^9, 
   3.7945070244257717`*^9, 3.79450749572329*^9, 3.794507540675671*^9, 
   3.794507662632415*^9, 3.794513109923526*^9, 3.794513178687973*^9, 
   3.794515031986408*^9, 3.794515316140401*^9, 3.794563835964757*^9, 
   3.79456397550954*^9, 3.794568642380332*^9, 3.7945690029043293`*^9, 
   3.794576049770125*^9, 3.794576685780991*^9, 3.7945781390743513`*^9, 
   3.794578428929961*^9, 3.794579361332246*^9, 3.794579490422999*^9, 
   3.795513846633497*^9, 3.795513894011443*^9, 3.795514547951236*^9, 
   3.7955157730986757`*^9, {3.7955161770405607`*^9, 3.795516184589789*^9}},
 CellLabel->
  "Out[1357]=",ExpressionUUID->"9aa1eac6-ec6b-42c3-b16b-b56971f8a3f6"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Plot incidence w/out seasonality for fixed-duration interventions and \
critical care:\
\>", "Subtitle",
 CellChangeTimes->{{3.793442141741558*^9, 3.793442155627501*^9}, {
  3.793640279194034*^9, 3.793640281743907*^9}, {3.793642464810849*^9, 
  3.793642465266344*^9}},ExpressionUUID->"734efbb9-fc72-4a34-a684-\
07747c56999e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"line1char", " ", "=", " ", 
   RowBox[{"{", "Black", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line2char", " ", "=", " ", 
   RowBox[{"{", "Red", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line3char", " ", "=", " ", 
   RowBox[{"{", "Blue", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"line4char", " ", "=", " ", 
    RowBox[{"{", "Green", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line5char", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Black", ",", " ", "Dashed"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line6char", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Red", ",", " ", "Dashed"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"line7char", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"line8char", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"Green", ",", " ", "Dashed"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prmax", " ", "=", " ", "850"}], ";"}]}], "Input",
 CellChangeTimes->{{3.79339982821106*^9, 3.79339986270236*^9}, {
  3.7933999978938227`*^9, 3.793400003045478*^9}, {3.7934849909146833`*^9, 
  3.7934849978857813`*^9}, {3.79348503674374*^9, 3.793485052714149*^9}, {
  3.7934855796938047`*^9, 3.793485580159594*^9}, {3.7936402999196587`*^9, 
  3.7936403176036463`*^9}, {3.793718714083852*^9, 3.793718741365986*^9}, {
  3.7945076539946623`*^9, 3.7945076542109547`*^9}, {3.794575999550634*^9, 
  3.7945760001252604`*^9}, {3.794576670674024*^9, 3.7945766708056517`*^9}},
 CellLabel->
  "In[1358]:=",ExpressionUUID->"2ecd6b9a-1caf-4a54-a09d-e5e286f38b72"],

Cell[CellGroupData[{

Cell["Four weeks:", "Subsection",
 CellChangeTimes->{{3.793442276145667*^9, 
  3.793442278863884*^9}},ExpressionUUID->"f2bae07f-31d2-483e-84ed-\
cbf1528a3f31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "40"}], ";"}]], "Input",
 CellChangeTimes->{{3.7936403438253593`*^9, 3.7936403471896343`*^9}, {
  3.793640381348299*^9, 3.7936403977456293`*^9}},
 CellLabel->
  "In[1367]:=",ExpressionUUID->"7d276d10-358b-4bff-9570-ae55a9a4187f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot4nscrittemp", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2x4ns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2x4ns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2x4ns"}], "]"}]}], 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2x4ns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2x4ns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2x4ns"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793718787103321*^9, 3.7937188275339737`*^9}, 
   3.794507379720983*^9},
 CellLabel->
  "In[1368]:=",ExpressionUUID->"d9271d4f-9bc2-4cc7-9e2e-549f7ff66ba9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$79984#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
iA==
       "]]},
     Annotation[#, "Charting`Private`Tag$79984#2"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
v8X/AfNrpY4=
       "]]},
     Annotation[#, "Charting`Private`Tag$79984#3"]& ], 
    TagBox[
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
7H8AUoUuPw==
       "]]},
     Annotation[#, "Charting`Private`Tag$79984#4"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
/y/8HwVWn4k=
       "]]},
     Annotation[#, "Charting`Private`Tag$79984#5"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$79984#6"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
B8ebds3v5P/+x/0/5nLR5w==
       "]]},
     Annotation[#, "Charting`Private`Tag$79984#7"]& ], 
    TagBox[
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxFl3c81t8b/42KkJUUSQghe6+cl3Hft3XfNzKKQrIqlJmkrDtEooyKRCgh
pbJakqwGkYyKtGgiJQ2V3/17PH6/z/f9z/vxfJxzrnGu65zrXLI+u5z8uDg4
OKK4OTj+79/W731v84c6M47/9y2wlNw9KpFD/j/rFJ04dVWi7D+26xq8UihR
+x+7+f64dUyi9T8e0UixzJB48h8XL2Mmp0m8/Y8TeK+uPSQx8x9v3HTm0pfp
Bfj/zD+fsJkmLfQfKzhOvr+bLvYf7+k2IidmJP7j5bUiLzg5V//H9a8tHz4y
lfuPB6wTpjNo/+PZi03i9k7/Y4N9Rls7A/7HjUs1ZpuP/Y+vWUnKXHn/P755
7kt4Ts6a/3hYQP2kU9H/+E/Yzibhyv/xejLOm3H7f9w0+Lzw4Mf/8W3ejo4o
yP/HL0MWTOjaycPteXyaUJOUGUe/ueg3F3kk5e/eWejZaSZjEmdw2Vse49LG
vSkec2Y4c3Pzrp3y+PWjbUjUXYp48/xOUIuSx3ytc9RNCV0SH2xQ/ileHnwi
Xzf2/6aS4r6IhxXp8nj8bn56bYMraTa6Mh2QJ49tlQ+2ZOj6kpdFU+KKZ+Qh
cSZUmbNiN+FYpGb6tkoe5Twy/2re7SUyQTu2ltTLQ9XPnVqpm0TMH5cne9+R
x4r9O3j0d6QTH8OxKumH8jjPebP1+rdjJPG0XO/wgDwCHm8xlUs8SUoWeM/m
v5JHVVrk7db2YtKyo3Dlps/ySNX4uNC/5Cy5+mHnTs9ZeWy6tWUmm6OKlAUa
39jGoYCAd/bUruIakvOOl387nwKEBjamvjatJQf9B91DxBTAF+7KX+PZSKLG
zlaGSyvAbbT6fKjwLeLvG/E7WkkByhp+4Uz1O8TtjYXtAW0F/CyQ3zqk2Eqs
fUTyk0wV4Pj0zUrhPR3E6NXoh1SqAhISnats5R8QFe+LRkccFFCwoMXGUucR
WTkaeyjbXQFxMgLyl5/0EgFPu6cnfBUwMDpz+ATlCfk7LKF8OkQBPLsH1lhN
DpBJj/fRpdEK2FhB2xbV85Q82nRwxcXDCnC3DtidvOYlaR7aEHg1TwGRMcOX
Pk++IjVuco2NxQoovBr5MvLpG3LM5bbb3VoFeKa1TJAl70nSk4zyziYFUC8r
7hZw+0giNmz+0dWpgLfNcpl/mj8TV8dfeUPDCpg/NXfn5e8vhNbTMT4yroCj
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
xnikwxxSO+aySj7SoCv58PGJ++ZIoSek0i/TsPhExE7nLnPE8QpN7YmmoTa7
7dSDx+ZY+bNYncZLA396wPy1EXPU+hnsr1WjonFvVWveN3OQtKU8P45Y4ciP
DVucZs3ZdfxQ3dotVtgW+ef7kl/mWOXAlL23zoq9f/S1B/+ZI/y7aIP7fUv4
BU4dCl9sga+G8SnFApYQddNhOqy2QFFLxvmZMnPs1L3xdLGdBVI83H/pmJmh
uaf/QiPdAs851su9n1mPZcFf4gIcLFBfbTpneWE9bp9VUGxzsQCzKebUhNR6
LF2eFRbvbYGLnp51bxea4sYvX/4fkRaQvaYkYMl+Fwnnxb04G22Bih9jm4bq
jOCnnX/ZeZ8FehdO93Gw34FCOx+5XYm3wApxDtVFc4bYNmxUFpxugcb496PN
iw3Bf1tw/dtiCzTXb1X6AX14eygLZ5daIJ9bqF2LTx91PyzfmJ+zwCBF+t/n
Pj14ae49VFRlgblLA3deBurh6pk3/e71FnAdKQ0sPqELD1ZjSO8DCyTfOhd8
UlAHVTY+xU2zFlCmGwUl0DWhqyprRn5Z4DXHoHr2Wk00Cb58fnuOvT9OOx79
4tRET9+W5Xc4LHFEsP7rwV0amNmy6chdPkusiEjT8mWowyzMIbZT2hJzB7ie
PVVWRYezkKSNrCX+vdZT//luHRwMuhvurbEEJ21avercOvj8sft2X8kSNa71
fvcV1iElmbajS9sSE4ciZx+oqKAn32zjY6olEslFwx6GEjbt//vdycYSuznu
F1QuU8Jrr5vZfXaW4I7ZKMAzshYz8saPnjiw5Q/8OGUevBYSl/Sog+6W2PQn
i3I6WxE+d1V1h0Ms0bj7aYXwD3l8/yQpPJ5niXInRvqYiBxyCt91nDrJzpPn
aTIhb2Shw6yN23DKEndcX/zcUSeL0Cv0qeYzlqBn5k3fdJfFRHR8d8EFSyhH
RZSUVMpgbOH4YccWNvf80lG+JQ1WwxUr3jZLbC5gebYFS2PN9rg/TR2WeBZ/
/bPSamlsfbgiSLXLEjc2eWSCtQojx+zseIYsYXc48t1+Nyn0r768+NaEJToP
HxvIlpFERO/+O+FfLFFI/yT2ZFgCS5Ns96p8s8TACevJ2ycl4Dj+5v3xn5aI
GVt2JHuZBLouiHeGcVtBSD+J84/YCrQZxSYrSVhh0F6vK0lLHHUbaNw5VlZY
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
mwqVitoS82b/B/XjGrQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$79984#8"]& ]}, {}},
  AspectRatio->0.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Prevalence per 10K\"", TraditionalForm], 
     FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{Automatic, {{0, 
       FormBox["\"0\"", TraditionalForm]}, {200, 
       FormBox["\"5\"", TraditionalForm]}, {400, 
       FormBox["\"10\"", TraditionalForm]}, {600, 
       FormBox["\"15\"", TraditionalForm]}, {800, 
       FormBox["\"20\"", TraditionalForm]}, {1000, 
       FormBox["\"25\"", TraditionalForm]}}}, {{{0, 
       FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox["\"Apr\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox["\"July\"", TraditionalForm]}, {39, 
       FormBox["\"Oct\"", TraditionalForm]}, {52, 
       FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{35.6, {
       RGBColor[1, 0.5, 0], 
       Thickness[Large], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 63.99999869387755}, {0, 850}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793718797940257*^9, 3.793718828353017*^9}, 
   3.793718878536643*^9, 3.793718959345468*^9, 3.793719540787973*^9, 
   3.793801394078714*^9, 3.793801474576067*^9, 3.7938015704289*^9, 
   3.793801638025175*^9, 3.7938017415446577`*^9, 3.794507025107746*^9, {
   3.794507375422269*^9, 3.794507380239881*^9}, 3.794507496107242*^9, 
   3.794507541066358*^9, 3.79450766310214*^9, 3.794513110322774*^9, 
   3.794513179086645*^9, 3.794515032475675*^9, 3.794515316579517*^9, 
   3.794564058640731*^9, 3.794568642820634*^9, 3.794569005271792*^9, 
   3.794576050362199*^9, 3.79457668637365*^9, 3.7945781396265087`*^9, 
   3.7945784293092537`*^9, 3.794579361749745*^9, 3.794579490815504*^9, 
   3.795513846903358*^9, 3.7955138943536873`*^9, 3.795514548251952*^9, 
   3.795515773416112*^9, {3.7955161772907257`*^9, 3.795516184847803*^9}},
 CellLabel->
  "Out[1368]=",ExpressionUUID->"6ca55252-1cfa-4d56-a0d4-29c29cecb1db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot4nscrit", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2x4ns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2x4ns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2x4ns"}], "]"}]}], 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2x4ns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2x4ns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2x4ns"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2", "+", "4"}], ",", "2000"}], "}"}]}],
         "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7936404543772306`*^9, 3.793640470827922*^9}, {
   3.793640511433079*^9, 3.7936405164159317`*^9}, {3.7936405863378353`*^9, 
   3.793640588977378*^9}, {3.793640901850996*^9, 3.7936409110413313`*^9}, 
   3.793641022966834*^9, {3.793641344008607*^9, 3.7936413515934067`*^9}, {
   3.793642469646597*^9, 3.793642490096284*^9}, {3.793707616488316*^9, 
   3.793707617304297*^9}, {3.793718726457984*^9, 3.793718726948018*^9}, 
   3.7937188032738047`*^9, {3.7937188403160963`*^9, 3.793718857504669*^9}, {
   3.793718889953663*^9, 3.793718900240761*^9}, {3.794507384296419*^9, 
   3.794507388282158*^9}},
 CellLabel->
  "In[1369]:=",ExpressionUUID->"3139220f-e672-4010-9304-575f6f384d3f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$80073#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
iA==
          "]]}, Annotation[#, "Charting`Private`Tag$80073#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
v8X/AfNrpY4=
          "]]}, Annotation[#, "Charting`Private`Tag$80073#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
7H8AUoUuPw==
          "]]}, Annotation[#, "Charting`Private`Tag$80073#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
/y/8HwVWn4k=
          "]]}, Annotation[#, "Charting`Private`Tag$80073#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80073#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
B8ebds3v5P/+x/0/5nLR5w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80073#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3c81t8b/42KkJUUSQghe6+cl3Hft3XfNzKKQrIqlJmkrDtEooyKRCgh
pbJakqwGkYyKtGgiJQ2V3/17PH6/z/f9z/vxfJxzrnGu65zrXLI+u5z8uDg4
OKK4OTj+79/W731v84c6M47/9y2wlNw9KpFD/j/rFJ04dVWi7D+26xq8UihR
+x+7+f64dUyi9T8e0UixzJB48h8XL2Mmp0m8/Y8TeK+uPSQx8x9v3HTm0pfp
Bfj/zD+fsJkmLfQfKzhOvr+bLvYf7+k2IidmJP7j5bUiLzg5V//H9a8tHz4y
lfuPB6wTpjNo/+PZi03i9k7/Y4N9Rls7A/7HjUs1ZpuP/Y+vWUnKXHn/P755
7kt4Ts6a/3hYQP2kU9H/+E/Yzibhyv/xejLOm3H7f9w0+Lzw4Mf/8W3ejo4o
yP/HL0MWTOjaycPteXyaUJOUGUe/ueg3F3kk5e/eWejZaSZjEmdw2Vse49LG
vSkec2Y4c3Pzrp3y+PWjbUjUXYp48/xOUIuSx3ytc9RNCV0SH2xQ/ileHnwi
Xzf2/6aS4r6IhxXp8nj8bn56bYMraTa6Mh2QJ49tlQ+2ZOj6kpdFU+KKZ+Qh
cSZUmbNiN+FYpGb6tkoe5Twy/2re7SUyQTu2ltTLQ9XPnVqpm0TMH5cne9+R
x4r9O3j0d6QTH8OxKumH8jjPebP1+rdjJPG0XO/wgDwCHm8xlUs8SUoWeM/m
v5JHVVrk7db2YtKyo3Dlps/ySNX4uNC/5Cy5+mHnTs9ZeWy6tWUmm6OKlAUa
39jGoYCAd/bUruIakvOOl387nwKEBjamvjatJQf9B91DxBTAF+7KX+PZSKLG
zlaGSyvAbbT6fKjwLeLvG/E7WkkByhp+4Uz1O8TtjYXtAW0F/CyQ3zqk2Eqs
fUTyk0wV4Pj0zUrhPR3E6NXoh1SqAhISnats5R8QFe+LRkccFFCwoMXGUucR
WTkaeyjbXQFxMgLyl5/0EgFPu6cnfBUwMDpz+ATlCfk7LKF8OkQBPLsH1lhN
DpBJj/fRpdEK2FhB2xbV85Q82nRwxcXDCnC3DtidvOYlaR7aEHg1TwGRMcOX
Pk++IjVuco2NxQoovBr5MvLpG3LM5bbb3VoFeKa1TJAl70nSk4zyziYFUC8r
7hZw+0giNmz+0dWpgLfNcpl/mj8TV8dfeUPDCpg/NXfn5e8vhNbTMT4yroCj
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
xnikwxxSO+aySj7SoCv58PGJ++ZIoSek0i/TsPhExE7nLnPE8QpN7YmmoTa7
7dSDx+ZY+bNYncZLA396wPy1EXPU+hnsr1WjonFvVWveN3OQtKU8P45Y4ciP
DVucZs3ZdfxQ3dotVtgW+ef7kl/mWOXAlL23zoq9f/S1B/+ZI/y7aIP7fUv4
BU4dCl9sga+G8SnFApYQddNhOqy2QFFLxvmZMnPs1L3xdLGdBVI83H/pmJmh
uaf/QiPdAs851su9n1mPZcFf4gIcLFBfbTpneWE9bp9VUGxzsQCzKebUhNR6
LF2eFRbvbYGLnp51bxea4sYvX/4fkRaQvaYkYMl+Fwnnxb04G22Bih9jm4bq
jOCnnX/ZeZ8FehdO93Gw34FCOx+5XYm3wApxDtVFc4bYNmxUFpxugcb496PN
iw3Bf1tw/dtiCzTXb1X6AX14eygLZ5daIJ9bqF2LTx91PyzfmJ+zwCBF+t/n
Pj14ae49VFRlgblLA3deBurh6pk3/e71FnAdKQ0sPqELD1ZjSO8DCyTfOhd8
UlAHVTY+xU2zFlCmGwUl0DWhqyprRn5Z4DXHoHr2Wk00Cb58fnuOvT9OOx79
4tRET9+W5Xc4LHFEsP7rwV0amNmy6chdPkusiEjT8mWowyzMIbZT2hJzB7ie
PVVWRYezkKSNrCX+vdZT//luHRwMuhvurbEEJ21avercOvj8sft2X8kSNa71
fvcV1iElmbajS9sSE4ciZx+oqKAn32zjY6olEslFwx6GEjbt//vdycYSuznu
F1QuU8Jrr5vZfXaW4I7ZKMAzshYz8saPnjiw5Q/8OGUevBYSl/Sog+6W2PQn
i3I6WxE+d1V1h0Ms0bj7aYXwD3l8/yQpPJ5niXInRvqYiBxyCt91nDrJzpPn
aTIhb2Shw6yN23DKEndcX/zcUSeL0Cv0qeYzlqBn5k3fdJfFRHR8d8EFSyhH
RZSUVMpgbOH4YccWNvf80lG+JQ1WwxUr3jZLbC5gebYFS2PN9rg/TR2WeBZ/
/bPSamlsfbgiSLXLEjc2eWSCtQojx+zseIYsYXc48t1+Nyn0r768+NaEJToP
HxvIlpFERO/+O+FfLFFI/yT2ZFgCS5Ns96p8s8TACevJ2ycl4Dj+5v3xn5aI
GVt2JHuZBLouiHeGcVtBSD+J84/YCrQZxSYrSVhh0F6vK0lLHHUbaNw5VlZY
hrS3soOiSLVrPChFs8L0ks5m9QpRbLZU5j1rYwXODPeTFftEwaXDv6SeYQWt
/ryVY7KiYIg+Eh/aaAV+3lXbXcNF8L7HVUUq2Aob+UeSTZWFcaOz40LZLitc
XlPiWsMpjCPNhhpqYVYoOq4ksahOCLo1krpme6xQWRwynSQphITMF+u9E6xg
k//rjfTkEkgy/B3Lcq3Q5ubSu7OeHxOUwT7VE1Zor2QF7w7jR/N6a9e6fCvM
W923lNDgh7+aikd7kRWWF/89zKzkw1WBSd/3FVZwse/Yseb8Ytg/iIxWbbJC
GNXcxryZB3HWB4tqx63gwWfUtmrTAjz2DNys+cEKfxKSJSbWLoB8pJ3EhU9W
sDO+uk3rBzfunxHJLv1ihby7Qp/EjnNDbK4w+dhvK5Tk5xPVYS6cr64P3i1I
gbSPXPftGE78vntS5bMwBfnLrNICHThBfxb7LmApBWV+zxKiFDnxdZHlVq8V
FJRq39dt6uOAqfcjZ4YcBaOFnakvtTnQI/reRFWfggOxDufdFv4jcsoPfpYb
UsD0ubU68uZfEkku1q0xoeAbR+kh84i/RDIoQmMlKNjJfe3ny7E/xLeNYw2f
LQV5zrpFgr1z5OceCb73WygYoSle7Wj7RWRHbIdKD1Kg3+NuPb9qlqS1mFxy
SaXArKifP+HNd/K1XDWZJ52C7aN5tqcqvpOWMEHdnVkUPBQv9zlp8J348j7O
1C6gQGvVcsmD7jPkvM4m2p0aCtb4zR15fv0rEZawlQ6/SsGL37UPKYe+kr3/
jL/L11Ngd/S0kvbGr8T2nlRp6g0KlsvKiaT9mCafPF/+Y7ZTEKn1o4/XdJqo
pwXUv3hOAafBvYXn6qdI3q6NGVkvKNh7I+vzfp8pMu9s42vxioIAFfNMHaEp
0rN6nei5cQrSf3qd1tg5SULrJoODpym4er7qr4baBKl9GanwZxEVdV/UjsYM
fiTGBqwcCW0q3M8JXYqtHycDPhL6hbpUSE98/Sh0YJyEH7k4KGNARdYRI0N1
6ji5MDYkqWRKhUmRzzqeoTEinaN2Rp9KxaQ8wnm5xgjX9ED1BncqlmjwJRqG
vCGnpYKYg5upiNiwR+LT+jfExJpz2t2LCuFOQedlgm9IRNE6XR9fKnK91Acf
XHpNxunx13eHUKEaaS9W9PMVeVCp3JGRSMV+m/Int06/JIEDTYEiB6nQ6NSz
3hT5kizgcubLTaFi07+nNe72L4nZpgP0U4epeHOSOrX8xyip4enrq8yjYov2
1ITMrRckxzf2ZUclFRaamnqtQcNkszT7Wu+jYvfooieOjCEiKBFWd6OfCv9Y
sxXFAkPkztJloZFDVHxay3+k8MEgUVzs8f79CBVflu57VmQ3SKa+jQ88es+2
V3pTet6GAZJ479/Vwn9U2E+pfv2S8ITotp7Z5cZJQ2NLuHG07RPyrslqncgC
GsKtq9/mLn1C7GvTSliLaZB8IrTuSHkfWVYkfnSnGA2h9/XFaAOPyfkI9RAj
FRrmvGYc4+i9xH1Xr/I3VRpOMw9svirdS5bsiBi7oEHDjaa9BX5fekiY1/XN
Mno0VCXo00luDzGxpdrxgAb3zhYjy3uPSPdqT6V+FxpkBnOrxrS6yPf7Ga93
J9Bwq7jgxJKiTjLM3x/4J4mGl1bL/p317iQt9lJT7JqE0/Lk0TO5TpLVXTl3
Op0Gs9um9aIVHUTlcYdYVy4NZXFCJWk324nnU06aciUNxxkub8P+tRIrSZuu
2gs0WE1NEsV7rWSdR9YGXKLh7rbbIVtzWsnPYWlvt1oaltgEjm5XbSXHXprs
PdhEw9uUY2aFPndJ+7vIqlePaVj6VSDRa/wOuaB0Syu4n4bp0Zt8k413SPb2
BY0/B9n6vx3LnEq/Q7w/HWsVGqHhCveVKjudO+T35KWR9e9o+GNx97R1SjPR
mP0glD9HA3PZKv6q5CZyYoFnhJO8NbLHhscX8Fwn/7Yt1+tVtEbI7x9eq9qv
Ed+7Pd+ZytYI1DRa//TgNaKZaLmHrm6NRDlBHmOea6RzXinG2tAarAPqLeIi
jeTH729xZvbWoB700zuBerLZvRq3GNa4bGpWI7i4nrRc8+c0dbRGQ1XoVb7H
deRI9NNEI1drDNS8d8r2qyOKs00Hdb2tEeC2fHb8WC1xnT6UrhJhDTUv498N
C6+Smw6W9hVR1vj3t3tIY+AKkav5I6C01xqlfb9mpMuvkMmQXUcUDrDXrxEd
97G9Qg5+dj4qk2qNUamJg4F5l0ntu9XHxU9ZY1y1JfWkRQ1Z+qKuhKvVGszu
xOWtD6rIEYH9+xvaraEkFpmvFF9F+EysNgbds8aV0HwpoldFuE48XjLQbQ31
iAPSiWcqyVfHqeiKp9Zoyata4Z1YQXralJgOU9ZIdcof3+dXTuxnppQXfrWG
2LKmzRwK5aRTrmHB9RlrBE+JPdYfO0dux1Gur/ltjdOfPK5fCzhHLhr5KPxY
YINETmbC8siz5HB1wVyhpA0ult57r325lPAO+ww4rbLB4jfSToP7SgmLT+Uy
j4wNNI3Lr6vRSsm+gEb/UAUbfGj7e+3GaAnZIdvfa6Vpg+/DfOSAeAmxzhU8
/4lig6xlZQzt/GLSerc/sdjaBgUKK41uBRUTfD21xcXOBqMHL4U3kWJiwFy3
9LaDDcxCvK/QuovY59/6wDEPG3g3yj2YiTpNFu5PcDYKZcvbepaneqaA1E5/
/nU73AbJWbYmJ6sLiK//xiJqlA229ucf3hBQQFqZGh837LOB2BnTVO2RfMKS
G4kLOWiDvTj45uTjk2RBp2FV6UkbhLLuTWgMHye1pmUOKqdskLpLMrCj6Djx
vSw0W3PaBmnFvqPj246T1vxxNJXawObJ29ZbE3kkKThnYKjaBr2JOTsf8OQR
rqVfOAVbbJA9V7PW3yWHXEnxKM9ptYEVJS90v2wO8fnTbr+S3beMPololJrM
Ji1jhceVHtrgUduq9d9Ss0lio52a5YANzk5Ky3G0HSOcnuUboz/aQH3zC/eT
rkcJu+e89FrUFnGBMVPZRzNI++fBkKJltuiScDgeSDLIYU1H9c0rbKH8dH5M
YPIwWd5oWd2/yhYqiRN7WumHiXqHUlWnki2uxnKGTImnk81jX89dNLOFv5hA
qW5PKrveB/nvNLdF7rnERu70VPI+aExBycoWj6l9ESXUVBI+M1h2xsYWmZe5
XjOaU0ga962SHGdbnNDIP7LtVjK5JptyOmaHLfS6qzRjX7DIAT8OT4NgW3iY
371KOcciVhV7V83sssXeltqRFyEs0qMZdCo40hajkwqK8Vws8p445nvH2yJA
vi9qg04SEfdcmUfNs4VadP7Q8wsJJCz/UoYouw/cNiw8G/pqP2n4k5/S0moL
n/GPQmnH9pM/nskJYR22mL3WNRhqtZ+krNkS+fihLdpvVYfWVMaSUxf4thwb
ZNtvONj1IX4faWvyUxWdsEXg70dr6c57CZ+so2LLlC0eFOrLeYvuJQ5JpjJh
X21RyXfuvkVvNHlGWyr2+IctvMyLFPY4RpPJnua5o1x26JWd4z7lsYeseLPy
gcgKO5xvrIq3yY0kWyg8bXck7aDWZEn4vCJJSfnXptBVdqD3pnzTU44kqkH3
rvTK2WGjjNj67qYIYv49Kv+omh2ObF3vzDUVTnbwPN4uwu6DH+9+fCx6Wxi5
tS6VVyTEDgOsJSXGRruI/pPlXcd224HTKfLIl88hpCa2/KhYuB3ebegt9j4T
Qkq62iVXRNth76yfwS6BEJK6a6Ha6kQ7HKvjVKV+CiJOVxMd1fLs0CjFrfP8
wQ7yznh/vk2THe7PxN/atjCAeL8R8HrQbIflOiFjpQ/9ybP0U2vod9nzI+qu
2eT4k4fDNy44dNphG5dTQLu8P7ly4HeT22M7JFDvDiTZ+pHYlj1v/MbtcDUs
eZFQxTYiYhummihoDyP3zAr/K96k+I4Qv7GIPXYXZh2rTPQmmkbVH6aX2qPZ
03Wh/wZvwlB6f26rhD04Gj2FUz57kbRFnrLm8vYwtFvnHJzgSRbctRHnMLZH
9ZnXA0ceeJBs43czDab2GBmta/u8x4PIXWH17SL2mN064vxP3oPgzO2sUSt7
HOxbboAEd7I/To//NtMeKYPNxN1iE5k1keU44GcPRrP4ojvvXMnBq00v9ALt
kaaucKyryJWIrdt8a2KHPWwCLGwLN7oSHcnjMVt22+PN0+OyaQ9dyO6fAt9N
99kjW0PvTO0tZ/Kh9ueHuSx7aP0KSlVsdyLRqnmdV7PtYcfpFfwszYnwlumU
78yzR6i7JN9WByeimB3i+7zAHl/PPKd/HHEkPqFvX1w/Z4/6L4I6vNyOZFit
p2/vTfZ+9Q1q5n1mkKJPIvu5b9vDtuHHZ/YjgPhUbFDMuGOPSxNtPyMtGeSD
/GB0cbs9vhQWOx0sppPZlS9WdfTYo1im3sUv2J6I8H0OEBuzhwothv7CyZZQ
x3n+XFxCh8wwS6kJVLK4zOasoTAdX6e7Nb7/pZCHW9MZLaJ0pBm82ipzg0I2
jAie6V9OxyoDh8wgPQrxfrKM+keWDjf770syVKzIvpY1WTb6dIxNUjKjpCyI
WbyfUZ8hHcXPdz4af25OuMzKX282YfNhWc+aAnOSek1FbzfoWCarXhMoZU7y
arSe5dnS8c51u8LqNSA1p4n8W086RtXLjrnmmZJvMd94tm6lI9PmsNYBJVOi
71b+aWQbHfkifaVLb5qQG0JCVwcD6aBrdpQ3vDMm7fEvzB+E0bHIecMVLScj
wrvlmIJ1JB07k41Dl00bEjsj6uK2PXR0hi1jtB81JD3T1T1NsXREckwvuj1k
QJ777Pe6kkzH4QLr35sO6BNpomWpcYiO43aDajOq+sR75ZjihXQ6qlom710f
0SPjffaTZ7PoaEjnevWHokeUajgey2XTsVq2TD3rry7Zebi2riiXjnpuibS4
Bl3yxUpq/8l8OpwMOoRKtHWJjmyPt3ghHUEPzgpMfNMhUX+TrLKL6DDSKbl5
t0GHzNV94s8ooyNwAXluSdMhZseKphaX0/GmhiW1cKkOiQ/Z0JdcQcehBu36
hFfaZNHaG/nxF+nI+9Ly3pulTWy4dx34W0PH9+NVnG4u2uTwqJxPzFU6Kky0
aMUK2kTkRJpyRCMdcsvaTtm0ahGpxe6NAS10DLl/dGr9rUm0P/3sZwzQESPC
/zbhrDrZcklfZNU/OviYJb7SrWtJvftPwR4OBqKUIsdm6GuJ4KLrAkncDIi1
dRttGVIkzZvX837gZeBV71dp9SkFIsdnNV+7lAEKzyKlYUV5ElO38G+AOAOv
W8WP2TesIX3eHb8lJRhY5BGw4a31GsJqsJ2Nl2bA+1RZ4ZNdcmTc13HCXpmB
dLPjhXe7ZYiZ8NJP8+sYSMy4KBizQ4Ycv/Hk/RV1Bi7fb3Kf4JEh1qIb367Q
ZcBIn55emSVNKm97Pn9rxsBgk37AzpaVhGunzNPj5gwoP+POvimxkniIvx6w
tWLA7q9u7JVISSIQ7Pe4xoaBM6GxfHKmEiREMuherDMDFhWXahR5lpP2NrUO
DTcGSk9d2FqbIk5Wh061vt7EgPHduEERQXESLXW5JXcze73P8nDf/GWkpyOs
2dqLgR3NW3N7VZcRpXDdprmtDPTL0osOtImRBOnZGxd9GVB62DGd5StGtCP3
NojtYOC+iPxMTP1SkiZjUtcRxMB7g9d+hduXkjcP/lyJ2cVA2c33pdfXLCWm
e5pq1MIYSBlTEPr5VpTkyMVffBnBwKx8yU2dalEy0WV+IXsPAwfNbp/+uEeU
UPdyV1JjGLj77rvYPktR8uNR8tkLcQxke0VfkBkRIQ77rEu9EhnQ3q7UplUl
Qs4r8p0RPchAd/R1b7EYEeK+P+NUdBoDo6vpQlRJEXJTJSfbKpeB9nvlvXK+
wiT+4JmE4UoGTPtWMP4YCJIle3hst1YzcPMEZ0Dw9BKSHxgsOn6JAZZlq+/S
C0vIVTuj0qlaBsaYL75+kV9CxkV6W7luM6AenpebJy9AwrgNMlLuMDB9LE5k
wzt+Mj9zykWglYHMsw7GKlX8ZMVQ4PiyewwUV16OWqnPT+xOc/Aq9zEQuq14
oHojHxnK9O+p7meg2vb39zdr+IhvwsMT2kPs+Gnbpkl+WUwO+J5QNh1hQJG/
7/u+9MWkRkXTjvmOAUOh62K1XbxEvMHrSOQc279X/htW7uchpefbXH//ZSCw
+FvMI1ceopm/bnUcBxM8+46VM7V4iM3+H5dSFzKhlL5k5tz7RSTWMrO3QIiJ
A1SVPBfvRWSx3veTMqJMTIvtlRPEIpKn6OFzVowJ4SXv90XLLCKXFq/9dlGC
Ce0EtRiXNwvJ60dNYi1rmLh0PuXlk90Lya478iNURSa2zPCKNrssJH+upJ19
oMSE357GIQuThWRZnqt+vxoTnioVi7l4FxLrzZNu7w2YqAjn0uc/v4BUv19V
IGjPxB1R6fwd89wktfCg9wsGEze+hW4V/chNfJ0mFC46MhFD22Oi189NpG7e
rKG7MbFzv8Wnpxe4SVqmR/thHyZ8C7OyV2/lJoH6J6f59jJRHtfw5PRTLmL1
iaPh2T4mjr92qHtyj4usLg6MrTzARHyWfYPpdS4ysNiQx5bFhAH38jdZBVyE
MjIgdSiTieSmap37XlxEjiVmzXOOiSnPI8lJHznJP8PYJYPnmXBpj9nZ+JyT
PJ148/hcFRPDDjHxAw85SZbb1S3Uy0xQFnr9u3GRk8yrOIUfvMnEE7+I0gu7
Ocmz0WuGLreZCPS+5FPlzUnqc2T/ybcwofjR5WmIAycJ+fcltbWDCbNXR2u0
NDjJcG/mae4+dvyGYrzXfuAgjck/tvX1MxHb3qH7cICD5Jh4KZcOMSFeM0QT
aeUgdmfVay1eMLGm6uvE9kIOcj26617CByb6r9/M7rflIHlqepmOn5nI/Pui
4Y8uBwl9fcpZdoqJ8+WrSoqkOYiSfdBo8wwTnY8MJTJezpst4HxSlvWDieXa
fiOJNfNmL+tMdnj/ZtvzSK7OLm7e7OaOUg3Nv0xwtdASX9jPmx1fzf99fp6J
mwqVitoS82b/B/XjGrQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80073#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {200, 
          FormBox["\"5.\"", TraditionalForm]}, {400, 
          FormBox["\"10.\"", TraditionalForm]}, {600, 
          FormBox["\"15.\"", TraditionalForm]}, {800, 
          FormBox["\"20.\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[113, 7], 2000}, {16.142857142857142`, 2000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0.\"", TraditionalForm]}, {200, 
          FormBox["\"5.\"", TraditionalForm]}, {400, 
          FormBox["\"10.\"", TraditionalForm]}, {600, 
          FormBox["\"15.\"", TraditionalForm]}, {800, 
          FormBox["\"20.\"", TraditionalForm]}, {1000, 
          FormBox["\"25.\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 850}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793640458833197*^9, 3.793640471714593*^9}, {
   3.7936405058523483`*^9, 3.793640516880765*^9}, 3.793640597711855*^9, 
   3.7936407366379633`*^9, 3.793640911618548*^9, {3.7936410235115643`*^9, 
   3.793641027674835*^9}, {3.793641347904949*^9, 3.793641351939537*^9}, 
   3.793641391018841*^9, {3.793642479752921*^9, 3.793642490567113*^9}, 
   3.79364641731458*^9, 3.793707618021345*^9, 3.793707662572912*^9, 
   3.793717672640687*^9, 3.793718175266699*^9, 3.7937182685384502`*^9, {
   3.793718723978971*^9, 3.7937187436549387`*^9}, {3.793718806973386*^9, 
   3.793718901003211*^9}, 3.793718959807323*^9, 3.793719541017272*^9, 
   3.7938013943488493`*^9, 3.7938014748299513`*^9, 3.7938015707028637`*^9, 
   3.793801638272567*^9, 3.793801741889409*^9, 3.794507025467761*^9, {
   3.7945073848860617`*^9, 3.79450738876585*^9}, 3.794507496338254*^9, 
   3.794507541365992*^9, 3.794507663329699*^9, 3.794513110556073*^9, 
   3.794513179331951*^9, 3.79451503272505*^9, 3.7945153168070593`*^9, 
   3.794568643074168*^9, 3.794569005824923*^9, 3.794576050772787*^9, 
   3.79457668662955*^9, 3.794578139879937*^9, 3.794578429562291*^9, 
   3.794579361990045*^9, 3.794579491064411*^9, 3.795513847128903*^9, 
   3.7955138947043324`*^9, 3.795514548533867*^9, 3.795515773675458*^9, {
   3.795516177609241*^9, 3.795516185096719*^9}},
 CellLabel->
  "Out[1369]=",ExpressionUUID->"bd83b546-0120-4ed3-9262-ab483fd2c70e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot4nscritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "solns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2x4ns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2x4ns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2x4ns"}], "]"}], ","}],
      "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
   3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
   3.793641549374053*^9}, {3.793646421184304*^9, 3.793646429323791*^9}, 
   3.7937076227765007`*^9},
 CellLabel->
  "In[1370]:=",ExpressionUUID->"ef879b92-f6fe-440c-9a0b-f07a8ae7822a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
LWyeAmUXrbrXYR8+OhHpuYIKp/fcuL4Rm2+vipn5ZipE3DaO24TNau0eWyVO
xfvl5bQZu3xXaGCtBBWWRSMNMeyjpm33ybJUSIxobd2CXUH34ZdXpeL/vwlf
JbBPkJ50rTCigl/osRpZ7MqmttwyEypYLJbx3I693mUy4Ig5FQ4e/LFJDvvZ
bUmpGksq9A21ucljr9t4ySPQngqczfLzithPZh1X/ThFhcxBnWoSNk98QN9t
XypQdvhbqhLXo5x03+IMFZgSWz4QXnuicW9RIBWWP8tcUCP60aOZ6XKRClfN
ecQ1iX4+49YdSaOChoKkmC62/X4ZnisZVPB0vZ5IuOSH3jDlDhVmzhTykrEP
KPlFpuZQwfz12BzhB+nDbftKqeCdOvoSsPeHlrm+e0MF62mVTTTsQrEWSmAD
FTysu0IILyv/wq/4jgrxR2xZhAu+iz+JaqdCd8uafDr2kiPRnPqDeD7ZSY6J
nWPgkFYxQwVq+t0fBtgkuS1kNEsFo+nfDEOi39wD3c9+U6Fm5Nw1wk0tthur
OPTAYbGwkhH2tK11zIuVenBlvH+/MTbZw/zsq016EOqvFWuKXWuxVshgix6k
HTvcTNhcveHh6616EBzay2+G7fDH6FudtB5MZj+9Tvh8OPP4W2U9qPU9fs2c
WC+JbNXM0AO+ET2PXdjW/nPfdxnowbiFXA7hoQNPr7QY6cFu8cBhwtMSWo2t
5npwrNp1125swQJVRsc+PSiruiBjQaz3Qo7U46oHFoHN5ZbY3z8J8YzG64HU
Cv3zVthXU8ZqkxP1wC7C+QFhFbPigN3JeqDUy9NP2L3IZKIyXQ8e8g6SrLG/
+AY23MjVgz37R94T/rBsNGrncz3Ya+DNux879GERjatGD+4d3adGeOuxgD8V
tXrAbdC6j/DBegFnubd6oBYXfYtwb5yREWenHszJkORtsNs2319R/kUPtGNB
yRbb651/leekHvzq4jAjvC7E0E/2mx7Y/DriQnjn6DDr+k89UFikeI/w29wN
rzyW0GCCp0LEDrtG82y4tCANTIq/ThN2/KRP7hemgZpPJvcB4v5IWT9zbRMN
Ft6sliZM4Sg4vESCBtMTS/YRLn85SOtToEFfcOpjwiW7mUuu0mhgNSB10h47
wqgsTIRJg8FemRDCNnoyXLcNaMB1Ziae8GKVVWtKTWlQ3jpeTtiUr3FDpxUN
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80202#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
uLVWxtJqygi8M8+z9WJXBho83zZvBE8KJtkJF2i5SP1mNwa2c9TVhKMeJi/c
ETaGcsk76wifO1rqelrKGLaOZq4nfEK84x1N2RguqNzmJryvZ0ZHUNsY2hf8
eAkb3eTKHjfA9ST6ht5/r1ejizfsjUHrURI/4ZUXLllrnTYGOXU3IcIhEn2B
HqHGMN2QIUKY/Y1mXvptY3BfitxM+LJ7fGfXQ2PY46CwlTDbhmlWrmpjsAlI
FiPM6phl5/fFGHzIQtsIs+Q4Fg7ymYBDQ5AU4TLxK3cDTpiA7fRxOcJeSYXR
fNUmYPVVTZ6w4JBIA6+gKWy0qlYkXL4jnIPXwxSy89V2Eh4jX0gyrjCFDJqC
CmFeEy/5YC4ziBaaVSX8S1uc5eIRM+BKiVEj3KvQ+t7/pRlwqsaqEzYcXb1Y
sN4c9MxzNQgX3UWSw47m8FAwRpPwqu0vkoIKzKEvUlGL8IFCdd7Nf8yBM/zO
v/YQPvn2vLUFXHw78a+DQtMu9eZawCFWcTJh/mdOMb4LFlDeRf/XDxmbk7nM
LIFdyvtfS4RsNFr9wBLOpD/417e2rvu5vGwJQTkd//r/AFDSg0A=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80202#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
BSib5oo7ib1o1LP1432AH69EBj9hO8SceRbXAQCcft5PJJhIYPU0Z+MvgP4c
Q2+DzUz0siY+1mQR4KKgZ6I19rkjW1Z0LAHM77gcdACbv9Vh2Vt2I7CP43mY
QDi6aXGK1wh4jIWn+7D5fmd+XbfZCEIm1VI9pPB+39Y4lrvFCGbG9B8GYafY
d05JyxpB88r6+/HYq6uWf1ZRMALhsUGNImzeY0cnaFpG0KS2RfMzNs8Epd/P
zAjoz5ZXHtyCr/8LQw7zFkagQY21C8BOIAe/OW1lBJUuS91R2CuvlfWcsTUC
ixSlA7nY3M7rurL3GAHSWtvTh835arqpzc8IUq6KbzeSZiL2usulm68YgTYl
gPEL+60+mf7+qhFAe/+xFTJMVPrg01BmLu5PPvNuDbZDlQE//00jYA9cYy2L
XV783p+lwggm/b3ad2K7XNmsO9BsBLPSic7XsdXFnr/MaDWCm1JWAqXYXBn+
h21eGEG4g0dJNXbl+aYrbS+NoCas9EIb9sqzB5fuDxjBQw1d5Wns6qDCxvRv
RiChYfFSXZaJkn7sdN4xZwS/dgr/0cfef3zh+6p5I5jnixWgyBL7ZyET/ccI
ckxUF2ywD3hMnfHjMoZlWztb/bD57dQsrcSNwVnvc2Ix9mH1h2+4zIxBt3tM
RmArE9V3dhdVWxhD8jHHHhHstV7ToQetjOGAUODxjdh117dIN9kaQ2QxPWYr
toBwim+YqzFIhXyZM8R+OO+28sdxY6AG1GgdxOZLDx28fgLXa6UvO4J9QDWz
3CbYGOp5IxqOYq8+3GFXEWYMH/wkxU5i7+/Xyfc6awwtEY7qCdgr63gNRnOM
4b5KgHIJtqvjVr7zebi+mc+gAvvuD9KI0Q1j4Pz42LAKe49y0JnsQmNwM++T
qMW+kzvS7VBlDHnZjEMvsB2jqr272ozh6apF0UnsQpN9ObVzxvD2c17xejl8
XvIShmjeGF46jbqIY9fyDr2r+20MGRRnLknszlfOwo9ZSKCrpW8qgz3rvDvp
CTcJzobEhahgG/panWrZSAIJpexqMnazzWoxEwkSXOleu5yGbaXVfu/ZZhKk
BTeamWDvWzD71ipLAnZrzhYL7NgYmucLVRK4HHgYsovol2lo/5JKAnVzMtMd
e3fI4vcdJiT46tX03gN7eM+j86/MSKCvbtPlScxHSrfjtRUJ5GefX/fGFi3V
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
44YlXFix+68viq/8vrRkCRwf7P76fwA+yUaS
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80202#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
f/x/kf+bMw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80202#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.793646429849951*^9, 
   3.793707624477703*^9, 3.793707663340981*^9, 3.793717672987616*^9, 
   3.793718175621484*^9, 3.793718268907634*^9, 3.79371896038622*^9, 
   3.7937195413954887`*^9, 3.7938013946540413`*^9, 3.7938014751061068`*^9, 
   3.793801571011133*^9, 3.7938016385604877`*^9, 3.793801742304904*^9, 
   3.79450702595752*^9, 3.794507496709774*^9, 3.794507541710725*^9, 
   3.794507663668606*^9, 3.7945131108491*^9, 3.7945131796383123`*^9, 
   3.794515033068891*^9, 3.79451531713087*^9, 3.794568643407506*^9, 
   3.794569006486268*^9, 3.794576051238998*^9, 3.79457668699123*^9, 
   3.794578140424238*^9, 3.794578429922683*^9, 3.794579362290388*^9, 
   3.7945794913846407`*^9, 3.795513847256809*^9, 3.795513894892748*^9, 
   3.795514548796855*^9, 3.795515774009953*^9, {3.7955161777344522`*^9, 
   3.795516185243404*^9}},
 CellLabel->
  "Out[1370]=",ExpressionUUID->"bb7b9f3b-a802-484b-81ff-71dd7739e277"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"figoneshot8nscrit", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], "+", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "/.", "solns"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], "+", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2x8ns"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], "+", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2x8ns"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], "+", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2x8ns"}], "]"}]}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"sf", " ", "*", " ", "10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"CCq", "[", "t", "]"}], "/.", "solns"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"sf", " ", "*", " ", "10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2x8ns"}], "]"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"sf", " ", "*", " ", "10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2x8ns"}], "]"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"sf", " ", "*", " ", "10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2x8ns"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
           RowBox[{"FindDivisions", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
              " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}],
                 ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", 
            " ", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                 "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
              " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
          ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",",
      " ", 
     RowBox[{"PlotRangePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
        "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
        "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
        "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<No intervention\>\"", ",", " ", 
        "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
        "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
        " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", ".5", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"importtime", "+", "2", "+", "8"}], ",", "2000"}], 
           "}"}]}], "]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.793640548791997*^9, 3.793640579046043*^9}, 
   3.793640618867655*^9, {3.793640919037943*^9, 3.7936409215073757`*^9}, 
   3.793641019556532*^9, {3.793641363983626*^9, 3.793641366798842*^9}, {
   3.7936464423732843`*^9, 3.793646463204339*^9}, {3.793707627583127*^9, 
   3.793707628443535*^9}, {3.793718905610779*^9, 3.793718911467928*^9}, {
   3.794507401742484*^9, 3.79450740592568*^9}},
 CellLabel->
  "In[1371]:=",ExpressionUUID->"e27f10e4-e7b2-4460-ad54-c0e92c2a2abd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$80313#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF13c81V/8B3Azq+yslC1JVlz7njeued17zVLJSkZGGZUVNyGJCElWdtkj
ZWRnFUpCJaNkZhYlZfzu7/H4/b7dfz6P5x/3nPd5nff9nHNFHC+an6ehoqKS
oKWi+t+n8fm5ty3zT7FU//eh0xW4NMGfhP7fxx+mpD/hz/vP+L73VRn81f/5
pNNGYwJ/+38ek7upG8s/+J+z9pMio/mn/vN1xieHb/Gv/2frU9nlq9/p4P/N
snvdxuAQ23+WMFuee3Gb+z9ffa2GUtb5/zNvNcc4NbXQf7aJ+Ws5xfPPOU7T
PZ0y/yyzv67utvU/61yxv7e/4p8x6ScLkuSE/7ODbcHZx+P/HG584MGD+X8u
wMQPRq//8yJrIN6TWeQ/X2kmqCli/jlG+Cd3Q+w/P5vU7X2jKfqfhw2vf481
+OdfZU08Jub/rBKk5tDt8s+1XHK/WhL+uQ4nIFw1988jRSf1Lq398x/2exdk
d/5ZfYztaRGX2H+uv0xvnIv954aCVd+kpH8e3Sv7wPzhP2/5uDexF/2zFpph
jG3+56b3nzIivv3zuBb/C92f/7yTe2KOmkr8P2MvvVUM2f/PtsOs1prC/xyi
aXLtj/Q/Z+bcyqlV/udmxq6uK/DPn73olpTw4nAsOIlN6qglohrS5lyzEgd7
XHrJy75HSFgjVKXSXhwEbIt2++teIMhusLnoLg4b8p2JTtcHkT3Dn+vHrojD
r4OjO/LWXxDZU+XRAlkcRt18P5Ye+Iay3vn1Ft4WB12W28tDaj9Qi1rVd5dk
cSAqjHxdFv+NPj9c4ZHMFgfliYx8844dRLXnmOZUsTjwFsY8GWekBWGPCw45
z8Sh8vLBI0+oGEB74FGkfas4MKz1HLXWZwFH1eniQ73iQKqntto3zAZhmaJv
R4fFgSB+4b7mCU5ou5Bx4NSiOHiKfAq5Fc8LT+bd3W1/iYNLXzdr71EByHNV
f36OSgJu80WYs3wRhAjn96e9uCUgg3xgz6axCBg6cqTe0JSAL4ZekRu3DoPa
l4n5KH0J2Kks+/ZA6QhI25ep3TGVgL9JDVt+X6Rhry3+Y4qTBCz9sj23uEcW
3pyK4CuLkQA61rOmAq8VoOWDheuTZAkwF4znovVWhIqTorW1WRJwq5GKlMB6
HBKsmk++qJaAHEKvNU5DCU6YbSZ/GJWAyfKiRuHzGDDo75oZm5GAkoDY3uhZ
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
lwQbEfoauzxT2P8BO4bsVQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80313#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
eUcG4kasy5mFWMzyl9fyLqPk//5v/j9Ea0oQ
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80313#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80313#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
/y/8HwVWn4k=
          "]]}, Annotation[#, "Charting`Private`Tag$80313#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80313#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80313#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
a34uSVjmIWkkbYXJeyHl/K+uEvbH5sIselaQNxmkrXe9Qs7qjf+oNLDCA0u9
t+WKV4hUWVz3AWKFHZKecS1/cgiu1qW8pTD9JyxjkbTJIUejNFfU0a1wSsL5
jeGfLDKrL8lyzNcKg1xV2wySL5Hjd2vfaO62wlguq5oL5RIRUtxeM7XXCvsn
M/b+WMgk6mLnD7sHWqHjRdvnKr9MEjjP/dPgiBW2CUeL11Ivko/l8x9/pzD9
d/S8F9lwnoQrZbTcPWuF73JpRdHvMwjnNfWb+zKscNfdgJJ+JYPIng3weX3J
CrevRT18KpFBvA6OvnlwwwrV5a/r7sufI4PKnd0RD61gRXnwjMfzLMn5JHB0
SZ0Vok9edGFROUu8ChxkEx9ZQeb2TYdbi2nko3R/+JUmK0R+nfM1vZxGZte8
WdvcaYWUtb9bs0ZTiQDX511CH6xQ+HDyj2tmCulpVhbIHrdCYLC0sHNwCrlw
/MCDjZNWaErwNkyxSiHrWL9z609bQTf605/gf8lEaX7hzs4FK4ivWMHK/iKJ
UMc4Fm/xWEN5iSu3RsoZsvya+XUdfmtMi3sZBlucIW07T9s0CFrDdu25FMrS
M8RhiPdq72prSFyKXnUt8jTx7FlFXZS0xjfua5JxQQnkSMOGFHMta7zp7qRo
RMYTw2hf3W4da2RN7zzsgnjCZnhzeLu+Nchqg065pfEk/r6CZiCsMePQvb0n
5STJKN30KsPCGmeXNEbElZ4gpdlEetTDGrdoXo3lgsfJ98PfOXbutEZqao4H
fSSOaDnf/DTkbQ0jjadu+eVxpJqP727/bmuE9tArl7jGkaboN0atQdbgX39y
4sgNBnntdXRH2QlrHHvP+yfcIZasI5tMVE9ZI9fWYLJcIZZ4rvkgW3zaGp9b
ikbM2GLJWLfVl+sp1nhZN3gnpCyGfKWIH72Yyaxfy+1+jXAMWbaxOjP6ljUq
AmqaLAajiPmSA8f+lFpDJkX6W0N6FDnzVsrr8F1r7Fl7YLLFOooIXEiQD6my
xle7pluhj44R8eVuVbsamPfkfxtihW8fJZs/zffa9DHj23ernbt6hLjf1hJY
+9cay+2uWlJeh5F7bvO8nSw2WD1et80iO4zwLnvAzVhig7GiEa0PO8NI/fYt
nB85bXClY43wi8lDRIqL8q98pQ32joZOOy05RMZ87Kas5G3wx4u7+aB1CDHk
X/npn6INjqYMff8kEkLOV/dMlKnYoFZGZ8Wb0WBiJugyKqJhA9GMvY+kjgWT
wjqP16OGNvg986nhd0UQCRDb/zTS0QZ37l3qdtY9SJqeKDerOttAndd7VfiK
g2T9wenGYVcbXFums/P7UCDpbA6qN9thg9cTn958ZwSSzaERlUJ7bTBSbNrd
ffMAmes4cb04ygYqknzO+9n8SfTxqzGDhTZgoUW7mMvsJjxhHBY7S2xg8Le9
iGV4F8nc7S84dtsGluHbbHfk7CJ3LXXzpsttML/ZWnyt+C4yJtDVyFZnAzkN
tYLRtX4kaIl24slHNlgTIhEo8c6X/Ptx2Ym70QbtQVE3RPJ8icjA7rFVT5ms
cPWrmaIvscxm4ZTvtsGr2dWj3yg+ZCDZr7Ok1waHc6T4t/P4EJ+YtgubB2yw
fEnr04w+b3LM54K8wZANUsK5Q0/v8yalCmqW9HEbbEiZTa/O8SLClTuSQn/b
YLTgSiNdeSfJy3+y9dcfG2S/Ft/+5Z8nUctUXB/FQsdcY7pC9AtPYn507nb8
Ujo+xyoGJIV5kkiT5K5LfHTmPF+rfZGxgwx31Ao1bKCjwN/rPV/FdnLgkfQQ
VZaOqZbvTqXbt5PFsoTrrXJ0iNwTo9axbyerMrZq9SrT8eV5ymWLrduI2fYv
zhPadKTf+6a7lMWNlEysvcRrRUepifrPw6HOJD7ruOcbG+b7PRMM7vXOxMd+
SuaWHR0ZbiLHXzzdSsQfPiy1dqZjqM5JVXHDVpKQvK3pjBcdsRvct7qNORI/
yuPT233pkMn6WfQq05EYLyjYKe2mw3F+QuiLrSNZ8Pr1utWf6f+p7cE/jxzI
bq2LM1wRdASs0Dm5/L49oXxiqXx1hI61Tx8U+h+xJ+uv7I4sPEZHo0NE7GNi
T/qW63BYxNFhYSqWE/zcjpTV5rSJnqSDbVzjzIcLdiQpmCPt4yk6qK2/j4b7
2hHToT7xU8l0aHT9rVNbakck0gyHXdKY9SoHV/kP2JJF6o2bcueY+RmzL/td
YkvKS0M3t2TSsV+Z1/27uy2RihMy47hBB2Og6FV0GJ381Ynk6c+nI3j30zda
MnTycmrkxY0iOr5ppxmceWFDUpzvulPv0CE7Ze1EU7Ih/xTsg48/pGNMJF5p
x5AVGexKzl7STYdO5atfwkYWpOrEnHd3Lx1FSX5/b34xJ+n6O+TzBui4spRc
vnrZnFheVyk3fkOHisLfWZZfZuRBePvTmI90+FR0uHZW00iGsmay3Wc6Fr++
8lwWQCMHhy87Sk7ToRvJyF0uSSNyVvvf1v+gQ/Nlj0zhKSphZ+25ljJHx3xf
arInoZJ3Ffp7PX/RQYsUihOeNSUP9+apqv1h5v/W7/xAiSk5v37Fz3//6Che
ddb9rp8p+f8Ay8tAgg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80313#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}, {1000, 
          FormBox["\"25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[141, 7], 2000}, {20.142857142857142`, 2000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}, {1000, 
          FormBox["\"25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 850}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.793640561309989*^9, {3.7936406007279778`*^9, 3.793640619274135*^9}, 
   3.7936407371030693`*^9, 3.793640921932763*^9, {3.793641020095443*^9, 
   3.793641028238113*^9}, {3.793641367539876*^9, 3.793641391818853*^9}, {
   3.793646454393449*^9, 3.793646463714933*^9}, 3.7937076289031763`*^9, 
   3.7937076646762943`*^9, 3.793717673438632*^9, 3.793718176099379*^9, 
   3.793718269333499*^9, 3.7937189119617367`*^9, 3.793718961026936*^9, 
   3.793719541834216*^9, 3.79380139505795*^9, 3.7938014755108356`*^9, 
   3.793801571395419*^9, 3.7938016389442*^9, 3.793801742820375*^9, 
   3.79450702641641*^9, {3.794507402360146*^9, 3.794507406367613*^9}, 
   3.7945074971288643`*^9, 3.794507542134782*^9, 3.794507664085531*^9, 
   3.794513111295895*^9, 3.794513180075007*^9, 3.794515033502537*^9, 
   3.79451531756131*^9, 3.794568644037795*^9, 3.794569006953068*^9, 
   3.794576051761636*^9, 3.7945766874504833`*^9, 3.794578141163995*^9, 
   3.794578430368981*^9, 3.794579362920628*^9, 3.7945794918723288`*^9, 
   3.795513847475226*^9, 3.795513895139078*^9, 3.795514549207889*^9, 
   3.795515774404827*^9, {3.795516177949139*^9, 3.795516185585683*^9}},
 CellLabel->
  "Out[1371]=",ExpressionUUID->"312e1614-adcd-4192-b5aa-b82c58528d35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot8nscritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "solns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2x8ns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2x8ns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2x8ns"}], "]"}], ","}],
      "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
   3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
   3.793641549374053*^9}, {3.79364160744447*^9, 3.793641612397052*^9}, {
   3.793646477609962*^9, 3.793646482835202*^9}, 3.793707632403079*^9},
 CellLabel->
  "In[1372]:=",ExpressionUUID->"67297af8-df19-4ec3-ae07-215f89cd8a7c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
LWyeAmUXrbrXYR8+OhHpuYIKp/fcuL4Rm2+vipn5ZipE3DaO24TNau0eWyVO
xfvl5bQZu3xXaGCtBBWWRSMNMeyjpm33ybJUSIxobd2CXUH34ZdXpeL/vwlf
JbBPkJ50rTCigl/osRpZ7MqmttwyEypYLJbx3I693mUy4Ig5FQ4e/LFJDvvZ
bUmpGksq9A21ucljr9t4ySPQngqczfLzithPZh1X/ThFhcxBnWoSNk98QN9t
XypQdvhbqhLXo5x03+IMFZgSWz4QXnuicW9RIBWWP8tcUCP60aOZ6XKRClfN
ecQ1iX4+49YdSaOChoKkmC62/X4ZnisZVPB0vZ5IuOSH3jDlDhVmzhTykrEP
KPlFpuZQwfz12BzhB+nDbftKqeCdOvoSsPeHlrm+e0MF62mVTTTsQrEWSmAD
FTysu0IILyv/wq/4jgrxR2xZhAu+iz+JaqdCd8uafDr2kiPRnPqDeD7ZSY6J
nWPgkFYxQwVq+t0fBtgkuS1kNEsFo+nfDEOi39wD3c9+U6Fm5Nw1wk0tthur
OPTAYbGwkhH2tK11zIuVenBlvH+/MTbZw/zsq016EOqvFWuKXWuxVshgix6k
HTvcTNhcveHh6616EBzay2+G7fDH6FudtB5MZj+9Tvh8OPP4W2U9qPU9fs2c
WC+JbNXM0AO+ET2PXdjW/nPfdxnowbiFXA7hoQNPr7QY6cFu8cBhwtMSWo2t
5npwrNp1125swQJVRsc+PSiruiBjQaz3Qo7U46oHFoHN5ZbY3z8J8YzG64HU
Cv3zVthXU8ZqkxP1wC7C+QFhFbPigN3JeqDUy9NP2L3IZKIyXQ8e8g6SrLG/
+AY23MjVgz37R94T/rBsNGrncz3Ya+DNux879GERjatGD+4d3adGeOuxgD8V
tXrAbdC6j/DBegFnubd6oBYXfYtwb5yREWenHszJkORtsNs2319R/kUPtGNB
yRbb651/leekHvzq4jAjvC7E0E/2mx7Y/DriQnjn6DDr+k89UFikeI/w29wN
rzyW0GCCp0LEDrtG82y4tCANTIq/ThN2/KRP7hemgZpPJvcB4v5IWT9zbRMN
Ft6sliZM4Sg4vESCBtMTS/YRLn85SOtToEFfcOpjwiW7mUuu0mhgNSB10h47
wqgsTIRJg8FemRDCNnoyXLcNaMB1Ziae8GKVVWtKTWlQ3jpeTtiUr3FDpxUN
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80442#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
L23g/bmwYAW+L0r++v8Ayrdbdw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80442#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF1nk4lO33AHBbkWRLQhuRREr2/T5jZgwziFIkSbKVNRSyZwkhSVqFUr1J
QkibLVv2CBFSmBktlooi5Xc/7/X79s4fM9fnOvdzzn2f5zwzI+Pks8uFi4OD
g4zfiE+6C/tV1XipIcf/v3jIUr7vJNPR/6yWdenaQ8ncv2a09hZnSpb8tY3z
j+dpkrV/Pbj9NDlZ8vVfZ6/aGZcoOfrXUXwPNydIfv9r2305D6ameeB/Xr4Y
ZU9bL/TXm6wm2C/OiP11YJsOuvRd8q9Xl4gMcXJu+OuyD+SWdv2Nf91jEjWd
TPvPswUV4ma7/rNWiM6hRrf/XL5y+2xV2n9+TJGSLmb/52e3p/zT02X/ekBg
2+VdWf95wc+jQjjvPxsgJl9y5X+u6H2bGfvxP1fyNTScALm/Hvbm+aLOwI7c
KL5z4xLE0U0S/bYHW8LdttJFBUnrRWgVOWKDw5s5ZUMEOc/sfTyw/ylkn+I0
Ro6881HKJ7Df5JL1Z8xQpJfWnU+R2Oq5H5znrVCVTvG0WwZ2/gPhLOF9aDhr
Ulw+B9syn/fAXXvEsVRZf/Qedsb2FHN5R0TqvBPnWI1N+seV9vYwqjmauWbf
Z+z9sbTsSx7o4biHh8Mstvkz284gL5Trrvv0MMcm4Jj/NhHt6INiXXvtvMU2
QeTyBI2qm8fQibFbef7rcXxb9fm8m37I1TlgPkgBe79Zy9s7/shmxIgerort
euMfv8IAZOIkciVaH1tG72vy8+NI5/278XhjnK/v531G+wmk6Figk2KJ4xUl
sR0WgWjNu9CE83Y47iLx/FNmIBJwYPRdcsY+TH17ajoQ/R6Q3HLdG68/b7XN
zTQITexnB90MwvHj1maet4JQ+75YiYIkHM8IKNc9Eoyq3ux2f5iBHZP48klH
MCq02Vheno3XG1SRm/ROorQ9lTYvSrCX1SRvWhuC9lrNZbwZwOv3pipLcIch
WkcDc5CJ4wnBh3bFhCHtnRmaI1PYJZdD3fnCkaS5Ws8XHnmI3K6TOCkRgQZM
vFZxK8sDR0DbB4H7kai1Qc+FTwvHuZPY3j8jUYUxf+kKEo7bJyqsokahLMod
a4k92H8MD8t8iEJO8P68chhePxDmsagYjdhae0RtW+Wh6jXp58RsLOork3U6
0IstdVR3ZE8catL4WuT0Hl8/8LROuCwO3VM7a+U1g00veb725Gnkvf1l6ql1
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

          "]]}, Annotation[#, "Charting`Private`Tag$80442#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
/ys=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80442#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.79364161512011*^9, 
   3.793646483923757*^9, 3.793707632937484*^9, 3.793707665481339*^9, 
   3.79371767378432*^9, 3.7937181764586363`*^9, 3.793718269643299*^9, 
   3.7937189620789137`*^9, 3.793719542208098*^9, 3.79380139537661*^9, 
   3.793801475793778*^9, 3.79380157169277*^9, 3.7938016392311277`*^9, 
   3.793801743200708*^9, 3.794507026949277*^9, 3.794507497452175*^9, 
   3.7945075430115433`*^9, 3.794507664410883*^9, 3.7945131115971613`*^9, 
   3.794513180396125*^9, 3.794515033842832*^9, 3.794515317968289*^9, 
   3.794568644328187*^9, 3.794569007350191*^9, 3.794576052234805*^9, 
   3.7945766878219852`*^9, 3.7945781417693043`*^9, 3.7945784308398447`*^9, 
   3.7945793633708963`*^9, 3.7945794922603283`*^9, 3.7955138476474667`*^9, 
   3.795513895273065*^9, 3.795514549634853*^9, 3.795515774693655*^9, {
   3.795516178070334*^9, 3.795516185725679*^9}},
 CellLabel->
  "Out[1372]=",ExpressionUUID->"2edc48bd-41f9-4355-b19a-3f99d7a02e84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot12nscrit", " ", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2x12ns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2x12ns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2x12ns"}], "]"}]}], 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2x12ns"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2x12ns"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2x12ns"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2", "+", "12"}], ",", "2000"}], 
          "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793394861836452*^9, 3.793394918159622*^9}, {
   3.7933951496126957`*^9, 3.7933951633752604`*^9}, {3.79339523317878*^9, 
   3.793395327131968*^9}, {3.793395363113092*^9, 3.793395454093955*^9}, {
   3.793398236334831*^9, 3.7933982401612463`*^9}, {3.793398273947652*^9, 
   3.793398297786425*^9}, {3.793398587977316*^9, 3.793398589049642*^9}, {
   3.793398642868155*^9, 3.7933986473815727`*^9}, {3.793398766872898*^9, 
   3.793398769091921*^9}, {3.793398847935656*^9, 3.793398887738555*^9}, {
   3.7933989372257338`*^9, 3.793398938788555*^9}, {3.79339898752773*^9, 
   3.793398989638323*^9}, {3.793399423963974*^9, 3.793399443278512*^9}, {
   3.7933996196258163`*^9, 3.7933996224000072`*^9}, {3.7933997698848143`*^9, 
   3.7933998152795763`*^9}, {3.793399870324162*^9, 3.793399874653573*^9}, {
   3.793399955092331*^9, 3.793399981729393*^9}, {3.793400297337214*^9, 
   3.793400299363748*^9}, {3.7934003321033993`*^9, 3.793400385420542*^9}, {
   3.7934018012048273`*^9, 3.793401888718988*^9}, {3.793401932418544*^9, 
   3.7934019352989807`*^9}, {3.793402009236326*^9, 3.793402049607609*^9}, {
   3.793442209711054*^9, 3.793442344238595*^9}, {3.793442922320374*^9, 
   3.793442937773024*^9}, {3.793442988076605*^9, 3.7934430062331343`*^9}, {
   3.793443077052331*^9, 3.7934431164279118`*^9}, 3.793443181492978*^9, {
   3.793640604305517*^9, 3.793640631235282*^9}, {3.793640926091655*^9, 
   3.793640928013129*^9}, 3.793641015622568*^9, {3.79364137194876*^9, 
   3.793641374383918*^9}, {3.793646495357765*^9, 3.7936465071467323`*^9}, {
   3.7937076359784517`*^9, 3.793707636791189*^9}, {3.793718926058593*^9, 
   3.793718934593286*^9}, {3.794507416067397*^9, 3.794507417746408*^9}},
 CellLabel->
  "In[1373]:=",ExpressionUUID->"4c550921-597f-481f-9b4e-2f7a7e43a153"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$80553#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80553#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF13c4lX/cB3BKKXtFlJI9I+PY537b20FExjFCZZXIPEKhkiiVZEZKoaKE
FCGrUkRmKJEoJQ0U6TnPdT3PL/+4Xtd97u/4jO/1vbd5HbDzWcXAwMC2moHh
f/+b+0y9bJi+R2b4vz8mA6GDbwTPE/9vlfzMnLuCRf/Z4nn/nVzByv/s6L1Q
ly7Y/J9HFI8bnBZ89Z8vb6AkJQtO/Of4dXelTgr++M9Ouwtuf51jwv+b9W+8
q8kWzv8sYftl6vEpvv8c/kKTyPwh+J8FKrlHGRm3/mfXlCX7Cf5/LvR+/6xV
/p/lN9y/f8rpn/XDPC5sKP9nUo7jtfOKIv/Zk3rN7froPyeYb7p0afqfr5HO
vEr+8c8zHFEWgSzb/nPYIytNZdI/p4j85Ht4+p+r3hl0dOqI/uc+0/i50yb/
PH+rnt/S7p/VozU92/f+cw2v4nxD+j/fNxQSuTP1z0MljkYHv//zb64LfttX
/llrhPNeCa/Yf649vMb8CvmfH177GnL+/D8Ps22/ZJf/z8uH/Ou5Sv5Zl5hc
d/rRP9f3v85N/PjPo7qCjw1+/vPKlV1TjAzi/5l88KXykQ3/TO3jcNIR+ecj
OpYxv2X/Oa/wZGGN2j8/WtfWFoZ/fhvE9FnVQhwKtPOc0nL2BEOvHs93B3F4
GOaUPXleTIhox6pXeIhDiFryt+v+YwIFD10P+ItjQan1nHf8K8KD+Xe8Qpg4
5oWHV5Scxoi4QPXiT3HiGN4fMnhz00fick9ox41T4jBgPfWlV/Mb0aB5Z25v
hjisdwyNfxFfJN7mz/JLFohD7U3uVbuWFYJhrYLORKk4BG6k3B1dtxoiAX6e
hVXiqDgsLHOXgRl63cVJHo3iYP7+TM7JmBVeGu9Lt3SIg1LL6MDex4mjeaIv
h/vEYSXud1FnFw+a/HI37Z4RR+C210dOnhHA3Wl/f+q8OPY+b+fokBNC0T6t
B3sYJHBqY6Id69hmJPr2OwfxSSA3btPaX+bbYOrFnXVMRwJjpkFJCyeloDn2
ZvqEsQRWKm59vKQqA1mPW5qpNhJYOv9wOXRMFmxUi8FMbwl8nqfumVm7HZ27
EzfeSpEAE4ebjdCLHWgY2LnvboYE7Daf4V0drIxyR9GamssSOFnHQEnnUEG6
wyPHx5USKLTqcDLUVsUu218ZA8MSeHe7pE7EhwSTrrbJkUkJlEWe7kj+QIIG
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
diP+B/kxENQ=
          "]]}, Annotation[#, "Charting`Private`Tag$80553#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF13dczV/8B/AiorRp0d57qtv8vG7d9r3dilK0JaE0NGloKlGhkhRJRCIq
SVrSEpE0jDREw0qohPK7v8fj9/u6f9z7eD7O+Lzf55x7zvlIeAc67FrBxMT0
m/H1v7/Wu6aeNU/fNmb6vw+LqXDQiFA28f/WOp9XUCVU8p9tugcrC4Wq//M2
n4WGk0Kt//mN2hHT40J9/7loAz3lqNC7/xy/pkouTejHf3Z2uVDxdZYF/2/2
v/GuFqJc/1nG/svUg/T1/zniiR6R90PoPwtU8wwzM4v9Z9djv7e+4//nYp/3
j9qV/1l5w9276c7/bBLumbPh5j/rFGy7nK0m/p+93C+7XRn+5yTrjWfOTP/z
ZZ2svqM//vkT50GbADaJ/xzeRNPT1PnnY+Jz6+uP/3PNW9PHTw0l//OAZfzs
cYt/nr/RyE91+GfdQ3penbv/uZZPbb755D/fpQiLV07986uybWZB3//5F3fO
XtXlf9Z/w3W7jE/qP9eFrbK+aPzP9Ze/HsjO/uehdapnHM7/85+QfY3cZf9s
REysOd70z42DrwuTP/zzsJHQA9O5f16+6DTFzCT9n42DnmnGbvhn9wFOZ0Px
f441pMb8Uvznc8VpxbWb/7lpTUdHOP55dD/LZ20baahEZ3PJK20lmPrJvN8d
peFJKSh/2F1KiBvE6d7ylIawe9nfnrsPCFyodw3cJ40F9fZTPvF9hCfrr3iV
cGnMiwwtqzuPEYcDdEs/HpbG0J4DL69v/EAUPQ99fDVdGqbs6V/69b4RzXqV
s7tzpWGr8Wr8i/RPYvT8DL/sBWlsHim85NC2TDCtVjF8d00aAlePVQ2vWQlx
/71exTXSuBUmolDFxApyb2mK531psH5/pORszg5v0vtroo+lQa9jduQY4ELC
OclnQwPSoEnvPW3oxIuWvYUbXT5JI0DidWxalgCqpvftc5+Xxu7uTs7HSsIo
8dO/t5NJBumCyQ7sY5uQ7Du4ff96GRQe3rh60VoClt48+YmGMhiz3J+ykCYH
vbGR6VRzGSzfuvHhjLYCFD1v6GXYyeB3dv2f0DFFrHO3eZnnI4PP8+47P61W
xVOXZMEbx2TAwulmJ/xEA80vtvhV5crAYVMW38pgTdzcJllbWySDtAYm+klO
LZx0bNr2oFoGxbTHzhQDbTjZL+a+GJLB24qyBvFdOrDo6Zh4MyGD8qjjj49O
6oBEz9UZ/yoD8Vs+221260KIpjXwmUUWB9ZyCrR7kDBkGbBhpYos+tWDsy7p
66O7w2DXGl1ZeG25Lvvyuj4azdluc5BloVpJxYKYAc5TSrcKOsqi+fzynwxm
Q3hj7JRKjCwoZx233GkwwpSuI69ztyxkMm7cuJAHzMkacV0PkINW/65HkwQF
xm9NOo5GyuH2px9yFxIpSCm0jPNLlIOsyZZO1k4K+NdvnZE6I4cohWC7GQcz
6DDve5rfKge+4v3CpcHmiK0POhL5VA6OhY++Wt4zR3tEOOH0Sg4Ov6Kb61ZZ
YNuX+Aqer3K4uU9QUrTQApGv8zJTN8qDI9xrwmbAEs255yx8ZeXRP37z4KCs
FdY4lPw11ZDHkpV1g12kFc50VgT+NZdHqIPTEyFRa7xNvC33xl4efVYtXexB
1lAk7o3UucrjfQvT79571qi73U4PD5HHbBYn9yzZBiuCH7NujZGH3DO2O7PR
NrBW7m3SSJWH9lTkhd+VNjg5ORjBdUoec/XTPi7vbPC6+I3a50J5yB/eG0/n
oULafXyy64o8vsWOHZbQp8JfaPr8lSp5cJkHH2DzoKK678u2lEZ5TDWtZaMc
puJP5g8un4fy2BXv4MN6jgqKza8Ocp88HlQNKKXUUnFsNdNhsRF5+JzPVPr6
lIq++6tIS9Py2NgS+zP0HRUiMexfX/2Qx/Y1e3iIeSp8STxXav/Kg//LfH/E
KhpufOf3zGVTwJimYIY5Lw3zNzYJhm5QgMu3vb5PNtFgvFeyx15cAaFmKSKa
MjSkyMinqikpgPzlYPxJJRqejKqAQ0cBSftdxTnUaeAv0Pr5AQqIXVxX16RJ
g/s2vZudNgoo2z+h1KFFw2Vewu+ykwKeDklk6jP8pZsinuSlgAVFoVB1DRp0
0qxfePkrQAOy+5pUaIij2GUREQpIW3mRZVmehs6/jpYiCQqo6B/GCikauO/t
YPp9TAGctrN9bzbS4BzuVfvitALEozeWX+CjoUhjd1BNsQJOBnS9dGejYeqT
v3z2dQWsUd8XLMtEg/qVkNHgWgWoP9ubsnaOimbRWDuVJwrYdFG0zn2IijWv
Etewv1RAHum8/uQTKuxy0pqnxhXwatMcV0MzFWPsOeoliwqoNO3aEFNMxYrF
a9wbZRRhbD0Z4MuYz43dJt8JNUUo5K9MKrOlQvvCy34fPUWIlcoGnDKiYpcV
69kbNEVk5Rz33CtMRecZbxmTcEVE/C552dxjg0x9If09HYqQujM0XKJlg03R
KTvv7FFCSmJrtcKEFXT+etZsuaGMwKDd4tNWFqDSmhPMapWxszxHnU3HAjvP
itF1W5RhZd3tqStpgSzd4UnhAWVcWLDrqPlljunAHUJvl5SxJtMvmlpujoJR
x+ggmgpKmg8rTPCYg7nF2uT4JxXs9pNdpzlJweMk7SftimqQG/ygUFVnAn2u
RytObFaD16anXW1XTHDljJfuDqjhalDTp8lcEyTeyCiacVRD5A6XE9sPMOq/
mAoRjFfD+x0ko5/KjPpKhQJ7B9XgF5Yuy3GRDJPphJurTdRR4RL8bHs+IJb1
cfHqF3UcS3vgVeVrhEavuKuV39WRp3fc9qONEdy1+Fzu/VRHXM7cnJ6GEQoG
9Gsfr9DA6Rxh7Y1/DCEocjR8hl8DGqf/Xv140hC8ZfLftQkNsAlXe9W0GmBV
665PTZkaWHK4MpBI0sfHhZHhfnVNtJeHtZ5200XN7swWax1NxEt0F2iZ6+Lw
oPHlJgNN2PNTS96r6oL/TmHAVXNNZLvNLqYz6cIkfMefaFdNlASp9YyU6CD/
x4CQdKomfAUVr2XPboblbPfWkBFNFF4yjqnJ1wafVwxp8p0m9l1OeTyXrI3h
HuVNrh80MbdditcqWBuhN9PHzeY00SbJpa9kqY3zgVYhQuxaUFp9jntoXgvz
n1szm3W0wLQct3V0mxZKPtzr4szQwsGjye/m5DSx/zRdau8pLag8zRKZ2qAJ
Xcr4obY8LUSsPJfzcaUmugrZVKIvamGqvoBNdlQDs3YumdO1Wph0Prhn9xkN
GN+Z39I6rgWphemdXFwaeJmo8SZKTxv6PyZupK9WB6dI6cy7d9oYmrp9xsxc
GXBKfDM+rY2UCUu3Z0rKCMn0ePT2izZe1TRtCuNRxgCzYOnoT21UBnYbsbxR
wrmJVPehdZthcpt/zDhMCao393Y/196MGGP9iPVliqCZql5rSdqM4MJXenek
GftKNNuZ+2mb8cw9hbKJQwE3b0+kNGdsxq6VTS9z5+SxXv68d2PeZrznbnF9
3C6PoXXcwnXlm1G5EP1cZ688/AdmU2/1bYZdp9bCYrUcju257VskrYPkYz1N
9S6y+IDrqeyKOijz/tE2bSILC8FLZeFqOnij0XxcRVkWKzqyv1D1dXCqrpVr
cVkGUdKh4Yt0HbQEVp8tvCQD3xHNFIdDOrhh2N7KtiANsuPNSyy9OpB0ernu
/VUpnFO+0hE4qIOE37b7W3Kk8Gdl0fSrIR2cPTLOWh0vhdrKTJVbjHM99zUp
97mLFFS5A2+7LenglRx55Qp2KWx6pNJWI6+LsF8qhuzBkpjHtXd+cbpIqbWf
srSRQH3Jx7MRSbp4x/R2X42+BBLWKG9JSdNFmV1prJaiBDh7yu9fPKULuZyN
/K5rJSDrcePccKkuxvOq9+7qFIdTzC3nrT26eDxTzEq1EsemsVmunf26eO/L
33pNTxxvKZodwa900fy6W1tYURz711Vtznyni095bUuS7OJIOVvN2/VTF6tu
sYS0nRUD9e+Phy+WdCGwN84sIEYMvDs3x0+uICHiSFi5hocYzinWzLBwkJBx
kdbFJSUGn4z5y3y8jPLoTzYKq8Sg+E3HXVKAhK5iqVH3SVHcvnvnMSFBQuCq
mlDRclEcFPmZaCtLwpFdtavYM0WBeJKBmxIJW3Z/iL0bIYrV7yO/7VMnoYaY
OOq8WxSPLe9ePbiZhGmbV+rJbqI4Wb7omaZPwpPPI2q9LqJw5tYXzCNIaBH9
JvV2hyhEQw8+vUwhIdhButl/pyjeDdal3LYi4Vvb5USRIFGUGfw2arUlgU/p
7NSteFEEnTeY691Cwro/eg0Tp0WhszK6fMyZBNel0xeiKkXxx7d+51c3EnhH
HFR1nomipeuP8F9vEtYWvnsx9l0UqapGvRx+JIx7XlYyFxaD7cmYtE0BJNzM
lP1Doohh/XwDlEJIeDA/s/5ksBheuSwv6EWQ0K60Q0ShWAxFDcYVltEkfHid
4vG8XwzKyU0ivikk1Dt955iVFMe3qb99oekkNOq7aq4mi+N/rxCJWSRc6eM8
tdtTHJT1938V5ZMQuhz6e6hYHGyRzJUV50n4PtZ75GWbOHpek/c0lpDQ0M0t
953xnud6sWXw9Q0S3gvOUHdslkCoZms1/wMSxJy/l4q9kICvtnjRiU4SnvN8
YO1aLQlnnej0dU9IWFiQ2ByrIwkDfW3vFS9J+CzA+/hrniRWmJRwfflCgqjJ
tGfMHilk2iftbRPWg8bY84/2OjI4vGXUEeJ60B8R3DN2QAYhjobkezJ6uC+y
J862UgZOLj8EbqnrwSZ21YP7GrLY5OXTVmCuB8+zw4vrDeRQFkQRDw3Rg7Lf
s1ruSAUUhBSxz0Toofui6I+mBwo4Hvpnfk+MHmqXFZe3cysiKLK62yNVD5qU
P9pu5YrQPSx9yOacHo40h/I8mlFCaybLgGSXHl6EXK7Uv6yKmhOe9wuf6sFw
7nNFBbMarpyqLxfs18P2Ge84HXc1pJ8OTeQc1cNG5nVyJhzqcDj/Tv3XnB72
L6z1JPWoY+RGa/ozCX28jWqfkwjRRM9nlk+acvrYS2no23RFE83KZtRsZX1Q
Kwa7qoY1UVTWtm6brj4iH1qZ1tO04H25/fgQVR8vroDPT0sbE4WdmZMR+rDw
WlCtF9XBwNCar5Yx+vDpvJZu7aGDjo1WdmUJ+rja2/TyRJEO4/x+yB1wXB/3
X/6+7yCji705XSe+FetDKzvOZkCXMU/HHp9a6tZHuESbXiuj3fCjdT/cnzPi
KR079PKpPp6w0bY2v9AHd+DmwociBriR2r0+cVwfh5ilpSj1BghKepKzZlEf
ykPJD96vNMKPQz2n+aQN8JgyNfericC7Ou6foQoGEMkcMZjlAPoX7ZwHVA2Q
qrWww9cQqIl4JnhGzwDKk0ksrxj3g8gDvWdE6QZIFDsrsM6djN97+84qHDRA
adt8weCyCbbquJ1QjTOAHSGsMahhinLmiRStJAMYX9JesWOXKdzzFoKNMgzw
t3476Ue3Ke63CVvaFxvAqYq878QlCo6Ie/2I7DLAp2+q6oWB5hj9OD0d89QA
9b1/hKKvmYN0J2Qkoc8A6Ts9vH5MmuMDLanr2LABzrlF19R4W4B2qLSo6JsB
hgWs9co8LME38JnaKWyI2FX8D7IireF/IdykW8wQx6rmGisbrdHq/1e3V9oQ
LkpXc5NX2SB8JY/UkKohHHI7F01zbPBSXXtxxsQQW5+Zetg1UHE+/eAlgX2G
uJt83ZtHgw4lMuuy7z1DDAqzHzzo4oCbZdfkXjQbMs4f71mD4w7QXm9nb9Vu
iOWrCdbJ9x1gOJlXovTMECenZndWK22B7XFFm68TjPiG7A9fWr0VIS9peVG8
Rujz+zX2ZtAR8ybf7n8QMMK2yl7/8vVOOFSe+3GHiBGOGXBx8js4ISluxNhY
3ghXvh1NaHrihFyZ4PcrjI3gaOh77/jTbbgbnK15bI8RGiaEghW/usD4Ncl1
ab8RSMcb9Yx1t6OF8iZ5f6gRZvTDR5nitqNLQPalXZwRylypbae5d2Co4U7c
hhwj2B/a/VbF0BVMbK8fn2s2gvTwbTb2GndYFEvsviVgjG7Dswf2iHpDO49T
tn2TMU5VBHwdsvaGeMbvd68kGC7dW1Ue4Y1fUf3eLMrG4Estvund643r9mnu
22CMts8azNrHdoKPedZxyc8YKz+teNHAswsjHs0Uqzpj3LzI7XvW1w+PHa+v
dG8yhgnfzwbj836otclvCWk1RqbQ7EGLF344qRuKgifGoJLqitNs9sCMS95w
5q0xkk86revT2YtrjZlaOewEPgSO3UkR90eEiIfkmCuBOKZynjGxIHjbqTsN
eRHQvl3r3ksOgm0i89FBXwJuJ4S2ftsZBNnpi7PdQQSekLdaNlwJQl/1VHNd
EoGPXBu6IrWDoU4N8cguZ/RXPhdmszUEUweTCyz+EPhlEWzeWRkK5U+O7IM0
4JhIqNDDR1Go3UptOmoHbCUSMuiLUTBtMDlgvAWYj93HNiJ7ENsz1F5fcgZu
yUe850s4iDT1tddCdwKT/EPZFaRDmAitt+aNApaYq5p2XYpG0ZLkUVoJ8Gl1
VfVkcByUfYWMmUuBDv4bc6WFcbjzhOtb9VXAglLcbPwwDk/O/3HZVAGYG1AP
/OA6jCXygMLHu8C0ssJ87K7D2J6S9jD1KSAafzzThj0efFxf17T+AqrL6W7B
BgnobTh6xGoJeH6pfbHXJgEn/WVWP/3LeI94yP9orWsCeLu2r3zFQkb0Fzna
j0MMJ7ctzXCS4ZeQmXP1LqO9lmd0GA8Zi6Yp1y50Mtq//fXrFx8Za/4mnd4z
mAAeqP9cJURGX/K2ON8fCeD+nf9toxQZ3H3R+1cqJ6Ln6ubgCzJkWHuMrN+j
l4gs554ZWXky4pVby8+YJ4KrZtVnDRUyNguVwMUzEZzBQZMWumTQz0t1mpxI
xBMxdt9uPTIkPrK6fS1IRMaTS+8cDMngO95T4HMlERzKr8fcyGTYLDznP9+Y
iHWTZkMHbMhQcHrwhjaViMc5o9sXaWRY5Jm9lfyWiGOUQy9j7ci46BDcU/c7
EezFNwfSHMk4XKTfo8GZhC47G0cuZzL0PvFu4BZIwtG/759nbyfjsjhbWYVY
EtjcNj4770GGWVy0moY6oz57DV3Gm4wpqbEAXhKjfp3dkzIfMnjkvU5XEUlY
K5jy6PYexvgePRalbZuENc+/tj06QIZnYa+IvF8SOuPTKfbhZHDszN7PtD8J
qeqyDwYiyfhcIBCZeyAJrBk7msdiyMitlvz2KyYJ7YbzxrsPk7G2ho35YUIS
Uj5mNXxKIGM5JHTV1iNJWG3VXrdwhBF/d4hyUSaj/oKnXsxRMnSGKMuepxj1
L/++s+I4o/0RJbXh3CSYO+bqpGYy5tsmv0wgPwmrWDRuc5xklJeyuHIUJqG1
8pHWqWwySgWGVZvOJyHJy7dS8DTjXBHO51QpTgKFm1nj3BkyGlTLJ5xKksDS
dLZCqoCM8ZneYsPLSXhlSLEcOUfGiZpTksulSaio+zSaf4GM92JsRYFXGf2R
cqKcSsggK6rKnChLwvYaI17eUjJY+xbueV9Lgrr2RFn3VTKyN3rsf8fw6soM
07RyMmz/7jDnL0/CkJruEKWCjJMxE7SfjPJb10dCmSrJWBWoevIowylKqRz1
1WSkpcrrdjP6d72qfjniDhmio6f2NjOeryn30lirjgzvn6TtPlcY83MpfvBL
PWO9bxnVusuIf1hSMaisiYzEMAeZJkZ+VUW9a3xbyCga2eYazsg/VfTQBYk2
Muw3Oq4eYYyPe4GU/psORr4CSw6LBUnQFn7cm9dFRpVFfmbbGcZ6yAvdt7Wb
jBVe4KYwxn94gwgLdw8ZrYIrFcJOJqH6VFvBo17GeEjPq7hkMNYTz/7NR/rJ
eEBSOfA1LQmemfxPTF6QcYq9nmqQnAT29N1/774hw/S+Gsfng0kYXcOdFzZK
hgORV7g1LAk1KbXqGuNkTC5NKQQHJsE7Ya33lSkyY//5LPLIOwm1Uddac7+T
sX9l6TMu8yRkLGxxc5gnw+VVcYGycRJ2hv2Z41gko8VrTHuFThLj/0mTS15m
rM/FXeMvpZOwy28m7cBaE3zcY7+S+jcR+hOnJdXWmaDls7w9MZcIbh/c+8Bp
Avaj3NJfPySi3uPEJ6/1JiiaIbUd608E7zYtup2YCZIfj+1oLU3EVN/rSXZJ
E5TJv/l7+2wiGhySDndImyBMrfDY3sxE+Nn23zJWNEEgmaYlFp6IRrOI9Sqb
TSCCJw+6kIh92vderrUxgYW//smBRwlo7ukvr6WZYFqhRu9MfQI2BHyN221n
Aj5/0W7l6wlouiQj2+Zogm3yJn0PjyeATyAr5LCnCTYr1CjNUhNwb9GHfSHM
BLLqDbUlD+LB3sRp9K7IBGONtH7FvMO4ZuVd1Dhvgq6048Z3uKOhrSxhTCya
oGfb9GzO9CE0co6+bvrNyKfm5/cDLYfQ89xN4D6TKVYra97SCD2EH24uGQ/Y
THFUwXbtk8GDMA6xi+4UNYX9xQQRy6Io9OQbO/eam6I5S+BljUEEXGKW5hys
TIGRzhsb+CPw1qP+1HMbU3w+xfMn/Ws4fkjrP+2zM4W/c477/UvhEKrYbD64
3RTOxV/EPXjC4f1AWXtovymoysUP+j6HYu6jMPdEril2VrC9LG8MQXbhZEfB
GVN4CX2cWpsfAi16ddyWAlO8yDsocDIsBMGVtJnmC6ZYI+eqL6MSgs+Rh5+c
LTeFOvcrQ49zwXi/auKYfYspCk5nUF3SgtAvdmttw2dT9ChLPnRaFYDQZzH3
D3w1hcaMY2Flhz/4Eq2jFL+bgj34yL7Ao/6wnxifOv3TFKlP7/xg5/FHdzl/
Z8hKCk7uOqjYI7kPbXrRKfJCFKQcS+iKcd6D21ssVmZTKJDyOjSeyu6LVJva
5E0WFHjqfeOXerMLrqYKay5ZUeDehTaOil1YocXOUWNLQekPjhPPt+yCLe9T
/hfOFJRFrR4SuuCDqR4nxU0BFDQ67zN2st6Je50d5SWBFFxy3ln4QnwnMppJ
aiohFBxO+cBZusC4T90U1jaOoOBdfPG87GVvxGcOG3nGU8CuLSNVttobwra+
9iU5FBRLR5w90O+Jz2aDz5XzKPBWmcnMuumJZiNLp9v5FOSs0rX/ke4JXxXF
He3nKZj6vuVJhqknqtZ98Zm6SkHtB9k4dn8PUB+FRSo3UjAeFPnbie6GOMvk
89UTFDgmiDofD3dBr7ufq/o0I5/g1YLaxi6QDrMRKv9IgVH5wQjqahd0XeA5
dfErBSPLt3SfnnbG+t+FKSd/UeCs/v3Q2uZtuHK9JiCI0wxeuwL070g74deD
M4qfuM1QNXr1g/R3R9BeRU/u5jND394bmov3HfFttamXh6AZNhVxd/V6OsLQ
8+lWW0kzTHo6Sute3Ioe3ikDZR0zOD/KL1bX3wJJhUc/S0lmGOCwPnqHcwvC
iBu3pQzMUGtt7pc/7gBh/1C1jTCD704en+AMB/i0MUmxWZthyWa3oMOUPX5G
CLFNuZlBb35t1pZyO0i8sX5xMdkMr/UOSUm/peJoi0GFY6oZeLTWyinmU/Gt
VDmFNd0MvBd5dV47UNESwqm9L8sMzJmCjaR2G/is6c3UPGuG6yphe+9WW+OK
lovF/ZuM+FqMO/MrLMEtZC16oMoMWvwlvmXBloha1p+TrjHDnfkwD7q2Jawf
brqYes8MbBWvdLbes8BH99FlersZfsmzbpfpMYfq0d01w6/NoODyMe0xY9xy
A52PZw2bYc1Oifn8YQr+brXyMRkzg5oWn/5Hxjz3iCnxXp4wQ3Pu/M11JhQE
3/4SEDBrhuJDWzS0Ik1RPRom82e1OVZvuKXL95sMfd2kbCFNc+ycqD05WmqM
AW8hnUJtc5S9fnuH2cMYBzJuDIrrmoPdoZb5Mb8xyt+/EJY3NMex6/7iTqlG
EM1WuaBjbg5rEwdvgQOGWDE7cH3LdnOwTPsbCfjq49wmf/qgqzl8xIyXxBnv
3QaWzLPbPcwRPP6wp2FKD6HnlbS9fRjlxzV2XgvQwwTtcF3QfnPIf5W4rhlL
wqMyhY7jCebYMcZ26H2tDvwGGv14ks3xzM1tLj1BBywrtrLlHDGHWqAFTyVV
B8YusbSCY+Z4Onn2WeTbzbjJ+vx5Wa45YlnrSL18m5HtEz3aUWaOsInrSy3H
tOAq+nSR+bk5mMT+FMX3qINTKOT2vX5zvHN7O1lboo77fBuCw14wxkfQtMsz
Sh2ya3dMTb0xx2w189KSlDpmvk8MPJ0yR9bK1KZzf1SR8HC5qnDZHB9vjjR0
HFOGduuFwG3MFsi/NTlpbaKMyUaKEg+LBb6RokwyfiqBWn20OGmtBW4uJ4rZ
7lbChvP8J/att4CqDCknlqaIK6Gq+/UULdBrIPaEy0Ae2wOfKXxXtkD4ZdXh
+t9y4Ngb+r5czQLMB/JecTTIIcSjzlV8swX6HyaSc8hyMLA2t2GFBU48EdzN
4SDLuA+7y/c7WoBdrHrOMlMac13H3wbFW8ClKW1yNkgCQ+z9fn8SLfCmX63e
xFwCLdRNM0dSLKCx5i3990YJZD0p+30u3QLX7gSnn+8Uh2Jvx/ruHAscCtGe
OSMrDveXzBYKZRZYMg3hEpsWAUXYqru63ALb+YxLXpwXgdKOrC2osEDwPh8m
s20i+Dkk6rmt2gI75gcM1Do34eSoQVRyowUKdWd+CVVuRPtk2LWxXkb53VUf
ekuEUC7foBHQb4GyLbyts7uEcGoPS+3PQQvkri4QKpMTgufHk61cbyzgpCVS
NFYuiF9fKt4YTVrgAXf2IqVRAGrz01z5vy1QsbAxoPj3BuSxuIc6SFviUtnV
L3cHebG8U2DzM1lLNA+fJLmX8cLnQc8cXcGScc7PqgXG8EI9wTSCpmqJz/fg
8lyaF51/5Q9akixRcvvgXFokDxZ+fY8zplrCx5Sd/lqTG67br6PB1hKCmx/S
X7Bzo+WuL7OhvSVazr6N29XFhYzIlwl6TpYIlobDogYXZOcbk7U9LWFvN7qn
YC0nnGbT0hVDLeGprde65yU76u1MqVfDLaH8izpul8sOyZt/1slHWaKD56bu
yy3s+LI/MEMm1hJtJ0/8ae9hQ/KnrSfEUxn95VVZfn62FtWTYqf5Cyxx9mmm
svZXVvAN3y5e0WoJZramVq1TLMhYFxNzp90SL8V3vNzlxgI2A4qz/0NLGG2w
zJeWZ8GKvF6OgSeW+NRedMOkaSW+2c9EXn1piZXnJJlef1+BnjZ5ut2MJVYU
8BrZhDGD+mNGYdU3S1iqKF4vsWBGp+QdlrofliBcH/wNFWZGU5xZndQvRnwP
Vr8Kvc+EG3reMgssVljVqKHzdD0TY585+7tQ2Ao4viVNpGiJWDPkPeAgYgVd
1y1a5x2WiCQ2xVus4lYotzwo8WnVEnFod61vsIwVzOtrD4/s/0Psleh/RlG3
QuCQk+U3q9+EZQ7nlY9mVngczjm5ILlIrIqJ36oXbAVW2h3N7VvmiOrZT4tN
B6wQUfbQxEJsjvDxdT5vHm6F+BenXt/++INopat92HLICvdCa79ypvwgkiTf
xO1PtkLhXo5Tac3fCZZO0rWLZ6zwNcfCO9DmG1FtWGKnWGAFHnO7F/dFvxE+
t7jmb56zwtpYvZLD32aJ1vwJNF60wp5EaRpxdpZIDMgeeHHdClf6C+mXZr8S
K/i+MnO2WIEtKl08xHuGqDyyozS71QqbP07J3N0wQ3j/aadu7LBC927mQ/ce
fiFa3heeln9shTyRHQqftL4QCbU2KqYDVljzMFyhj/szwexe6hz5wQrSrqSq
bR8/EExX3Sve8lrjbNo7eS2BSaL90+D+8xussYur5ybfqwnimLq9qqugNVIJ
x7TswglCoNb0er+INfSSDZ8Hyk4Qqh3y1zrlrSGhMG4RSLwnXN9/u3zD2Bo7
Vt57bXl8nJBU8PfdR7bG71X8pYku48SU/3sZeYo1PH65j1jIjhMHfgyWXLCy
BnHGt9X3/lvi6MqG4uyt1mDp+3u+f2mMuCtx5NzBvdYwjarcYZkxSsTuYnLX
DbDGbv/PZge8RwnK1SiRH4HWSFZ6P8CjO0r0qPsXBIRZI1bVeNn8wQgxRdjn
ex62xoO50xllEcMEv/vGXPNcaxS9HvIJXTNEhORXHOdtscZMyjm6/b1B4s6f
/CMtrdZQe/OYSIgZJP64p8SHdFgjQCVf3AmDxBEpt7Dex9bousdTPdExQBSU
s7mdHLTG+sil0PzhfqKtcZcy72drDJ14vyNSvo9gk7CXbZmxZtyPB+7o/HhO
2CUaiod8s8ZVyjhrTPNz4pUF3/reBWs8vlhoc2b7c+JLT/PvEytssP5pY99A
di8hOL7xEY+gDRqPKQT+EXtGuJmxtt0XtgF9+yb2qO89RHHpt8ZgERu8YJ3+
uaejh1D2f1j5TNIGbanz7ReDegjyXHj+CRUbSJ/2UL2S9ZTYy9q7h8fUBtoU
ntsiAt1Eg1LqGp79NhB9n1pUW91J6PQJdJ8MsoFXPKd5V2QncTO69MT6AzYI
+TQqEWDUSRR3twsLRtqApJm0ybOzg0gNXKUilmCDlAz/2Cfv2gmHqgR7lVwb
CN47PvlGp414tIOXvyLPBjMR9yr9VrYRFJbiV+pnGeXechLBPa2EruP9ndpF
NuA/Sro1t6+V2LTwN8ygjBH/vTviV688ICb1Y/KtGm3gpj9hl6PbQniOr/N4
1GyD95VXN3qwtxCv0gukaA8Y+Qg1z+eM3CceD90rt+u0wasjW3gs0u4TlbG/
Grf12uDUxU76mbFmIrolYnzXhA2UhPk8pKybCB7rEOUETiqau0qfjIzUEUX3
udj1eRj3PKI3XONMHaGud316lo+K7WQmR+0tdYSt/NRlLyEq8meOc7g8vEsc
Xe0uQZamQj/pHYtcYy3B8sCKn0mfCqUvN8KUO2uIU/qTP+4YMuor9S7aH6sh
JCuTngcSVMRK1D/cYF9D4EJT1giFCi/9lVVBQ7eJmLjN7E10Knbr64Yb/6om
5g0kmGJ3UXHF9O+GLLsqIrmqcXizHxWtEeq2NSJVxHol14bPe6nIK2LSdPtY
SWgJnz7oFkQFl/9Skn5qJRH0c92c4SEqBBvUMgU6bxHT1T+nf2dR4bQ+65uc
x01iSKXneVQ9FUHL7I+5Wq4R5z/yxKxsYozHfFpPZ8w1wvvqFtnj96nIyrv2
XVb/GjEtPRhZ1E6F6zyte6i6jJjfOCzS0UMFq/3L/cyVVwketk+717+n4kZn
t37Lw1Kir0OF59wkFU0SX/rcMkuJvOTAOrkPVAR0ksWPOpYSoszf1xnMMJ53
6LJVxvhlQvnn4i2vRSrU37p5Cay+TJhPsP65wUFD7pxFaPPOEmJtidUlEjcN
ke1trCUaJcRjr3TbFl4ang6yWC3/vUhsecN5oV+AhgKbynfc5y4Snn0bzP9I
0JB9WjUod6SYONQilWWlQ4Nf9uV9YREXiJvnCOl37jTEtmSpKn0oJL4f/M7q
5UXD/Se6hzsvFBI620o/vtnJeL5crYDg9kLiHhdX1aAfDdevG6HzcQHRfniY
/CiEBuoJxUzTurPEa+8Yj8oUGj6Eq1W6V58hRAkNU7U0GjwvNQXuCT9DeG58
L1ueTsPrJ4fcWPTOEBPPqV8uZTHa88VbTjblEV8pm2LO5NNwZs9yv2XfaWK1
3L38wzdo4Iurz6vhzyWsVgbGLt2kQSJS2HDHWA5xbETS+2AVDb2BnewJ5TkE
T95RhdBaGmN/F6lwoOQQm9Zur93dQkOR6ofYyahsQvPjz37bARqCZlg5Nv45
SbhV6PCILNNwJLLo+n6nLKJm+0/OHiZbhGXGNVGUswjO1XXrElfaYryqyiVt
RRbR7Gq0ZnqNLdrfdwZWeWYSkmyUv9V8tmAZfCbxVSKDmPCx/0xVsMVSCceD
XV3phDE338e/SrY433p29EVCOnH6Xt9UpaotAveL5qwyTCcseZ3fCWrb4vWf
U+8Sbh4lyprcX78ztsV+C5M1Ty+kEfuF/R9Gb7XFl7KGuvqLR4j2NpUOtW22
SK5s0WnyPUKIBc+0vnWxRXXV6p5tikeIno6QZksPW6wmhg+ZVKUQmmFRd9bv
tcUTH8urTY+SiYWnKZfK42zh6N/pNLshiTicfCF+qMwWV7MLQWaNJzgiWK29
rttCJTjjhvSbw0S+XwDvRIUtTHcIrfKtOkxU2ehdnKm2BW4ItS57HiYmeJ61
rmiyxQOHDe/fHI4jbM4xrVF4zujv2P0bv0RjiBeZvj3X+20xKZFGudgfTfjE
P87TfGGL0oTd/h+ORROxPnkKhm9s4W+wa85s6RBxU1Hdhj7JyNdrdLftu4ME
/x2PjLDftli49CjT/VEkcfFKm9OvJVvYGhoGnTsaSajnK4nFMdHBUZM1v8s6
krCKWahIXUVHrPMm5eOPIoho08xnZ7nosI4iGih94cTbp43rW6ToCFNrTC/4
G0oE3pd+Yy5Lx9MjIyaHOkKJP5VHLz2Sp0N9oDl6IjOU2JDrpNOvQkeNy6+K
nZKhhKXrl21TunSs3NSVy2x7gLg+JXKWk0pHzsn3UVzNwURqYbLnsC0dde6P
nvmmBxM+Dp9lbtjTcfY2zfXAtmBiU339Tdo2Oq7589Zdnw0ijmbuaD/mTUfA
MEtglWoQ4Ut5kO66i459jYE+h/8GEiaLivbKfnRoRNXysV8MJBa9f71+FEAH
+VO7bcSX/YSfzplZtig6IpKujrfkBhCUj0x3Xh2iw3jdglsMJYAQK/KLLoul
48vXntaK7/7EwFoSq3USHT7Fy3fjnPwJszcDm9IyGfFmitaPquwjJJPWW7Je
pkP18oc7lxf9iGVSNMfgFTrmn3tw0Kv9iJefx3svX6Pj4htqiXWgH5G1rcrN
/BYdHrRPabYTu4m/ig4HkuvpoIg+e83x0pcYepZ5buVzOjYk1gxk9vsQtSkL
O5/306G3fLmz5LQPkW3goXDxBR0JUSkPnbf7EDaXVKtNhumo0Av6eHNsJ1EX
2f0wfpqOCx5x2y7/9CZyVTZn2n+iI3VHpB+p2ZsIfluwVWKGjufTGwMzU70J
ear/SPMPOjxTmu3Ob/QmWJj7SrIW6FCJCrrkNeFFjN422Ov5iw6vDvnx37e8
iPq9F9XUl+gwHW9uD4n1Ik6Lsc/9/UuHPMHN8cjGi/gfPN6MQQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80553#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
/y/8HwVWn4k=
          "]]}, Annotation[#, "Charting`Private`Tag$80553#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
e3Mlz0MVnDWMD7nLGAo3JaGcs60qYEnw7hFfCIEdJSKR7bkKhtMPu8R+DoG6
mtL+Fa9U4Lw5hp69JwQrtPM4v3xRQXmXV0lQTgiSLY97PtqoCq8/1pfFqSEo
9tURCvRf9uytGw5ORzBU2pzYuUUND8wuvLhUFITfnj0ZUmHqOOhZePumvj+2
ajH9dbuvgQGel8aTwoehf22L+60NmtCWCKHV2btD6RKH+ONNmqD3v0wL1naH
0JnfH15v0US48GypqrQ7FkJ79zPIaELqW9624V9uuGl50nEXNDE9NJZWetkN
a+mnbf94aIJ9068Q9zcHMOTUoGN4TxOGks5t391dcUTASfjdXoJq1r7vb4r2
Yb+F/M6BfQTXF40Y9C/sg1ks/al+N4JPQ4tPG47tg/hk7nS7L8HTGZI7vGsf
eionGu4dJ+iSdbzZxbgP8ib+Tqk3CLxtkjoS3J0xERaXqb9IQB3D4U8ejvi4
c6vHVTrgyoLJobM0x+X/+toVgiuBQcEVzTs3O8JYZFR5IzMQ0ONcRXocIHzy
RBYXN6AdzZiSqOWADptnXn/EAIugY2c4hfdCZsqWtd8UELc5dn50YTdqbEwe
nLIA1DPe6d7s2w1anXaApjVwhoXFJv32btifkXuTbwd8KB31++C5GyflV5cE
ugCx0juoKm/tMBZYa8S9vIxSMpIEX7fuQs4f4VOmeYCYsZH48/u2kHHj06Qv
AHpd6RiUMm1x5znn98oi4LfzSbH6CFs8z17cvakMcD0t9U1T0xZ/tPqkPt0F
BM+qtn5rsoF9/MknCS8AkQ3mhYzd1ljL+Y25eQFQ6ujfdpTdCl11p04Y/gGS
1p7T3vjDEue8xBhfLAF77ksOd7+2BPdT+5WvGbQgZh3jl1247LhHf75yaGEs
2X1Nmq4luH6nf+cX0YJ2jLz6t+MWYBvXHQgw1sJQXq9ShoIZnl0Ytv9lqoU9
6qNan1aZIUkn/NVRCy0wrhTx9HttCtZr5X0nbbVQdsnWWfC4KVgc+DuznZbj
L7XL/3llAubub4/aArSwkM0qnpFsDIYHGWUimVqw90uxkNliiNcaOgZDV7QQ
rl3k9vynAcruTQ2nX9VCySXplKIOA9hX7+DmLtBCsAOXMku0AW7dHAqku60F
eVZWr8Mf9OGYKaL2tkULFZbqb5Or9FATWtKcNqMFdgnZ8uwoHZyZt3awmtNC
Ka2jfMZBBy5Bi7Psv7QgeYc/IVRDBxx+phJxf7Xg4n6zl2+BhgMeX08GrNZG
onlF0fUjNHDvUjS3ENTGqqyNVg/CtXFI6f6r1cba8NWmu+B6HWjo6L1RY6oN
kTnpNqZEYL33tyh3C22YcO8z6fEBHuSLiT+y1QbTQfN9E6rA2g0p/sectTF9
vcDhSzbB/V+urPNB2qiPs5BkZNIE6wOOHR9ytDFVN9f2g10dznukuM7naiM/
RLinbVgNVfO091rXl+PHZnNMVqjBST70ZHbJcvna5PEf9mqouPq+175aG6M5
m9YY3FDFnuM1hzvbtMGS7SR6ao8KSgz359TPacN835kU5o/KUJLZokl+aePB
xejjgS3KqOcYfvPgtzZmXrgtrM1XRke3w4ZGOhqUqT72U87K+OGw+8xDFhoK
Q819f79Wgqa/RUTrZhqKvUw273qpiI50TbsuPRrKEnJFMKeA3ZF/Zq0MaQi4
N30285UCRpxqz3cb0xDXVXtUtE4BP0TVXvRY0HDvY8RQ1XEF8JUp6/Xb0zD/
Joj95XoF7H8oozRwmIYhD7vuUSKP2U8bucbSaIjqeslj6LINqVnjLZmXabgR
PJXBJL8NiuaVUdaZNNzUM+nmXz4H+t02/dpwdbn8Rvn9tEsy+Bxy7HnGDRqa
XPS0oru2YnTVWJJlEw2+nJksRjul0St4a3XdZxpqL913KbgogcDOyMaAb8vx
V2+13npYAmtjjUKlZ2g4cufAi1kdCViOvZ+4+JOGi2d2lO2dEUf7DZ5W/5U6
GDwd0X3AWhyPVCPiJfl0cJFfkYdBSAxV1vorU3V0kLjo2HJ5QhgJxjVxm/R1
MNM0HGf3RBh7aVLM+YY62JCtF2pYLIwViqzs1WY6GK0orGvwEoYZ9wuel3bL
72289pHFmS2Y6NgpvclbB0mFZxoPsm7BRjM3y7wLOvDvYegwr9mMz7r93TKX
dLC2Q6NcK24zGnYY7KxK14HcF12/eKvNcNsmvedxtg56lvrSGb8IoILti+tE
0XK8MJ2ybkkBmLQFhcjU6yzvq9rYt9/kR5RBXHblmA7OMhyQaPzMiy5Hj73y
kzpg6n5S/qOZF6JBxnw3PumAXfBx5cFMXjy9uuZ87jcdnK++GMxjwot1v7Pi
zy3o4J17Brtv6QYU3qz29uXQxenW8I8vjvKgg3tCXYaiC+XPBfNFxuuW96lt
PwtUdEE/y2liJb0OQaS0SkRdF+EHECa/eh02egXK8UMXV1Jk155uWQvXR3Qi
LEa6mDx6g75eby1+HuFjmXDQxWuLsfXVZtzY8tboZW6cLkQS9U2/xHDhVJN6
mW2CLmzObjl88AAXvhfIxDMl6oLrnUAirwEXmvw5lA6l6OLNifmkNRxccGXu
St6eoQuGup+tT1Q4Uai4W7+xXBd50Zb0CcfZIXvKvXrwjS7+MKxkF9nHgjQf
u9Mpg7roLGVV61JgwZKNoav2O12Y7Ijv7V7Bgg7BrdzXx3QRy9y563n+avhV
ffH2ntbF7V11J3O+MqNyOEhskVEPsbKs/sLnmKBGPZ7Kt10PkQxvQpM4V6Fv
Px8lS0kPd05UcGhPMSDgTGm/EFUPz1avH1J4woAboy83SmroQYvZTbQ+lgGb
U7ddpejpIXTgw2DY75VYMd1309peD41Xt1/Rml2BtmKpltMxetj0oztTiose
Hn31Hmvi9BBOb8cVOUMHhhU2LBdO6GGQs2sVXT8dNHcfNc1M0sMos8bJ1Ct0
KGfq7i5O08PQjH3FVzk6pLpGDLcU6yEz9w2bTfVfsnfzi1/03XpgOaTRIZv7
m3Dw+Vfd79XD1aH2xce+v0nj2vV+QS/1YEnoau9p/ibiq/dMTLzVw7YnCuT2
mwXydWas78WEHn7qyAY851sgMU/+VmT91YPcAfYDotd/ksJA2cOq0vrQtkt9
yvN7ltj7dErNyOijONWkbaprlrB7Bo7ekNPHC5rpBGvJLPF3urdXSFkffLYj
ISJ7Z4m6kZ4xE/ThXhdAV9z4gzwXdJTstdVHZcD86vzLM2T26ekR32h9KFw8
Z9sROk0GWHs9FmP18fd2MMvMnmnSZLLp64l4fWxgM8o30JwmKc+Lf19J1Mes
vapR4sppIt3Vsq79gj4GS9OiDqR8I46v6PWlivXRfWYvj5nbV/J4PKjkXZc+
vm4vVKAqT5EbknUK3r36CNGoVV1kmCLnDzLU/Oxfbp9V5NTa3k/E+dO5Zs63
+rBUOfqREvyJLHwpe7tjXB8tyVHzWrUfidzcJGf6b318l7KpmNk5SS4xOAZa
iRqgS2gkYfPDMfLXZYNyp7gBBh5csPqSOUZcH3bMmksZgPlQ2+yf4DEiH0M7
YiprgD2OLGpvto6R1iXJMAMVA2ismu2KuTRK5hdmojRNDPCnyodTLvID2Tl9
MlE60ADNpdXv4TdCai1oJkXBBjio83bEyGqECJcvskmGGqD8hHZqguII+XLY
54zYUQMULQx1Zs29I3FTNmeFEgywoo1xvUTUO1I5LniRJ9MAFa9X5fhcHiZr
B6uurWg2gCrHnRynd2/JGbbIyDuPDWAnv1V3uvgtYVHXsfN6YoC7I6eNRgPf
khWXutj7nhsgocad7vvqt+S75deQolcGOO/h2ZWkMkA6HkmaW3w1ABm4MLSj
4DVJupnxO2ujId71tAhoPO4nzAP7+6wEDLE699f98fR+cpxF+haTkCEY3Wza
3vn0k3D3Gjc/MUO89Hph+mBjP/Hc0tupI2+IU59HrbkD+4jBBY7CT7qG2KY+
8aNEqZesioy2UfUzxPdVg2xGH7tI5fTUrwcBhph+Eie0+WkXcXWzy9YLNoR6
WzydVHEXaTaX+2gdbghZ27uC7zy7yHHht1GH4wwRdtj0ceeXTsLQqlKSe9kQ
ieG2G73pOsmKtd/oOZqW+2fKuPlKynNy+8SegtRmQyTPvdS8sfc52b/42IS/
Zbm9ttK/3FLPSdNo1kXJZ4ZYKG14Nt7UTmJqjLfR+gxh4CdpkbbwjNA7FtiF
fFyOlzYsKhfaRuiKHMtGuI1gOuxdI1LeSh5P9R/OXm8Eb2l5geSYVpIkbym7
l9cIVub5V81tW8mGGtrNXgEjTDlM/mn/3UJkWyRLWiWNML6Yc+uWSQvZO/r9
eqmmEWwfZsoF/3lE7m45cSXM0wiu575TeNIekqMH6Byp3svllZJEPvs9JDpF
oQI/fIwQsBQ+v8rsIemQ98r0DjLCEzZH2z+MD8kEsUx3PmaExtAXEysimgiP
I3+aXpoR+FWrejr8Gol/etlp7iYj3JzauW+B+wG5s5h+oqnZCJuPOLcWvK4n
i47x0f4tRjjyQS645lo9OSHiENT1zAi97kLXVyrVk8wbLA7n+o1wcY3BLq09
deRR/QEZ7s9GENtoLTh7/z7hfc/ftobXGO6H6poCG2uIgy7To8aNxmiRGmCp
Tq0h1wq+1/sJGKNt2pjP2KOGyHg9ud0pbIyV9DkN3lw1RGs2OP3sNmPMteXW
RbveIZ5MXQfX0Izx+Zz7BQP+alK3NYF5zWFjvH9lPOhfX0EoPRvaz/kaY0PI
TWdKVgUpjyg4uy7AGPwC1wLkIirItfbHG3lDjJHnOcncoFZBEnxWbROMMUZv
ur+Q8b3bxKoixnJbmjHUUhtSJppukXG1yHTDemNom/MUHvxRRpzfszm1NRjj
2dCMT0x9GXmdmCli+tAYyakHBuYSysizgfs3LFqNoagY8/Tr5jJy++hC/a6u
5fHXrubiMC8lEU1H3h8YM8apxqz3ex/cIGuM/GViOEyQX0BtMXhTRHIaOVnV
1pggN7rI+GlJEZFXvTk5vdYEAll/gvIiioiZ5MT1fXwmaE/mtnAWLCKnGB23
aImagP5xlPCoRyFheGjIQ6dmAp6TH49nsBaQOfUtdEcPmOAR40bXyMQ8EldR
P6jsYYLXG25tHD+QR9Zt3Vv32dMEVaXWa9OQRxQ3Xgxz8DXBaPMOx8a5XOL7
k21WI9wE47PKLhpuuWSy8ufk7xQTNEaqHtawvEYGtnV0h9aaQIHm5brDOodk
f1oTufLBcvxWJn4Zag7ZX2QtfrrRBHde37cw4s8hk6L9ITmPTVAtJ5Eu1ZpN
5vgHBVo6TDBvzSNe//UKWcMy5b5u1AQrXY7NWFtkEb0xpsVSdlOkXxtTn7dO
J6vzDPNVuEzxW+Cs5yfxdPJsX6JZE7cpGKi8PDILl4n1W46rvRtMwdaQG5x8
9TJx7lmvt7jFFJsGZGObZy6R8CaRFEOKKYJ543ku5l8k5VeI6AdHU2Q1tORX
aVwgM2EzTPv2mcLuF0MOI98FQtlV8OmtiyluiNdLps6mkvucnBX9HqbY5pQ3
6lqWSh4fG9Rq8zfFRK5C2AuxVPJmf6TT7XhT8K+aiKAInCeMEvfTj5Wa4mQk
C4OA0lliuNLn6J9yU+zf8eEvZcNZkjQkvD+swhT3W58lRy+kkDWXTkkF1phi
SetpQGFjCtm02r7GvckUyVuP1G63SiHbP/3sNeszRaFTSrHv3BniUEZZI/DX
FNXJipXTLxNJtf1Pjg46M5C/btLv8hMJB+M9ttiVZnj7pjlte0Aiadi7g3mS
2Qxz75csf3MkEmEWnaXKtWawkAywEjU+RcZcLT+bSJnhzCFVD53eBHJ4o9eT
CBsz1JcEij8XiSePH21rkdu1fO71WXpO/R1HBP2+No/sNkPWTd+Rqa440tHi
32DgZIYnlxiNVGPjyPag0DvrPM3AtJVu057x42T+RXz+jSgzsBDptqa6WHIs
7mr0QLEZVtRFRqzOiCbsR5iM9t00Q97RN7TpiGiS7uHNPVZmhpMzVYmsTtGk
wlg192ulGUTnhzP7RaLJ2JrO5hUPzOB+gPNRe9kxYnyFjlmq2wy3azN2u16L
Ijx3nM4E/TbDLroLgmWHI0hu4aOdC3/M8EXKKJJFM4LIp28VjKIzx14vq1Xl
7BHEMHK+LGGVOZ6o7019dTOcRNCSOzM4zZf397al16fDyMiL+nVNIuaQ0HzT
KXkilNycEMjgMDFHkKVa/7PJYJKQFec8aGaO9RPq6wfrgomr1WexUktzJHlf
rDc+F0w21daWm+5arq+711pDI5icSt7zOGm/OZQkBOL8U4OIB+XyNEuoOdZU
h69W3BlIhI+vM2C6bo4y609Hqev9yV+VCPb+QnPEFfBNfPjuR159ft91vcQc
TEdKOxo7/EjKrgoHvVvmGEpgFWI57UeWpK0C4mrNIeQvc1Ca2Y8MdCZfWdlt
jpulHzQiV/uSmvh5l+5ec6xoIAX7e31IqrqTVO5Lc7TyRn3FJR9inC9bqT1o
jkKlQxedBH3IvZD2J9GT5rh9uogmrHiYpG1TTracMsdLdn4b1V/exG8k02bL
V3P411SIP37gTSRNvIYafpijOMmeW8vMmzDQ9+SlzJvDoNpjqxyPNxmuUvd0
XjCHLssVxvODXqTWM1dO/o85riQs5HoVeJGLgqyzS0vmOKhwdGWtrxf5H++i
rPU=
          "]]}, Annotation[#, "Charting`Private`Tag$80553#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
jXCMJv8Hz3S4rA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80553#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
suvaN+rYNHDpcrKiONZSCjm+flWHgbcDm+YsGYv6DH+8FtXB9PAoh/4bMiYN
D0y9X1aHmJgT37PnZDw35ql9w6iBwaXJmV23yUizPuXTLKABxrNfGjcG0PvY
3eN22KmBRxdTd7K6kRFkp61XTdKApm+3xYU9ZOzZt7j1voIGIuT+DZkSZBjt
t1ono6qBe+c+c0Yqk6HheOfrDS0NfKM+e64tRYaQi3tzLlUDPXeKEbqVDHa3
hrKtZho4us0xYpGdDIZDQrnnrDUQ+s3OdCMTGQseYac32WtgOl3I49EqCe+9
eoPOHNCA3eOlCIZlEnp9FJzWuWqArCa4dWqBhJbDZ41Pempg5oZBq/cXEh77
TysvH9bAoSDJ7SnTJBQHGOwMDtKAO2PUXesPJOQGXWOdC9VAaetvlqpxElKC
V356n9DARnGblqYREk4e2zvxIVYD+7uXNY8NkRAQVtF58IwGugZu5718Q4Jr
BGfV2xQN9Cb1HHw1SIJt5OFCu/MaeJrD/yWcztSTz9O6sjSwUL298v+eq0WL
HTfN00B9bjz5NX29RGy0R0uBBriaOvNi6fYFTg1b693WAH+alvgE3T9bgrpO
zV26vYIShgW6vn+nMyXUKjQg/0cg9AFd/3zi/ObyKg2kpib0i8+Q8C7ZbFWm
nl4/+08+Vl9JeJ1ya/ZmkwZIiklRcoskNKUx9ou80MBAU53Ms98kPMxwfnrl
lQaWHvmlcqwl49b5mjt8fXQ9L/zf8LCQkX2BL+v8W3o9qy5TernJSL4UHMc+
rgFHw5Z/FkJkRF7u8k+c1KDfKx2UBDIZ/jkyDoyfNLCvZ73a8V1k2Fz9oPD7
hwYIF/OEfGMyDK5DKOSPBuTyRxUH6PtHpSCXaZ5BEyE/GQVeupPBd9N2dJJV
E5I7fugwxZHBcruszZlLE3KipzpNz5OxUsxWOcSriS7GMhX7QjLG7jYldwtr
4khA0M5W+n7u+sL4WVFcEydqOO93D5HRIGNolimjiRkBabtrc2RcK25ms1fT
xJUKRaVUfnGkz6z3e6ytiU/lWtfuyYsjRoLayU/RhMomzuuXqeJwvdGSMmym
iYxdxjPtx8RhM7nhq46NJk7uGgzgTReHvhjN4qq9Jga+i3HKFYtDLL+V3dVV
E/7SZrxt4+KYuvI87WOoJvKZZmO67CXQP8w8b3RCEwVGo/JFofQ5TdDYqjhW
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
+P8At9yE9A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80553#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}, {1000, 
          FormBox["\"25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[169, 7], 2000}, {24.142857142857142`, 2000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}, {1000, 
          FormBox["\"25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 850}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7934430926665297`*^9, 3.793443116729176*^9}, 
   3.793443193686583*^9, 3.7934690595887623`*^9, 3.7934851458564987`*^9, 
   3.793485626542159*^9, 3.793529275638933*^9, 3.7935297623217793`*^9, {
   3.793529802940392*^9, 3.7935299218475113`*^9}, {3.793530270676573*^9, 
   3.793530283999229*^9}, 3.793531393229205*^9, 3.7935321096505136`*^9, 
   3.793538240605304*^9, 3.793628682380995*^9, 3.793631362438917*^9, 
   3.793632431638509*^9, 3.793632610898789*^9, 3.793632892708564*^9, 
   3.7936351358708353`*^9, 3.793640073838176*^9, 3.7936401129967937`*^9, 
   3.7936402180988493`*^9, 3.793640631982995*^9, 3.7936407377176723`*^9, 
   3.793640928449429*^9, {3.7936410162773647`*^9, 3.793641029251762*^9}, {
   3.7936413750464907`*^9, 3.793641392337468*^9}, {3.793646510319355*^9, 
   3.7936465390417213`*^9}, {3.793707637189578*^9, 3.7937076659865026`*^9}, 
   3.793717675819016*^9, 3.79371817725329*^9, 3.793718270093568*^9, {
   3.7937189318878202`*^9, 3.79371896262079*^9}, 3.793719542672554*^9, 
   3.7938013957691107`*^9, 3.793801476167865*^9, 3.793801572070702*^9, 
   3.793801639616461*^9, 3.793801743696622*^9, 3.7945070273361683`*^9, 
   3.7945074182241364`*^9, 3.7945074978560762`*^9, 3.794507543814783*^9, 
   3.794507664822262*^9, {3.794513101049498*^9, 3.794513111994809*^9}, 
   3.794513180768571*^9, 3.794515034247113*^9, 3.794515318478898*^9, 
   3.7945686448942738`*^9, 3.79456900774892*^9, 3.794576052906413*^9, 
   3.794576688275329*^9, 3.7945781427540216`*^9, 3.7945784312991457`*^9, 
   3.794579363913293*^9, 3.794579492656502*^9, 3.795513847874905*^9, 
   3.795513895513074*^9, 3.795514550170504*^9, 3.7955157751971483`*^9, {
   3.795516178285439*^9, 3.795516185945812*^9}},
 CellLabel->
  "Out[1373]=",ExpressionUUID->"b57bda5d-91d6-4601-b2fc-9c70989a3053"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot12nscritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "solns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2x12ns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2x12ns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2x12ns"}], "]"}], 
      ","}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
   3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
   3.793641549374053*^9}, {3.793641626778944*^9, 3.7936416332225246`*^9}, {
   3.7936465444535303`*^9, 3.793646551353149*^9}, 3.793707642036746*^9},
 CellLabel->
  "In[1374]:=",ExpressionUUID->"3b46cd33-ec6f-4e3c-821e-0d5bfcc8735c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
LWyeAmUXrbrXYR8+OhHpuYIKp/fcuL4Rm2+vipn5ZipE3DaO24TNau0eWyVO
xfvl5bQZu3xXaGCtBBWWRSMNMeyjpm33ybJUSIxobd2CXUH34ZdXpeL/vwlf
JbBPkJ50rTCigl/osRpZ7MqmttwyEypYLJbx3I693mUy4Ig5FQ4e/LFJDvvZ
bUmpGksq9A21ucljr9t4ySPQngqczfLzithPZh1X/ThFhcxBnWoSNk98QN9t
XypQdvhbqhLXo5x03+IMFZgSWz4QXnuicW9RIBWWP8tcUCP60aOZ6XKRClfN
ecQ1iX4+49YdSaOChoKkmC62/X4ZnisZVPB0vZ5IuOSH3jDlDhVmzhTykrEP
KPlFpuZQwfz12BzhB+nDbftKqeCdOvoSsPeHlrm+e0MF62mVTTTsQrEWSmAD
FTysu0IILyv/wq/4jgrxR2xZhAu+iz+JaqdCd8uafDr2kiPRnPqDeD7ZSY6J
nWPgkFYxQwVq+t0fBtgkuS1kNEsFo+nfDEOi39wD3c9+U6Fm5Nw1wk0tthur
OPTAYbGwkhH2tK11zIuVenBlvH+/MTbZw/zsq016EOqvFWuKXWuxVshgix6k
HTvcTNhcveHh6616EBzay2+G7fDH6FudtB5MZj+9Tvh8OPP4W2U9qPU9fs2c
WC+JbNXM0AO+ET2PXdjW/nPfdxnowbiFXA7hoQNPr7QY6cFu8cBhwtMSWo2t
5npwrNp1125swQJVRsc+PSiruiBjQaz3Qo7U46oHFoHN5ZbY3z8J8YzG64HU
Cv3zVthXU8ZqkxP1wC7C+QFhFbPigN3JeqDUy9NP2L3IZKIyXQ8e8g6SrLG/
+AY23MjVgz37R94T/rBsNGrncz3Ya+DNux879GERjatGD+4d3adGeOuxgD8V
tXrAbdC6j/DBegFnubd6oBYXfYtwb5yREWenHszJkORtsNs2319R/kUPtGNB
yRbb651/leekHvzq4jAjvC7E0E/2mx7Y/DriQnjn6DDr+k89UFikeI/w29wN
rzyW0GCCp0LEDrtG82y4tCANTIq/ThN2/KRP7hemgZpPJvcB4v5IWT9zbRMN
Ft6sliZM4Sg4vESCBtMTS/YRLn85SOtToEFfcOpjwiW7mUuu0mhgNSB10h47
wqgsTIRJg8FemRDCNnoyXLcNaMB1Ziae8GKVVWtKTWlQ3jpeTtiUr3FDpxUN
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80683#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF1nk8VF/4B3CkSLKlLK1k35N9Ow/GMmbGUmQNiZJKEoVs2UlSliRrKiWk
qFRCEilbypZ9u7QI7ZbyO/f3+v36zh8zr/fr85xznnnuzH1dEbdjuzxYmJiY
WPEb+WnmMfWm9sN9Pab/e7EaCvsMCaWi//fO3IyscqFr/0xr6b6XLVTxz7bu
v55eFKr/5wHFWMNzQu/+OW+9RUyC0Pg/n2Evl4wX+v7Pdvb5d2bnWOH/vWb5
jJPJFu5/Frf6MvX8LP8/n2rVRBnfhf5ZoIJ3kJl56z8/GDVsbtMR/ecu0zNz
50z+88/S6g30Xf9Z/bTmvpcH/3PlOsWftRf/8yOK8LZ7U/+56sbsidTU7f/c
z6lweVfuf17yPVzNU/SfdRHBfq7mP1d392VHf/zPNeyNjSdB7J+HvVmnVWjY
4aIbLERXIqZOfb5vNtiCnnY1Hkpom3aY+l1XbHDumZfXQ5Bf5XTsMPbNsqkI
ZmPkyrZwRv4kds81Q50fdBR+VL3wUzi2yrVR9wUrVKt5b+5gOnbxHZ5cHns0
nDuzQSIf27KYbe8tJ8S0Sl5n/DZ2umISQ8IV6XcUxrg+w9a/ecCkbz+q88re
aP8Z2zHaJC/jMCr/cPiw809sRpVdR8BRdM1T68l+JnFgWvj2JdL1GIo+0O3g
zS8O4WviVWsLjqOTE9eLTmzBucKzlKICX3TA3W8hQArbkd7cV3gC2Y4ZmIUq
Yx+4etO3zA+ZuvFmRupgi2h/PffUH2mODH2IM8b79f4uobWdRDKupZpJljiv
rohuNz+FNg4Fx6c44NxD8Omn7FOI05nWm+GOvd+oL2LuFPrTLySd443rU6wU
DlID0BfHqYCCAJz7W9OPXA9AbfbRgqWJOE/3q9Q6FIhqe3Z7lqdjRyU0PW4P
RGW2opWVebhet9bwlXYQumhTY/u8Ant13TnxTafRHqv59J5+XL8nWV5wRQgy
aW8kBgicxwfu2xUVgjQs0tXGZrErLgd7sociIcbOrmlWCQhX1EyYEQxD/aZH
16+QlwAmv9ZRzpJw1NKo7cGujvMViVPev8NRtTHH/bX6OHdKkFpvdAblUgqt
BW2w/+rtFxk9g9xgJEU+BNf3hxxelolEU+o2fHYtElD7Tv/3l5/RqPfBdre9
3djCXlpjNjHolerXu24jeH3/kxc8D2LQ7Z3nrY7+wDareLopKBZ5KzYlR2yW
BKa8bYQ4bzz6IaHLXXJUEsI/amu9Dk5EeqMGjQkB2FzTyywLiSgm2zTMM1IS
oNR18l3AObSB33pm+2W8fmhZ0/Z0ElJjPtyWWY/zt51JYmbJKKAv43zcRinI
U49lnUy8iJbOf+d2b5KCcIEr774upCMKbaFR/50UQKXGs1eGl1DiKqbwrUNS
sM21rd383CW0OWTN7PvvOGe9smwrmoH0vETbrbZJQ16SeYmj9WUURrFMRqek
YTgsXHes+wpimb/Ns1FcBrZ9Mu7TupOHNrYYfEOKMsC0mH5gR18eUsnv7XTX
lIHalCs//NnykQeV7UopA+c/eoM/uuajl5fdxA1OykCeyQHjswJX0XktIa1D
jTIw3Cc7uZxSgDYFx+x/eEgWYHE+KK75BlK13Gzcf0IWmB5yji6zFCJzsQop
5lBZGPb4qtahWYjCmkemzS7KwuyhYx7xNwvR6CbdgMHHsqBk2CBmnnAT3Xr6
LXElpxz4ZDo1pLgUIbVl1we7S+WgfYbNT8y6FNEZtRFGlXKgZNKUEZFWivZf
2WqhXicH4fcmUo26S1Gy+uCkcJccbMsXKV50vIM+HHMUGv0jB8NfW94JqZah
rGGbYB+GPFhG9U6tZ9xFzHVmBuc+ywNkCo/6Xy9HgjxFXGE/5aE992lPR3M5
UnBe3efDpAAaU6IUz+/lyGGh8YQ1vwL4cCaK6VIqUIWy0fWNOgqgpICepBAV
6EABYi86qwA9iLZPUO0Bao5SaW2QUQQpCUu7KOZHSIv7NcsFVUUwta7sVFN5
hG5e3qfuCIqQTD28acfBRyiyNClvxkYRfqfPRPxpwfU9U76CZxTBTlhMZD7n
Mbopmy3g1Y1zHdtraeZVyOBDRNkqAyX47UXf83m8Bm1N/jR/64sSpL6LXFL4
9RxV7wu7de+bEryTpCAHgXrkvHOd/ZPfSpDl8dDomno9yurSqmxm2QFVKaX0
1IB6JLg54eTMhh3A6Vq4ZnSxHvEVSX1TQTvAkycjfit7A1pZ7/G55jyu/x7i
S1N7iT79GhrsVFIG/o6rHqXDzejaxyevuJJ2gl9zpub7b28R1+bCmfFxFbhR
0NRIuPQi2BM5MPZBBTIc9j1SOdGLfM+7vB79ogLVBlc6AmJ6URezYOHwbxUA
r+3sY8W9KIeIc+7nVAWdgX4HnflepFDm1fJWRRXMDda//3j+PWIYKtyui1KF
5HMmYnEVfSg0mOPys3hV+PntSaRnQx8qu0/E1CapQjqT17J2Tx/il8p1q85Q
BSer53+eLPahfk4e4cfFquCnT1uxxaAfHemai7v7ThX2XNkg7NjcjxIP3T+Q
J6YGQB0qsuwaQB+hJG6NjBoM+5Trd0wOIBPB60UnFdXAgePhBYP5AcTSmPqF
rqUGC5dLZGc2DqJAMb+T8xZqIPepZe6k6yA6MKQcs+u0GojZVb3UIAaRvk3Z
ddYONUh11kmyHR9CP+H2uGeYOnySPLHLvnMYVV37dOVUlDrkBdusO943jCLY
5XbHxKvDRf4jqmdGhhFXe/GzghR1eLdO9HbC9DCScCnNGSxUhylduWqDlSNo
T8hdO+t2dWBpaeg12zmC7j962IxENKDdY9m5N34EBW3+HWkuoQEXwy7FnTw/
guCMhvZeWQ2ofqgtMJ42gppNH90KUtWA0qxn1GtXR9B49+OY+1S8/o10as2T
EcT/8ynI+mpApaPG0bOfR5Cfcn3FhucacEsj4DGDOooOqGzLu/BSA7xeBKxy
tRhFdmrBZzlbNWDPwdZ3h21GkbaWihtLrwZ0bWCR9tk3ilgMrnF/+aIBbTXd
F+QCR9F5qyivF8Ka4BO3OieocBQV+VC2+flqQvOCFfvZ5VGU5Zu3ZuaUJiSL
8Fn3so6hc35LPw+FaAKvr2WFCMcY8gmoaHGJ04QuGftHefxjSD1c7DQtRxPU
6Bor7aTHUP151i7RV5qgF8AsWmI1hoZK68++EdGC2YRh1b/ZY6h9mvWzsqQW
jP7abxRydQzVyhnRU+W0oIAi1f/zxhjKK3rBaauuBdx8qrd674whtxsN5/rp
WpAc07/S+dkYIrJfnp88pQX06DOC7mNjaDqxOeVPixaI/84xDdo+jgZfc353
fqsFb3q+FVtIjqNWDoZ1bY8WOJwWnd8qO45K41r4I8e0YE9Fgu1d5XHkE9Wa
xj6vBRyZZRcv6Y+j76fbL60T0waG631bf+dxtOj17op0kDYkt2tyXkwdR9Zq
ey8ohGmDVsGbO6mXxlExMxGzM0oblK7zW6dkjiPnjF/HdZO0wfLazeKovHH0
7IWwqdVVbfhzbRuzRvE4it2273vAK21YcChxHK8bR+u6pukvhXWga+VmxtHp
cXQk/6RBy1Yd4BETW/FrZhzVH1lW7xDTAfoKqkLI13F0cgXv9n4FHWBqqP8a
+msc9SqpzM8Y6EDtgE2WHfMEyj0bdF3gsA5k3T1x5yD/BJLVZ/t74IkOlMof
LOfSmEBlRbcle2p1QI5h2e2oNYFU+C2tqA068FiC2em6zgTSmcy4JvtGBwKW
UKa8/gQyPydDmyV0oGOk7/A6swnk28vICOTThY63foc1HCfQo+OpyomHdKFl
4osM2+kJpNen4fTHWxdoZhFKH4InUB1lINrbTxcG6M3iL0Mn0CsBiV7LMF1w
ijw5GxwxgfqfPgxbn6YLOQL1wXXxE4iJo685p1YXhrNsxZ9dmkAmV0UO3hXQ
A0G2FWa37uJ+M7gkGjbpAVeYqItA+QTalrQ4/l5ED05+y9SMrJhAC4Gdbqxy
ejC6tdzM+uEEKrGKd7YFPSCKjJX7qybQOuY5mz+eelBbKPs0unECDbnUUqiP
9WCV+uOT1n0TqNmmZIVzjR5wWA7Mh/dPoEpaZp1vvR506FzLvT0wgS6q+0FW
qx70brR0XhyaQEbcUjozo3pwXu/2XNT4BLpdfX5n2hoEVUqDlQbTE+jUZhfR
EScE3mMbSoL+TCA3S6U9/fsQLBgWPDz8F883kjmh+wCCzacXKY7LE0jiQ8Fc
iw+CJe7ns6rMBHpXMVX7OArBX1pGUy8rgZTovi6pxXh9la7rwBoCTQVFZ5ks
YdPyokYFCfRxj6xnPhNAqP/Yz0IhArnOrmPZugKg/q+k/BFhAtG2T6gKswMo
5xybnt1IINH42GwePoCzHYfmPm0hULt185E/4gCcG3en3RIjkNxnmzXdDIAx
5dgLFooEqrSm1yRYAmQlsGT/xTZ8anBCbzeAZ32Jf7ESgRySFPuu2wGwcIWl
syoTKF5p9W2//QCnTU633FAhEOFXZcYXCHDE4lRzhSaB8v6IJjCuAdQwUXlZ
DfF5B4T0mAsBXl3z903GftjK/bXiFsCFtOa+jRQCteYu2W+6A8CfZd6iaESg
P/pd0p8eAah8/2VLN8Hnx8Q3xbUBsJ+N9ranEWgd9yx7/QLAR/Y819ZdBOp4
mhBL/QPQ//wIVX03gS4eEV/VtgzguHVbVC423yuHFe9Z9cF94c23o9bY0S/+
zHDpg4+YWx/LHgLxLGZ+3bhdH3xPR91da08gzkmj/hM0fag9XJ5a6kyg5rRh
h3mGPpSEW1StcCFQIuV0b6ilPlwV77Wxw15ztawr3kYfVCYdR5exOfZufJPr
og8jT0uDTPcRiP3t7IvXJ/QhdGPvsdr9BGKtuXJne5Y+LPt/3GHlSaD3OhTT
oRx9aL/XzpqFfefx5+HMfH040frZgsB2eKDLx1eoD79YInYFHiLQ3ZIhP6Z7
eL9VsP2yF4Gcs7ZrDTTqg9NYb13tEXw9A2/Xp3/Th8Gmm6wPfAiU9Gv33l0/
9SF5v/OlOez9/ks/1s7rwxrv/KdyxwnEdZwhGf1XH4L9XjXmY3t4zsSfWG0A
4vkRkzG+eF62Oy0stxpA8OaeeV0/Ah1WedK7mmYAYakrjNxPEai2vbO4kmEA
RHJJy0Xs9Udnww5aGoBU0weWZ9g118UlXtgYgAL4+m8KwNdPINk33NUAviSq
nG3DfjLvvuaXvwF80JP9KRGE51nDpTueZwAqTVW+OcH49+4ozZNSYACfVXdc
eY59/5fhmP4NA7goK3JmCttFKTA+97YBiLWHx+wIIVB5/linwwMDqPV/ElmL
7RhV6f3mtQHkfd9S1hFKoNtUt7zqnwawwG/x+lU4gVTkRPTQPO7n+fpTBHY1
13BfzaIB6GU6fmc+g/8/b/cKPGMyhNvUXHcN7O977ZOecxjCeGKeWAG2nq9l
8MsthhDauPugTwSuz9Sz6zA2hJR9G6Y/RRLIPuTPj11UQ7CblLVjiSLQqEtV
yluaIQxtSsoWxP4uptX2ztIQJDi0KinYQndUjbsdDIH/L6hcwXZ7LqfS720I
MQ4vwvSjCfTjkzAPkW4IH88lTPnFECg1e7Ix67IhbPv941Ic9k6LirDdWYbg
W3B+exb28XuMmdp8XD+P2uuwpwPCW68UG4IzQyWGK5ZAEyuJRKs6Q3B76Xk5
F7tz693VT6fxedwdTEVxBPJ7E/LsxKwhIK+Xtx5hr4s0C5T5Zgit2mJqTdhW
xNjUpd+GIDzdOz+J3VK84aXvCgrQ5QaUxeIJ9EIzOEZKiAJHz1AyLmHf322y
IpVCgXCt9cGHEwgUR6uM3mRCAZlni5tOYTsZSrNfp1Jg9B5PUQQ2y841ax+Y
U4BPwCb+MrY5X9uGHjsKmH5ccGnAnmrfI7PpKAXSZ9fEbzpLIGHzA1bX0ihQ
dyzj6hPsaaPut3IZFJCiJa56gV2ra7rnfiYFzBYCHVqxD8jLODbkUiDoaUnH
MHY55xf3qVsUiNbez7YykUD01/4BctUUaGf1umyGHWYanVtBUMBXkMr1GrvD
2dNJ6QMFujJHgjuwxfxpQsWfKNDvxjHUi/0qnzelYJYCycqeoVPY/IvZMRcX
KCBpd1Z25TkC3Sx5cNSHywiinu+z1MFu55vSllMzgu7ZH2ZXsUWlX/8u1DCC
/i+xVjex/VHp/e3aRlA8yWpeii18xE9xIxgBMc4i/Rjb/QXTdg4zI9jbPO75
Bvv3KSGOqb1GwBLydMtfbJEBs56CaCP4zp392jKJQAl12nds4oyg6aGw4B7s
r4VyMWxnjWBqZtHBEbvOl0vlcLIRaGSL1ntgu7N3nFe+YgR1tz+KB2Hf3Glv
8qzMCMTV96vlYyskHHww2GcE2eGzf6aw04/ZnUseNALZ9cFq09jL1lR3gxEj
8KkPOziH3b5Vlu8GYQSbTszcm8c+fv/L0aNzRsDO6zOz+jyBKob9xZdWGcPL
Qte10tha6lGpQsrG4LR6v6QbdpebkFq2ijGYLolRPbBPJJV2b1M3BoND+R6e
2MUTPcJSOsYQdH0xyRt7S6p8vpqxMWTtTrkWhM0y11Wy28EY5tZcGrmA/bpI
uvFchDEodLxtrcL27Kr25I02hmDHF7Y12Kws1hxpscYwvsW3/xm2nn0oIyvR
GH5zzvc0YJexvX1blG4MPvFhue3Yqe7Bw41Fxvh5vMlzDNtpS9s881tjSN5B
bF6VjO+/Qr73n3Qaw4uvrnvYsZ+tW3/cv8cYHHqeJ3BgS6x2nJoaMIbvY/sm
ubBnvhFdbVPGoFM/4COAHdH0tzz7rzFcH3r1WhL7pp+Ct6aMCRwYjuswwnY4
9kb6m5wJTBcppJtgr/XymyhWNIGgqNQ9VGxfl8dO21RN4HDYwxY6traZMY0N
TOCnxVLabuzWrc5SnTYm4KZ2PsUV+8erc6M+Z0zAW/3e4QDs/jWdnkuRJmAd
eu9xIHYdfdNMbIwJ8KzzZTuNndxatJhz1gQeXNDNDMGW6Wjkb0kzgaJOr+sR
2M69zCbSRSZgwGZsk4jdMOl/e6TDBPJCBVRzsIulnu442mkCWZe4DHOxUw6x
Vv7uxv16qFrkYbt+uljPPWAChOwWt6vYC1/uDOhOmsCWJ2W+N7AVf37gzlw0
gamMYP1S7AxWZ79dYqawk5JfVIX9d7+A6hsJU1Dm5Ql/iu3+vP2HhTTOawSs
q7GVIgxPMRRMQSVl4VcN9stlqSBTDVP4O01TfI79a+FbmB7dFBRWcjo3Ye+Z
iz8r42cKXiWhr99hV1ka0m+dNIXSKsuATmzRsiVOqUBT4LrHJNaF/cX7WJJ4
qCmEGDMHdGNHf7a+sC3OFKJ67/O9x66Y3HppQ5YpJD735R/CXjd4/ypLvSn4
2R+1mcJO4gwJedhgCoN35KZJc2hT7I404fNieyI/YLNkdKztajWFexVLJR+x
v1rNBNzqNYWOd4U/PmO3v5CysJwxhcy73NZz2IklVxazhalg/tfefh6bvd+t
a9dmKiTkcHSQjuKQucu2jQoyrMPUBezTBysPHBenQlnsX7VFbC+RzjcUJSpU
miqx/cE2TeO6+cmICvGBaeFMFwi0MuSMteZxKvQ39w+vwq6Y+zxfc4IKHZfd
tdiw3Q/Y5RqfpMJH3d0ppOstFD/uPk2FY3NehuzYUaIDYd7RuD46O2s1NutL
jdsFl6lwb3PPTk5slnWzzFx1VPDtnlrkwb4X61iYWo/zD9sovNhuSw30jY1U
4DMfOEu6biL7klQzFVquEkJ82BGVNHnDLioMjbkorcNmdi60C/hIheogVdP1
2Ey3nO+M8plBTmylpBB2w+du79z1ZhDUueEg6UQlKwUnQTNIMPt7nbRApWFJ
52Yz2HL0sKgwtkKj1O2XUmYwPflm/UZsp4mvN0r1zMD+TcXkJuxHIrE5QV5m
4PuwTW8bdqgHk7P6UTPgeb/2OGnKrcDN34+ZAV1n9irpdqUjWUf9zSCvJn+l
CPYUssp0DTcDjbqHDaQ3OG9MN043g2zOaI3t2L6Zd87x1ZnBq5Vtg+LYD5cy
Y+vqzUCt49NKCewl55gzvo243/TncqRjt+/172g2g32s1wJJZxVz7L3YbQbl
QVI8ktgvqj3k+KbNwGBzjJIUtuDYxte8gjTgh4/6Mth7jdhePBOmgdm+BVfS
Vwu/Vh/fTINU4/Yw0nJHmu69EaXBO0ZbFWn9HyczL8jTQHRUUkUW24ut4xCv
IQ2KHt8RlMN+KhvHzutNA4e50Cp5bLV3Ai0XfWgQZZb8lnRZcOEF/hM0aDkW
/JH01ZYGYcEAGjy6SwgoYMcdWym/NYIGbQJcx0nvKo+wkk+nwd3h6k2K2JNa
IZnUahp4dpXaK2G7jnG6vK6lgUCF2xHS789mbWc8p0FZ9c9Q0s39T4otX9KA
x662gPS90IVq2w7cb/zwJ9LBdafGPAgaSNknntyBzWvmKxfBRYdXSoxTyth5
z7jXaPHSYVy6MZa0kmbJh7l1dED2ohmkzaWmbuwTosPojpBK0gmrnEX0xeiQ
VvLqF2nW59QNTFp0uDj+zWcn9k9tEaZQDzq8X/5lroIdXV49qOpJhykWZifS
/LJOT6e96CD7c86T9E7hS0F7feiQFJUYQdrnN+cPndN0SNheVEH6Q8XvD4vJ
dFAKf8Cvit0v3/42sIoOS3I5L0jnfuINWVFDx/N3aiPtdmu3xLlndPjxc3Uv
6Q9i3QF5DXT4zK3ymfTPjYObG9vx/k3PedXIeXB8Psg/gfdX7rUnbUywLZWu
ZcDVvoODpFdfo17X4GGAt5E6Qbp531nzOj4GpB2bnya9e4Arv1OAAdY39vwh
7fpuvfGSCAMuqAduVMc+Xbc9marGAFPaERvSZTlIbNyZAW/1PGpJfwv6xrZv
HwOYdNMaSKvZFn4a2M8AqcrHzaSfcHOXd3sy4Kg40UO6IXxQ/7UvAz5pP5sl
3ecW4nIvhgF8y/lbNLBXST7JDC9lQJXYsROkqSuOhf4pY0BO2/EA0olDom5B
5QzwXHskhDRvRoK0XyUDSvVNYklvWu1QebCOAWWumZmklT/97jTvYoAr53AN
6b131Hg3/2XAgSHmlZrYDxx+c7UzmcNa3mOrSXOteswZucIcZOrfriVd66TL
/oHdHOpLIzeQFuWgLFesM4fgtBBJ0oS71TRd2hxGJQkT0t7CR5qCrc1BLuZW
JOmGF/KNirbmICWpEEt66/GZ+lF7cxDXK04g3d7oW2vqgvPW1Auklf0DH/J7
mQPjpEAu6V9tMdeLw8xh/eRoJenw6Pwz/UXmULnWeIr02lNsZvtKzMGrdeQj
6UzPo3zEHXPQVAicJl1O0yyYqTAHpdeZX/+3X9439Sw15hARdGuJNC2HiV36
rTkUl37n1iLvdw9dkvwXzYH+J3An6YKbL/Ys/MHfJylNlbRSpuzWMCYLuEmU
qJOmhvy6E7fSAo59eadNOtjw/Jsr3BZAsV8yJD3aVs1ft90C/l4p2026ZGrz
FS66BVR1lvqQjsuOdh00t4D2qTRf0u67psVLrSwg43eAH+lNVVVlDFsLAK6d
AaQTzjs2JLpZwALvqTDSnmqX5zgCLWDdab1zpEWj+E3ZbliAqIvODdK902Md
N25bgEOlyi3Sybble43vWgCzhHgx6WWZXSeiqywgZvnDXdL9b87nrHhrAVKK
81WkU7VdpAt6LMDOr6CGNO26QoXBoAW0hRjWkX4c0NJ05oMFDMS5N5I+Pppl
LTJjARyxE02kpehHhmq/W8CSjFMz6eH72l6uCxZQ7veylfSlrWt+LC9bgIK7
zBvS/wMk6sCc
          "]]}, Annotation[#, "Charting`Private`Tag$80683#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF13k81E/cAHBKJeTscFVIQpRK7syHXazdZZGinCHpIqLcN+VIUgnJUa5E
CkmSK3euCB0qOXaVogMh8cz3eT1Pv/1j9/V+fWbm85nZ78zsSjq4mR1dxsbG
tge/EZ/Uo2Mvaz4/0mb7vxcHSfTMR5Fr6P+9Jz0ptUQk659p7f3Ft0RK/9nC
6fezBJH6f36/8wLpksirf85Yx4iMFhn55xDOkm1RIlP/bHkos+j7Dw74f3Mv
hVgbbOL7562mE2PPY9b+8/kOdZQ0JfLPG0oFPrCzb/7nsiFSW6eW1D/3UUJ+
XDL4zzP3q9bTzf6zqp/6keZj/7lcaOdMTcJ/fkIWlSge+8+VOd/PXru25Z8H
eHYkm6X/5wWPk1X8+f95H2JyXqr+z1X9725FfPnP1ZxNTedA+p8HXTm+KdOw
g6XWM6RWILZeHcFfB7CFXSyrjyohCc0g1Yf22GD7ek5RG0FmpbXbSey8B2Oh
7PrIftV8iOI57NdZJK1pOgo+rZo7HoytnDXkNG+KatSLfxxLxC4o4k/nP4QG
0yfXy2RimxSssrlrjdhWKmqN3MNO3BlnJGOPdLpzI+1rsXXynA3eOaK6E7fE
Dn3FtoowyEg6iUo+nzxpO4NtVGnZ7X0aZbloPHVk2wps878mwuzdUIRz/2HX
tVshmDtqb80dd3RuNDv/7CYc31F7Nf+OB3J28pz3lsW2ore9yz2LLIZ1qYG7
sZ1v53k88EQUB4GUMC1sSc2fl555IfVPHz9f1MfjvZktpHWeQ/L299XjTHC8
qjSiy/g8EvvoH3X1MI4fFX42fus84rGlvUlywnbUexf64zz6OyAil+aK2181
3XHM0BtNWI153/HGcS9z+qlsb9R5KEL4fiyOJ3qWaxz3QTWv97uUJGKHR7dU
dPmgBxZS5eUZuP2+GlKrpi9KOFBt8bwUe3Xdpa3ifuig6Vzi6wHc/mC8ovDy
AGTQ1cR8z8TxKJ8jZuEBSI2RqDL8Hbs02d+FMxCJGO3p+8YhA8E71aMnhYPQ
AOX0uuWKMsDm2THEUxiM2ps0j3Kq4vjy2DHX2WBUpc/1aI0OjltHy67TC0Hp
5Fxz4QPYi9qOkkMhyAE+XVUMwO0HAk4uyYehMdUDgpbtMlDzSmd2YiYCvSnb
4mDTjy16QmP4QCRq3fvzocMn3H/gaQN/WSS6t+ey6elpbGrpM3HfC8h1Z0t8
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80683#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
guFbQuzfl5aoOPK9YxXD/w/Ql/vM
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80683#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.7936416375070543`*^9, 
   3.793646552383129*^9, {3.793707642764163*^9, 3.793707666631822*^9}, 
   3.793717676570807*^9, 3.793718177758046*^9, 3.793718270395116*^9, 
   3.793718963117494*^9, 3.7937195430345993`*^9, 3.793801396066884*^9, 
   3.793801476471346*^9, 3.793801572374198*^9, 3.793801639901389*^9, 
   3.7938017440868063`*^9, 3.794507028000188*^9, 3.794507498249361*^9, 
   3.794507544530623*^9, 3.79450766515619*^9, 3.7945131123952303`*^9, 
   3.79451318107617*^9, 3.794515034588677*^9, 3.794515318962038*^9, 
   3.794568645348548*^9, 3.794569008082696*^9, 3.794576053252626*^9, 
   3.794576688614456*^9, 3.794578143569438*^9, 3.7945784318205347`*^9, 
   3.794579364251568*^9, 3.794579492987228*^9, 3.795513848004204*^9, 
   3.795513895730941*^9, 3.795514550598509*^9, 3.795515775551805*^9, {
   3.7955161784052134`*^9, 3.7955161861988573`*^9}},
 CellLabel->
  "Out[1374]=",ExpressionUUID->"bb00bce4-c46a-43e9-9565-dbceee9f5c80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot20nscrit", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2x20ns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2x20ns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2x20ns"}], "]"}]}], 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2x20ns"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2x20ns"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2x20ns"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2", "+", "20"}], ",", "2000"}], 
          "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0Gkow3EYB/CRs4jGorxhuVqUHGPMTI4kRebIUc4h97VXrhwx2pIzcs2R
F0hCzqWViUxWrohQKNNoWCRH/t/fi6dPT317+vY4ZZfFCw1pNBqTGuiv3OgT
hGlDZQ47w9B3aGkdMg2LN2HXmosSMjj3alg1mnMC5w22b6BupSMokfLF3ZgL
WQIeHwpZnDDoEdmQD2f7x4nPu2ml8NxPS9x7uayDRq/Mevig+22DvIlPCWRz
3HpIPiiFyLorH4TOJcvE2/M/NezWFBzBBZPqR3h1cEDMi+N+w+i3R1oSZXvG
vimkPyWYwUx9Nh16Ja8yoGifFQyPJ4uIFrHNodBW5BkF36SuX/DdwM4omXIl
V2oO+V0a4k+nmw0UV/jYQ72CvVyIfhOmO7CRH21ZRDkiD7CCkqomBjwT7drB
xblxR9i6IfOAvW2aARVlzA9vCB51eMtguU8N8eNrSg55rU1KFbmXrocR1dNE
tSar9pBypnOsDlrnKWK16DVzQUxtER6/Yg8JP4Hca/FpZQT1v8At4j8M5A00

  "],
 CellLabel->
  "In[1375]:=",ExpressionUUID->"a8f11ed5-353c-46ed-95c8-505ef1bbaf59"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$80794#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
+wnXYOk1hloTdA8e6ugSeU1OsR48WFZvgp1HSs7u+91HWLQMXAKem2CozCpO
vb+PMFzsXNvTZgKmywfpbS/2kS+205F5fSbI5/CgP8fZR9rrZKxtpk1w6KYm
TZn9FUnKv/wrU8AUWzvetkRK9xDm/h09dkKmKNzqw2bF0kNiWeTuMYmYIpK+
L8t0spvQ/Mp9gyVN8cb/eMf94m7iL9rdYaC0fH1tq4mxXjcxOcd267OhKfb1
unQY+74kKw8eddAINkX+r8Hw3Y2dpGR24sfTUFOce3JutdW9TuLt65JlFGGK
u2GKS1bpnaTWWvGTPc0UTEGHjtwM6CSxYgOHA4+bgtk13+MqZydhbFS/c/2S
KT5Oe98v29lBGLhm6NmqTRG0iscvkr+d3D/plptWa4qTrZPDt1a2kx2L9RaC
DaZgHKJ2vh9+Qao/Zl6QaTGFIyPNJu3cCxJTbq6g32MKxYeakYq/2gi9R65L
5CdTxHvJZAi8aCV0eR6F7znN4N58JMTnYjOpn+gNzFpvhu2OtXqnQ5tJkpLt
Jnc+M0R2dklMWTUT3nL9/G4hM3AkGAhrrmommxpk7jTKmKFp49Qc1/4m4v7x
S06BjhlMxAJsLmx/Th6KnrwS7W+Ge2yTUT+cG8ghHzoPtb1mUBgVdWpUbyAG
eVFCX/eZQXnpiUcVfwNpVwrI2BtuhmjatNDG/noyRmzTvY6YwW8uNfjjjnrC
4yF43ui8GUK9L7hU7q8jIemFyZzVZpgd/U2Le1JDyhbTT1bXmsGhbbQq5XoN
WfQ4cTSkwQypo1czH8bXkJPi28I7W8zwjneogeZUQzLusmw702sG31sBnl2z
1aSu0keec9IMr3efkg5XqiZ8w4LNHHzmcI5N4D5UV0W2GTLVPRMwxyn71/zp
hVXkWu6XymAhc4QLVwy2XKoi8gHP73eImYOhNy0hPLCK6H6LSD+tYI6ryQ+j
uvmqiD9T524OfXOkjH6j7vlYSZ5sjGPmCFx+r3XjeBIX9ZiovuRtPRNkjuvB
OXqTTo9J0YHc09yh5rCcGz+3n/KYXGutF+CLNMe4iXn0j+kKErdvpYJwjDk4
59J0zu2qIHbFMbYK581RIi5VU+/1iIxqHkw3rVyud+q0hOe+cuI1zOrZXGWO
kGyz0ym25eR1Yoa4ZY05hndn8X9QKSct/RV3bRrNcfS/mrULC2Xk/qGflc6d
5oizf9f0LLaMHKjeP+wzYo4d82uFaq49IBxmIfIxbBZoELd3ejdfQrKfsa/R
5LDAkPox3w39JURJI398lssCCjPcagerSoiVzFjOdn4LJBpu48+PLyEJqzxE
dSUs8GplfPIzoRLCWGPKQ6dpAXpzZjYHi2LyXUuU7pCPBQojq9Orq++R48WV
g9RdFriRwUTVvHOPcG90fzLpb4GA51UC7WfvERWBC9HbgiwQtiWl0cnnHgla
YP2mTbNAUkpG/ovV98h4ycL4r1QLVL+JzNznUkT6Fdq7oh5boNvfVpGep4Bk
feY4uOKpBVQKzC/WzuSTHXn2UsnPLHCAL1a/rDmfjEv0RmbXW+DZ9kIvuZh8
8l1wUKih3QJr23OFjWfvEg6WCT/ujxb4vU6eX/jVHWI0wrRYsNYSzpUcAl71
eWT1DdOb6uuWbay5/1pOHmnZnmhVzWmJPaZbQllP5hH7Abar3byWoJfVVHcy
ySNeL9cbLYpa4qXfcNzDlluEVi2eaqpqCeXgtDfH+nNJ0RUi8cHDElNC4b/M
eXLIXPQc0/btljhz2bDq5K+bRNU59/PATkvc75QLGXp3k1Swsxf37rKEVcWp
X5N3bpL6I4O6zSGWEG+NO3BY/yZ5s+Og5/0TljBxXcsYGXmDrJKuSD9SYInE
0qbaKwvXiOmKfYeWiiwhMxx85PTQNZL0VmxHdLElBHWPJmQ1XSMcFxNkw8qX
53/B+pE18xrZsNq13K/aEnN0hsoy+teI8ueFbqseS6xffUtkS9pVsq1QlUPo
tyVEzO6MPTXJJg9cF9ja6axQ/z60WVAlm7CtesR6bIUVhJ0To84KZZMq9y3M
48xWGJr2Kqv/mEXEWAz+lHBZQfAFcVbQySIj3raTFrJW+F40znhpMZMECgQ8
P+BghQjejYrOOZdJfZ1Cg6KzFT5NTCWHxFwmwsHTte+3WuGrQkhLqcdl0t4Q
UmXiaYWcxNE3hbyXiXJ4VBm3vxVahoY+OSamk/kXJ27ePWyFjDmTNZORl8iR
41eP9t+2Av8lyzOhoRfI2v1MZtvzraDQyydz1+kCSd+1l3Ok0AoMu8ryWDUv
kGJzjevTJVZgjAkMMqS/QEY4OmoZnlrh3LioWvjp88T8Ch2zbJcVgpkr6QTK
zxGeMs9T4b+s0HR+zF1AKI1cv1Xn9HNpuX5+ar4/YxpRSt8ofJjOGskW3PGv
Pp8lpgfnC+NWWmNPVcIwa8VZckA/peMyuzVs3juLv3I9S96/qOSuFrdGh3v2
0njWGZI/JnSZzcIaFk9XK4zonCZxmce9Bq2s0Xj814ih9GnibTcpWWBrjVX7
2wPr2E+TDY8fF1k6W+Ndn/iY+FAqSUhxq0/aYQ3hq0FHPY6nkl2ql2ZZoqzh
lvSOfUduChGL5TZhylkev+j6zZHVyeS3+oG1vbes0SCqr/lqKIn0TQ535tyx
hhbX0ct/HiaRVOfibUb3rPEi/FXNtH8S+SNnF3r8sTUGNL7dcXyRSPo7Uq6s
6LJG15ORPrVrCaT8xPzOrm5rjCkEqp84mEDStDxlr7+yxohQ2k6WrQnE/Oam
Er1Ba+QfrBAuWZdAHkW2Pj86bg0x7UjF5Jh4cl6BmmI7YY3YO3Nf4j3jSfD7
DAfRaWv0p6899lg7nshYBLyt+moN7R8bVtfMxxFG+pc3UuetYbCL88/57jjy
rlTL3+unNVSdc55lF8eRx/7XFZWWrMFR/8rm3ek4ckF4zbc/f6zxviTvrmNQ
HPkfgaFTHw==
          "]]}, Annotation[#, "Charting`Private`Tag$80794#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
d46T/wcdk6rD
          "]]}, Annotation[#, "Charting`Private`Tag$80794#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF13k8VF/cB3BbCJF9zb7v+879YMxgZmwRlSQhoUJU9m2IFlpUUiqlXSpJ
UiEpKqKyRESRpUKlKOszz+v1PL/mjzuv9+vce8/3e+73nnuOQuAOz2A2FhaW
Aebhf/9dgkdf143dtWX5vx+Hg1Rkv2Q+8f82Oltw+o5kyX+mtnSVF0lW/Gef
oJlHRyQb/nOf3l6Hg5Lt//mcqFvWPsmh/5zGfUctR/LXf/ZdW3zz+w8O/L95
l9L8KLIC/1nFY2L0yX6R/7z7lQVR8EvyP4tXCH5gZZX7z34H5ryGxP75fNDn
l8+0/1lb9P79/b7/bL8r4JjorX82Pe1zKV9P/j9v8r+04cqHf2a4SJ88OfbP
l0wPte/79c/f+OOp23gU/vOuWrqFoek/H5D/LfLw4D9XfnJobrVW/M+dTmk/
DlL+ebqsRozm+c9mCRabmrb8c5Ww3nTdkX++T5KSLx/9555rPo6RU/88u/JY
mO7iP1v2Cdy9Jqz0n6tjl7lcsP3nh5e+78zP/+dePt2Tnmf/eT46vGbltX+2
IYa5D9b+c03X+6LML//8wUbyicPvf168sGaUlUX5P9tGvjZMFv1n/05+X2v5
f062piXNav7zmfM556tM/rmWu7FxF/55YDvHuDFVGTqJ+QLqWl4ES4ed0JS3
MgJIp0uft1wm5K1SzG4HKEPK/9pS2/0nBIof+u0IV8aM/rOjQWntRADXbJrO
LmVMr+pd1Pf9SKRuM7v8NVUZvVt3dt+Q/kKcexvTfHW/Mhx49090WPwk6izK
f2w5rgxXg57BCeU/xMDZSTHVYmWY9Bdd9Hy6SLBw6lgPXVeG+NUDdz5ws0M+
ImzT+Upl3I5dpXGHhQt2by5nBTxWBtfUSy1fMi8CzT9fl21Whls1q/eKTgGk
n1F83dupDLpy2AnrNUKoDyuSXvtNGdsU3ifnHBLHnbHwcP9pZWxpaeJv1pJC
Sajlg80sKtgvkenJ+1EGmSFd67aLqKAoVZrzr4sCnAIFCzOsVfDRaXvWTI4a
LD72j2WTVbB4u+zLSWMNaAaUWeS6q2Au/+F8zEdN8PlTuwuCVDA+7b/5G6cu
WtdmSpQdUAEH/wZ3qVcGqHu3OvTOcRV4yhwSZo8yxC0fxaqqcyrIecTidoTf
CEe8a32eVKjgPL3Zl2RljDUef4+/61XBp5vXHskHm4LS1jjcN6yC0riDzftG
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
oH7ihBzv76UlN/goCiewrewn/gc6J6MS
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80794#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
/y/8HwVWn4k=
          "]]}, Annotation[#, "Charting`Private`Tag$80794#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
HNy+y69wYxhEroi8lIqkINNXs2GMJwxDGlxsy7EUPG2yWdMsFIadG5kVveMp
YDij/9FXLAwJX+l39SZTMEc/82FSMgw2SbM38+6t5Odmg6SdfBiKfCcecz+g
4DZtqxttexjYjT4MnCmkQPxXTAaDchh8hAb+TJZRsDv47ufrlDC8/N0huKeS
grbEBeGfqmGQetVMntdSICIttUtSPQyR92pc5Ve+GwGL9UdlNMPw6WT5ucRW
Clg7K47/0wqDtm1B1uouCgZMdY9lIAy35e43He2nQNlWxpVXJwxLDHcm3gyu
5KdTfZeLbhjs395i0R+hYFOOrkkwLQzlRVe3FY5RsOv5ehtXvTBwX4yyEJii
IJ7RI4BfPwz+ruG+Ud8p0HTkKbm34g7V49e//6YgI2+Gj8EgDPIcR0sd/1Ig
+aaiQHHFl8Y8+ptXUSHZoXNSYcVfqpwWlJioyNZ1il5eGW8Yb8eftp6K9Drj
d3dWnHXYXJN5AxXlXSnXN6x4lZ6+cyAPFdtZep/tXrkfFwGtM8OCVFgyBPgd
XrnfqjmVDBNRKux3LTbarMQj0LKtoUyKirir4x3rV+INvSs+JixPhcau6qyE
lXz0hwiuu6xERdr2ZfufK/lSttokO69KxZ96qbViK/mMk1pvtl+LilsZlZVi
K/meWV59tF2Xisfu6jd+r9TDvH8pVs2ICs/fpXdTVuq1LnKyh92GirzDL4Yd
V+rr4fjpV+heKmY4XlqFrtS/XnmQZ9SJirODUyEHZcNw+mOLQ+VBKmRu8vnW
rDw/7yqen5I8SkWs3YfTUsJhUI97eicugIqRcf0X+wXD8At5n7zCqaD7qXPV
ZlMYKjO/Jh8/T0XK9ZoxG84wnGWSs468QMWwbH2t/PowsHU8qM24TsW9jL7w
o6vDIOH86Pa7bCoy5lhapGZDMVk3bTv1gAo7S6HB+a+hKJJQWL9USIV746mI
jJX5pDWdH8ZbScW5yjZy4W0o7E4W7rHpoCInPTUn6XkoBD7Msu/vpeJzIHp0
n4VihLajyfcNFedHhAeay0JxhLVY5eonKhZV6SU9c0IRmVzC9XKeirCmvuaF
S6EoffK4lQir4sICd2+aWShCBefPmUuowtjd31tALxQ4o6ruKKuKxFcTfcc1
QtFq+CQnVEUVLIIRCy0yofjUXxFZaqQKcR8bx29rQrHx1zPI+qlC4/Wiq3VZ
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80794#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$80794#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxFl3k4ld8X9smYeUrIPM9kns99Bucc40GkiFBUlLnSYDohiQZJEqU0IUNC
KiGRBmTWQEoDFaEUSnnPe13v+/09/zzX53r2Xutea6+9n7WVgiI8glewsR4O
Nrb/+3YMnuhp/lxrx/b/Hk6yTOSodA7h/7PxhbyCW9KX/2OnzqHqQuma/9h7
6/z9bOnW/3jE4DA5S7r/Py5axUjLkP7wHyfz3tI4Ij33H2/YeLFyZpYT/5/5
l5M30eSF/2M1928TD49K/Md7uywJeXPS//HqGtE37OwK/3HdGLnjuY3yfzxI
T57Nov2Pf1U0Sjp7/I/ND1gGPt72P64XN/jVnP0/vkORUaye+B83XJ2JyclR
+Y+HBfTPelz4Hy9FhzWKlP6PbQmfeLOa/seNQ68LU7/8j5t429v3QPU/fhvO
OWXipArv10kZwo2ydmwDRLEfXqo4lB8ZVuj/2E7ROtH8ZoAqPslb9Rz2/WOH
iw2bIsJUsTjf9kLMR5YQwPM7WW+PKpZrPPc0SJsQknaZX/uapAo+0e8bBn5T
CUV9sR0lR1XRO748q3F7PaHZsnp2W64qtpQ+88sy2Up4e2FaUv2iKqQvRmmx
l0QS2Lj1bD6UqeIaj+K/qvF9BMWdoYGX6lShG+xDLTU5RCD2XksLeKAKqfhQ
HrPQo4Qgi49l8h2quM7e0Hr3RzaBeV65Z3hQFdt6/WyUmWcJlzgDfuW/U0VZ
xu6m1kdFhJbQwjUbJ1WRbvCFK+TSFcKtz2Fh/r9UsfG+39wptjLC5e1W97aw
qWHbuDO1s6iKkDPOy7+DTw3CgxvSx2xqCKkhQz7hEmrgi1nPX+VfT9jz8Upp
jLwavEfLr0eJ3CeEbI39HaepBi2D4BiG/gOC93uSY4KRGhbOqQa+UG8l0INE
8w/ZqMH95fs1InvbCZbvRj+nU9WQzPQsc1R9RtAOqLA85qaGc5wtDmTj54Q1
owePnPJRQ6KigOrN/h6CgL/Ty7ytahgcncvMs+8n/B2W1jofrgaeyEEVyrdB
wjffibjiODVsKKFt2dP9kvB8Y6pURaYafOjbItNU3hKaX6zbfitXDbv3D1dO
fntHqPJWrq8vUkPhrd1vd798T8j2avJ+WKMG/4yWKYLgBOFQf9a1x41qoN5U
jxTw/kKIXbdpvvOxGj40Kx9fap4krHdfzH0xrIblgj8P3v6eIdC62z+NfFLD
yb4Fca+A7wQLRq7Z+xk1HLK46jc38IMg7WI8OMWpjvMiFyyPzv4iDNN3reLQ
U4ewWEWYx8RfQme7dTCvuTqODY0L7ehcJjRS+WoFiero3LztKOc7NlygXPOU
8lLHj7Nyl2onVyAI707pxasjpH2pINufB+uaKt8bHVZHwUwsUrJ4QbFLMLY4
qQ7To2X/ah6uhJrNmj7SFXWEitTdzLIXwIS5l9iGTnX0nLP7ntslgpd1KkF+
Q+q4PXalUZIpiqem328GvVOHA4U+NWMhhjLj4+67fqoj6aTNj1NV4gg3eHKC
KaeBM8aL8c8eSeKnuq1w+S4NKFHGQslH5GA3RmrPiNPAaeLJy01MeaQV0hO3
H9KAYMTe4juJCpCU8JxWOauBnfyfZ/laFGHGHvY8v1UDxcPzohyvlRH3Ou94
+hpNqJyrW/b110Bz7nlaiLom2skdMQG/NMDrcXmZvFYTTs8+Dq86oYmzjysj
lqmacPA3Lj3zWAt3ax8x9kRrovr83oolF10sHZ8T3vpEE4ntkWt29RqC4vS7
ndivib0yW/lmtdcik5stSWFUE4fXcDB4U9ZCLp5/5tWcJqJ0//B1mBvBLlS5
211RC2M873bkXDZGIsXtBGGvFix89nnaZZhhxWKZyBo1bbyIoFNFSDZY00n6
QTDQRvPpsvy4HBuYXHw5sNVSG7aJJ9NDPtkg2IHnXIWLNsRofnea0m3x+GyQ
GmmPNio8XY6NPbLDcStpqx3t2tiaf399STZwXahK9liPNv627bTgvQ00j1GX
q19rI/RlmwT/a+B7Rmzr0rQ2ygXups0rEbH+9XPXE1I6MD3plOVYRoTswbQt
t3fowF+zkE24jARTNznqcIwOzn/pGDJ5QoKrao0me4IO1F56689+IiGx492U
Y7YOGP5jRF0lMsZkbePe3NWB06p31y+fIOPPTJ8PR5sOqjaPuOwtI0OiLdRW
87kOPJUPDr5pI4O6K29F9HsdHD8WdHTnIhkl939kcgnogiu5dobpS0HLyYwI
bUld8Bd3HP4bTcGrYCUPhqIuupnbbwtmUCAgxFh91kQXsrHeN6frKIj0L72o
66eLj7tKXj/gt8cRI2KK+zZdjNk9eDajYI9L3C9C9kTpIvzqx4Hbxvboq+DS
bU7VxT5kPhH2sYfZckDdugpd3D7nZfDzoj2cXZqZ9vW62C48HVdYbY8t5xQY
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
xhsHHNwtSsSz8VxD3fus8WO/f/8WJ4K34s42vQ4OiMJwgUuaiDOm1w7MfOWA
yJ/872tUiDiW/bj3uBEnuktMoy6qEfFCt2Gozp4TJzZ0T6trEvFkJLAubiMn
hOu4ptbqEdEiZRHQzeSEUFTkOM2ciLJr/TPjw5zoUuAP6bQk4q0Y78O/c5w4
1nXlg4cNS9+bKMtaQS4I6r5+50ckovzA5VYBIhcExu2HY5yI6I1NjN5XyYWO
0299Fl2I8ErQbKrr4EIm5cDLBDcivNMEZQu/cIH/UtXgES8ixM7eVt6hyQ0+
vzU9Fzaz/I2PH5e9wY2n/HUMtSAixm0Nipq6uJFx162rdCsRrdKd8+LfubFS
Ku1Z7Q4ithb23eu34gFv30zbsxgioqjjSS/6efA4+SjFfQ8RbLPDPup/eZBu
qP5wMI4IoYJqdgN1XvAc821+F8/SM5d7evd+XnA7PLo7f5gI51vRPxZ1VoKz
6VylSgERFMGK6d+3+PDKhkIfPU+EbcTrx8uTfKi8O/k2/yIR/NUttxbV+Vn7
2lZM7BoR6vvr8voL+XGzfDSWrZq1HlELOX5nBJCmky7YUEOEq8XdWeILAWwq
Mby69zZrfpOFhI6MIHivJA99ayCCuv7nJYmLgvAvULEaaSdC5nWB15F7QjCR
6ejNe0oEyWd70CCnMFbmxYZ5dhLxe156tzVDGDWn2gqe9RJhv0YizHtcGPxH
ty3fGWHVz+ee7VnZIqjfV9aa+4OIv78DD2ZOiuLY/Do/j19EbFdN2XRMRgxb
di/9FFwkQrmzTtrIQYxVDy4aqf+I0CpcUAm+Lobg7dNHYlaS0Kx40r44XBxi
3sYMNwUS7pWI75hdswoT/a/H+ZVJeHTjw2yP5yrc90hJalclIVlaZXPEsVXY
7jpw006bhAfhgjoTHJJotN8roWdKwtMKse2cC5IIM7n3cqUTCfwUL8ub3NJo
7h64Ue9Cgsc1Jhe3kzRW7ZpJ3OZGwripwMq1J6TRdEVNvc2LBAsBC9adhNWv
rT4RnRRAgpyiiKktcQ3uLW7ln99NwsthQQHNWjmI5Ca+uRJHwrpck+BJHnkE
G+Xf9DxAwtotuX9v+MpDOOy5d3USCRF1t4v1uBWwZdjy8q6jJKzanPPxnrEi
a52EbD8UkXCYsMGsrUIJAb5aIqeKWfYfGPLeeKuE2nnye+JVEpSkv17TEFfG
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
wJY8N3lrbi78H0aJjbM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80794#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}, {1000, 
          FormBox["\"25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[225, 7], 2000}, {32.142857142857146`, 2000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}, {1000, 
          FormBox["\"25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 850}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793443144245936*^9, 3.793443173348229*^9}, 
   3.793443209441594*^9, 3.793469059897922*^9, 3.793485147612919*^9, 
   3.793485628506813*^9, 3.793529276031761*^9, 3.793529762565795*^9, {
   3.793529803230294*^9, 3.793529922140222*^9}, {3.793530270960762*^9, 
   3.793530284504855*^9}, 3.79353139532828*^9, 3.793532112019189*^9, 
   3.793538241081479*^9, 3.793628682718582*^9, 3.793631362738474*^9, 
   3.793632431936298*^9, 3.793632611471447*^9, 3.7936328930369263`*^9, 
   3.793635136477975*^9, 3.793640076054871*^9, 3.793640113444213*^9, 
   3.7936402184188337`*^9, {3.793640708734174*^9, 3.793640738153433*^9}, {
   3.79364093528004*^9, 3.7936409965058403`*^9}, 3.7936410297184362`*^9, {
   3.79364138168408*^9, 3.793641392771151*^9}, 3.79364657367558*^9, {
   3.793707647189581*^9, 3.793707667424821*^9}, 3.793717677413086*^9, 
   3.793718178336245*^9, 3.793718270759697*^9, {3.7937189465911293`*^9, 
   3.7937189636698503`*^9}, 3.793719543515883*^9, 3.7938013964348793`*^9, 
   3.793801476824193*^9, 3.7938015727493267`*^9, 3.7938016402503147`*^9, 
   3.793801744571207*^9, 3.7945070290943193`*^9, 3.794507438437231*^9, 
   3.794507498694736*^9, 3.7945075449917593`*^9, 3.794507665556529*^9, 
   3.794513112818922*^9, 3.794513181489854*^9, 3.794515034998704*^9, 
   3.794515319441284*^9, 3.794568645735371*^9, 3.794569008563019*^9, 
   3.794576053691139*^9, 3.794576689040523*^9, 3.7945781439439*^9, 
   3.794578432226119*^9, 3.794579364746234*^9, 3.794579493534186*^9, 
   3.7955138484531183`*^9, 3.795513896075691*^9, 3.795514551290628*^9, 
   3.7955157760087852`*^9, {3.7955161787173*^9, 3.795516186451459*^9}},
 CellLabel->
  "Out[1375]=",ExpressionUUID->"4bcbb298-d3ab-44c8-bdce-4cddf367246c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshot20nscritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "solns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2x20ns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2x20ns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2x20ns"}], "]"}], 
      ","}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
   3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
   3.793641549374053*^9}, {3.7936416596344843`*^9, 3.793641664167588*^9}, {
   3.793646587897244*^9, 3.793646591046516*^9}, 3.793707651970573*^9},
 CellLabel->
  "In[1376]:=",ExpressionUUID->"8a053f24-3e8f-40a1-b1fb-28dab0f4d6e0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
LWyeAmUXrbrXYR8+OhHpuYIKp/fcuL4Rm2+vipn5ZipE3DaO24TNau0eWyVO
xfvl5bQZu3xXaGCtBBWWRSMNMeyjpm33ybJUSIxobd2CXUH34ZdXpeL/vwlf
JbBPkJ50rTCigl/osRpZ7MqmttwyEypYLJbx3I693mUy4Ig5FQ4e/LFJDvvZ
bUmpGksq9A21ucljr9t4ySPQngqczfLzithPZh1X/ThFhcxBnWoSNk98QN9t
XypQdvhbqhLXo5x03+IMFZgSWz4QXnuicW9RIBWWP8tcUCP60aOZ6XKRClfN
ecQ1iX4+49YdSaOChoKkmC62/X4ZnisZVPB0vZ5IuOSH3jDlDhVmzhTykrEP
KPlFpuZQwfz12BzhB+nDbftKqeCdOvoSsPeHlrm+e0MF62mVTTTsQrEWSmAD
FTysu0IILyv/wq/4jgrxR2xZhAu+iz+JaqdCd8uafDr2kiPRnPqDeD7ZSY6J
nWPgkFYxQwVq+t0fBtgkuS1kNEsFo+nfDEOi39wD3c9+U6Fm5Nw1wk0tthur
OPTAYbGwkhH2tK11zIuVenBlvH+/MTbZw/zsq016EOqvFWuKXWuxVshgix6k
HTvcTNhcveHh6616EBzay2+G7fDH6FudtB5MZj+9Tvh8OPP4W2U9qPU9fs2c
WC+JbNXM0AO+ET2PXdjW/nPfdxnowbiFXA7hoQNPr7QY6cFu8cBhwtMSWo2t
5npwrNp1125swQJVRsc+PSiruiBjQaz3Qo7U46oHFoHN5ZbY3z8J8YzG64HU
Cv3zVthXU8ZqkxP1wC7C+QFhFbPigN3JeqDUy9NP2L3IZKIyXQ8e8g6SrLG/
+AY23MjVgz37R94T/rBsNGrncz3Ya+DNux879GERjatGD+4d3adGeOuxgD8V
tXrAbdC6j/DBegFnubd6oBYXfYtwb5yREWenHszJkORtsNs2319R/kUPtGNB
yRbb651/leekHvzq4jAjvC7E0E/2mx7Y/DriQnjn6DDr+k89UFikeI/w29wN
rzyW0GCCp0LEDrtG82y4tCANTIq/ThN2/KRP7hemgZpPJvcB4v5IWT9zbRMN
Ft6sliZM4Sg4vESCBtMTS/YRLn85SOtToEFfcOpjwiW7mUuu0mhgNSB10h47
wqgsTIRJg8FemRDCNnoyXLcNaMB1Ziae8GKVVWtKTWlQ3jpeTtiUr3FDpxUN
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80923#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
ZW8WaL4puOX3+roFCBmEM61h/x9FIr69
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80923#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
fDhZ97so7TcNXap+cYppfMjy1fEy0KLjRKRxgPdBPuw89FLz80o69hzpPRvh
zoe5br5Uji4dBQzdB5M9+eCz+7698lo6Jqo897vrzQcjSxpTFOl4vvSq2dMA
PjQqOWq0baNj+Ij0t8On+fD1eVzf4TA6KpWFWHdn8KFrdpvr1Ck6Kryr8w3L
4kM1S3E0KpKObY3OoWrZfEhozP555QwdZZWFduzJ5YNWS61swwU6+nqdZ9YU
8cHxlSBdM5uOpblu0pqVfHj6/uid3hY6Fl7oqA/q4EOOxsN/PNvomBR4WKKv
kw/nD4qU/eig488eyePmr/ngNJRYI9lNxxPl3t0zu/kwOZLfvfE9Hb0onekj
fXzQ/TYomfKTjnpSEwETw3y4KOLou2UpA2VPz/pRIUDB770L175cxsAyy1/h
7wUpcHnc/JWjyUAHG60zEsIU6J009WPrMFCxYZ+43QwKnk1rBDLWMzDq/euZ
r2ZR8H3y8wljFgPPBpj5JUlTsH389BktXwZe+VHHnVKloHyzKev2MQamC+m3
fVejQLVgao5GAAPH0h9GjC+lYMTr0Fn1EAZqZutPvltGQcSwzTnlaAaWj3vs
KtCioPi90r8LUhmY4d6yVXoVBTI9964L1TDwqvPWyo9Awdk5wcGlTxloNSsx
gIsUiBuZ2XnUMfCeWGNPqQkFQhdb5rY3MvBTo2lxkCkFn6xH/W+/YqBhhlX5
NxoFzU80OJtHGRg0oPo8l01BbO7ln2kKFlh2f+vA6p0UiHU5t29ZbIHhOvyA
T8Th4lp3RZUtMPt50Mf8XRQcP1C231vdAu3svocud6DATaXtpZmeBfZ+3BM+
y4kCxgWJrCFzCzQrCduSso+CGcFhNgbeFhjUNrBt4hDZ3/jwxKMjFrh48mN8
7GFy/vvtrtKOWaATe9fEEm8Kaji6H7Yet8B222pHEx8yv2r3Ca8IC2zmz0kM
8qVA5Nn6OzcuWeDZEOPTDf5kvzJjghLVFpgwv2bgXSgFhVG7MpNqLNCwdet8
+zAKnKeeshbVWiBP7NW5duJqKu1fjXoLFFi1N6TuJAUny5japu0WqOqTBJnh
FAg6Ztr5f7BAtTsy/5hGUyBw2zG/T9oSVehx34XiKXg63OF1db4lZvS7+foQ
x+pZ69jLWeKLpXtNe4kXlpnmti22xOaKuDflCRTo1GrceaZhiSYPI6Q8Eimw
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80923#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF13c81W/0AHBJEUJSoSVFyArZnGOva0ZUSCUNiiSjEgoJoZJQJCPr3muP
hhkZGdduoCJcDZQWUb/n93r9fn39wev9Ouc55zzPvZ77uVsOedocYWVhYYkm
v/73r+kRZlftZJk2y//9sOkJe70Riof/t+K9xLslQpn/bNY+UJwiVPrP9q4/
q24INfzzkNwVvWtCvf+ctsYyPFLo/T+HcJRsvyr07Z8d9t4vmPnChv9vrr8h
jkabeP9ZzHqK+TRK4J/9OtQg8ZvQP68rXTW8ZMnmfy4f0Wvr1BT9537jkC/X
jP7zD3r1WorNf1Y5r3aw+eh/rlwt96P2xn9+qC8sUsz8z08ezJyJj9/6z4Pc
skk29/7zgrd7NV/ef9aCcY5rNf+5euB1StiH/1zD0dTki9v++e0pts9KZsTB
omstRZcBS58O/6wdseAxh5oj8iCiEaRS5EKMzi/mZLQB7z9x9HQnzilkXlpi
CC7s8yEyvsQvMvU0v1Mg+KRK9sdgYqXMEdd5a6hVK/5yNIGYWsB3j28vvL03
vVb8PrEVld0p1xFYlstovs8nTpCLMRd3AZ3u7HCXOmKdHDej14eh/kTK+r2f
iPeHGaUlukPJpLu78w9i8ycO3f4nIfOY+uPDLGLIMj87ddnFE8LcBvadEhDD
YK6ru2ozToPvWFbemU0kLlt3My/DG9xcfeb9JYj3U9peZ58B+1Fd04sKxG7p
Od6FPmB8aFXyZU3iLRpfr1WdBbV3byYjDEm9l79oZp2+IOVCV4uxIvHq0jCG
hR+sf3Ph6s19JH5EsOpjih9wO5u9THQlPmzw+tIXP1gcFJJMPUXyb1rLHjXx
h6n9TP8MfxI/a0vxyPKHzr1hgvRoEk/wqVQ/HgC1L3YfK0kgDo1secQIgEJ7
0crKNJKvVavXqnEObtjV2D8tJV5Rf01sw3nYYz2X8GKQ5O+JkxFcGghGjKbx
oXESvxpw0CY0EFQtE5RHZ4hLky4c47gIQuaK/Z/ZxDFYTi1yWjAIBo1Prlkq
I44sPh0j3LRgaG/SOMKhQuJLo5mnfgVDtSFn2UodEneMlFhjEAL39LNtBe2I
/2gf3jISAofw3U2ZQJI/GOj+V+oyMFXs+B3axbG2V+fX1I8weFm+9ZDTALHw
CfVRu3Bo3fW16NA7sn7wcSNfeTjkK8Zan/xObFpateHcFTgl1xJ3aeN2ZEkT
GRdbdRW+i2vx0k5ux+APGurPL0SD9ohuU6Q/Mc/nv6zz0RCeYhx07PJ2RLrL
RK//NVgrYDu9NYmsf/NXzf58DCgvce9MbiDxnr6YbaZxcPGJ1xX/zu0oEnS5
41BsHDzz84U9r7bj24y38kF9cWA/FVKwaoZ4yYfI/a7Xwf91YmzEeglMU7nC
NhF9A2oTUo3cxCUwWJDt/t6XN4DDJvOv3k4JfHutfmW1+E2wWplXsUVTAms9
D86vPXsTkpoLPP8aEvffWXu04SaMXC7bPmRN1v+mts5/vglS8PjNI0cS93LP
9OOJh0dlzyx9vSUQvwWVn7aKB9bTbey2gaT+j1CNd6fjwVS6u2ZnhAS6jLyn
xd+Mh9fpQ3KfU4jnuPoLBuJhIfYbr2sL8Z5CIfFDt0DfbL5Jp1cCRYT3zomE
3YLo5SzBm9+QuM1BCbWcW7AxkGvm1TcJZOkZqCyeugXaJ0QZ1iKSKOJzT/n0
hQQI0reKAz9JfFtelj+UeBtY5/L51otJIXIXCb5qSYL17bqzICeFtVdMkhYn
k0Dp/ss+VzXiIPtxbs5kOGLCfoduLoUupZQjn02SoTnpkJiuL1mvSrGgNidD
rLqQ+vEmEqd80P5Qdwc2XAg/XHF8B7o8ZNU5kJ4Cyn9dynfTpVH+nZZha3Qa
UMxrLxlUSuOMeFBsalIaHL6z2VKlXhr5VjnGHX2QBnEqwxPC/dIYJ27RP1CT
BpOe+4VGFkl874CFwtc0uPvW7oKXuQwy+IU/9dnehyX1prrXPslgXEpkIh9/
Ogjy5fEE/SDxlsNWURvTQdZ5xWsvFlmsrWLW/5ZIh33zTWdsBWSR5cG2uSpI
h1IFg6z1mrLI99Y+ttkjHdwygCMvShZdDl6MXWxIh7ZQpY5nUnKYdl4pbPOp
DFDnfc56fRdx8eYNGJABOUkHVfajHCIat9mFZsBlekzatJ0c8jnppLkkk/wX
TG/BEBJ/mrP1eyPJ35Gy7sQAideKKomuzwTdyUuFy3XlkWVN8JHOqkwIkO1o
dTeSx7jqyZ6spkwoPCM0xqDI49uqnijvrkzY9KdA6I69PFqB5vzU+0yY4x+6
JHdSHgvVJTt9uLKgUFPFziFRHmu/eCg82ZMFm+M+zuVOkfwjXrd9x7Og+mBQ
bvEsqbdwJeHGVBY4K67e+/gXiY/l82b/yIK7/eqVbaw7Ud6CGvlw+QMQ3Bjp
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$80923#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.7936416699497128`*^9, 
   3.793646592258191*^9, {3.793707652489849*^9, 3.7937076680067263`*^9}, 
   3.79371767779669*^9, 3.79371817872689*^9, 3.79371827108375*^9, 
   3.793718964189681*^9, 3.793719543883092*^9, 3.793801396721732*^9, 
   3.7938014771106052`*^9, 3.793801573036935*^9, 3.793801640552423*^9, 
   3.793801744926989*^9, 3.794507029842862*^9, 3.7945074990304337`*^9, 
   3.7945075453935823`*^9, 3.794507665904826*^9, 3.794513113176043*^9, 
   3.794513181790862*^9, 3.794515035318347*^9, 3.794515319808216*^9, 
   3.7945686460654593`*^9, 3.794569008894444*^9, 3.794576054081661*^9, 
   3.794576689403699*^9, 3.7945781443433857`*^9, 3.7945784325699463`*^9, 
   3.794579365063566*^9, 3.794579493994594*^9, 3.795513848599737*^9, 
   3.7955138962217417`*^9, 3.795514551876521*^9, 3.795515776284856*^9, {
   3.795516178844199*^9, 3.795516186673807*^9}},
 CellLabel->
  "Out[1376]=",ExpressionUUID->"89325c83-f4cc-4029-a265-f2a949107491"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshotinfnscrit", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol20x2xinfns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol40x2xinfns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60x2xinfns"}], "]"}]}], 
      ",", " ", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "solns"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol20x2xinfns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol40x2xinfns"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"sf", " ", "*", " ", "10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60x2xinfns"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "prmax"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"1", "/", "sf"}], "*", "#"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "prmax"}], "}"}], ",", "5"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sf", "*", "10000", "*", "0.000089"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Thick", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Opacity", "[", ".5", "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"importtime", "+", "2", "+", "10000"}], ",", "2000"}], 
          "}"}]}], "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0GcoBHAYBvBzmUWEi/IFWV2U7OOck5GkTmZGmYfsdSUzIysjM7LOSEIS
spNyIuTKigiFcjriXCQj/+f/4e3XW09vT69ZYk6IkMlgMCzIQFfJaleoj9xb
bLLdD5365legOTNzDbYtW0ogi3MvhQWDSSdwRmXrBr4uNnqEE19s1LiQHcrj
QyGb4wNt/StS4VT3MPV5JyYbnjvLqbsvl2VQ9c28HD68/tZB3shnE3ThWHfQ
vEcUlX2X2wstshaot+d/UtguSzuCs+qFj/Dq4ICaEsz9hoGKR0YEsSFuTwPq
P4Vpwnhloj60j1xiQdEe2xMej2ZQtQXV3tBQZBcAFc1WX/BdxUg1kriY3KwF
+W0y6k+rtQGsz3M0hspNl4V09BvR2IaV/ECdDOLAupsubCqoYsEz0Y4RnJse
NoW1q2Jb2Fkn69knBv3w+uBRo4MY5jqWUD++xtYhr7ZKsk/vxSqhX+E4VSpL
KD0kTrYOlUG9lE2BHL0mL6jRNcLjN+xevieQe11/mu9H/ue+QbVzMC5qISrU
9YrhBFO3HF4KbKj/iYEarg==
  "],
 CellLabel->
  "In[1377]:=",ExpressionUUID->"9a735253-a053-4f3a-ba97-38d470fe7bc2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$81034#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$81034#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF13k0lG/cBnCkiJAlWylkGWtizNjyXNn3sS8ZE6JFK2lXkaUiUakfyi6J
qOxliRLKksqeJZEokpQlpXfec94388+cz5kzM89c1/e5576lvA/a+7KxsLA8
ZGVh+d9nC9/R19Vjxfos//dgNxQ/NCAWR/y/NVLibxWKZf6zZXNnQZJY0T+7
+MxWXhWr/ee+TecNo8Xa/jl1DS0iUmz4n0M4C+Uviv34Z1e3tPvfptjx/+b+
G0I3Xc/3z7J2X0efRQn987EWbSL+h9g/ixTx97Oybvhn+qUFx2HhJaf7fGys
U16y8ppHj6Jcl2xw1PP6mgdLptxyyYrbJPnPXowsj+z+JYdZrE1IGFtyFiW2
LfLHksd5T1ru55L656NPrLXVKUu+JPlTqCJ6ySUfDJte6Un/c4dZyFS06ZJn
8quEreyXTD2l7dWwa8llgptmqq8u+ZGRuGTB6JJ7clyMD00v+dfq636qi0vW
6eMrzhHc+M+Pjyy3yNBfckXWt8NxcUvuXaWaYJ+y5N8Be6tW5yx5CzHCGf1k
yVWd75LCPy+5f4vYM8OfS17McB5lZZH5Z/1Dr9XPrFkyo4PXVU9yyWf0rE7/
UlxycvrF9DLNJT/hrK8/iiW/P8A+QbaUgUpQHB9JyZFgad8qMO0kA0+jW/de
NN8hJHXPUh96ykCckfO39dEzAmkV9IN7ZTCrVnfNJ6SN8OT4FaJyVAYzEr2L
aq6DRPB+6p0vwTLo3XO4O2/tZyL1bWDT3SgZGHJHfW3X/k5UaxdM7bohA5vN
PUNfZeaI9ymTwnJpMtAcSLpt/3yRYFmhojecKwORu5cK+zmXQXKfn1d6iQwe
HpFQKGThwNY3dyI8a2TAMd2o5GrCDW+tj7nrm2RAe8zqxNPBh3PJ0q97O2Rg
LeP3n56zAJ76Ja11G5fBfql3Zy7GiqBwbO9exowMdjU38DYpiSNzt075DhZZ
RImG23MPrkP4zs5tB4RkkRS8dsW8hRTMvPkTQ/VkMWh2IGL2ojy0BwfGLpjI
YvFh/ucEsgIUPfO1L9vKYiGu4nfgoCJWMSy7431kMTHD2DG+QhWv3MJF8y/J
gp3Xw1a8ZTOquxx2F96Qhf26WMFl/up44CJdVpYqi4uVLLSrvBq46vTE5VmR
LNKtm1yNdMlwtpu/0dUriw/3cyolfSkwba0f6RuRxb0T0U2RnyjQot2gDH2T
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
7nBd6RyRWsPHrcNvhSFn+0qBtDlCTTtvbErQCkHrEnYejpwjbEijWV5iVmDf
ejDF32OOiFzBkNoqY4X7Fz460dnnCPZn5sIsOlaQjLYJ7XSaJWZ0pVjO+Frh
9FSucgjHDNGr0vr2RIUVNq5UakhNmyZSvvCfXvbECldGW+VqYqcJ77sOctE1
VmjdcV/+29lpYkym83hqnRVOVJHKTjCmiZm1/RL1rVb47C4Xqb1umuDnGt8l
9NEKVT3medsTvxMmIxy/83msIbxcpGEodYp4kEzIDDOs4dfdaElkTxLTJ6c5
vLysIbA8xikqepKguNz50rfDGnERzuUTAZNEOR9fYedua7BurjH7uWWSqAvu
39oYYI1HublKPO1fiXfep7cXRFhjeGvmbRuOr8QK+fLE4HxrzGw4qFtwapzw
uE/hl1i0xnRkgcCW1DGiZNscbyuLDZaznCl/dmGM4F3xeFXoMhvQDb6NbPcf
I6rpWzjHOG3wdbXSsS6DMUKay+hvkaANwpbfcW4YGSVGfOwmrBRs0NEgNXBF
fZQ4IL7vRZCjDVrqm1abdo8QweFpIb05NmD1LIgt3D5M8BzjsPDKs8G1yVE9
a5thInH3foGR+zZQD9Xq/qk3TBRaamdMFtngrHHc/cPiw8QI/+tatic2MNFn
k5DuGCIsk1k4Fd7aoDnAU2Gr7RAhXLr98pEFG/RduulIpn0g8kYlbvJa0VAg
b+bz4fB74kJSuGe/DQ2VBTeaBH3eEz72E7L5djQkhVaecHR8T6yrqHhg7ULD
b8m9qss13xORMe51l7xpmLmZrOvydYDYTUmY4jpBw7GPXSYLv/sJ6TAhM44s
GtJSDtjuVesjFrWCeDqzadgl7NYWJtRHdE8MvcnKZb7fekd52VwvEetS6GHy
kPl9L11yD9b0En8V7Q+HV9BwdTSVXcyxl+h9HZO87C0NxFzCefsz74iyiNkd
b9tpuHcto3iVzzsiTne7QkYXDULhNcrvzd8RlrdViwz6aejfozPzZs074vHx
5hchY8zrjzfeNZzfQ9xQ0YyxG6dBv7jb3fd6D+H/4Zaj1CQNzVq+uxdP9RAk
q30D1T9oyDvi/eK4eQ/BztqWGTtLw1/VNoltaj3E+2JdP89fNFynbYl0EOkh
KvwyNqn9oeFQZxKv72I38d8G7p9//9Jwo+5nzuWP3cT/ABseezg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$81034#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF13c0V3/4AHCrzKxklz0+9t68H3yMzzISISOyEmUmlJGQEhJCRkZWVkZp
IbuibBEayihCVkb8+p3z+329/7jv8zrneZ77nHvvufc+As4XjrtSkJGRoX+H
/93xrrN9zXP1OmT/t6j0uX0+caWg/7dibnpWLVfhfyb0jNRkc9X955MuGy+T
udr+84RsrP4trsH/fP+IacwNrm//OZKmViyOa/U/W9vkVS0tU8H/m34v0s7o
GNN/FjH/Ndt6k+0/B71TR+mrXP+Zo45lkpyc7z/bxW+f+Ma+73yX7287pPYt
deTp05vW+9a7eDr1SPW+VbJOFqXI8v9nJ4ci+5LJfV/D82RkzO27SCVp8Mbq
vucZQwjedAL/+WITSV1BZd/x/GtsL27t+/FX/e73WoL/edg4cvmW0b7XKxvZ
icf3rRqq7tTlvu+Gw7Lrzcn7forl5q+Z3fdY2UkDn5V9bzGnesrs7ltjgqm+
7LDQf34WeABfoLPvF0VL/ikp+x5nkMk4nrvvHb9zjcxl+9ZG0zS3mvbdOPIx
O/rHvie1uVr11/a9W2A1S04m/J91fPoUwo7s22GY0VqLf99hWsQrWxL7zsmP
y29Q3ncTTWfnRdj35/NUC0oEYZC+nMIkLnkCkQ3psq5YCsNpbFb5655ixK8Z
rvrotDBwO5Tt9T5tRZD3wu7COWHYkOu44xI5iE5Tb0VKXxSG9aPju3LWX1CE
t2rxzwhhGD/rP1rB8wPdHwjoLr0pDPr0N38Nqf9Gzeo1y+5pwmAiPzb1S/gP
+py7yC6aJwzKn7IfHG/fRWQHpbW+PRQGjtL42kkaSuD38nTKfywMjwKPYmrJ
qEG3vzjm9CthoF55K2ltSA/Oat8fHusWBtNn5JaHhpngao5g3/iwMJCEPe9q
WbFCi2c2j828MHgLfAyLS+KA2rlz5xzWhcG9p4uxW5IbCj00np8hE4GbnNHH
6b/wQrTbiO15NhHIjuA5uIkXAGNnlswoLRH4Ynw+ZiNODNS/fJq7bigCu48q
f2QoYUDidKV6gpkIbKe82An4IgEMDoTRdBcRWFh3ODN/UAbe20RzVsaLABWj
vRn3O3lo/mDhUZsmAsd5kw5T+ipA9UnBhob7IhD3ksw0mVERki2bTrbWiUA+
qdsaq6kEVuabaR/GReBrVdlLflcVMOrtnJ6YFoHy4FvdN2ZUQM00TWVqSQT4
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
XT76tb09U3hNeD+Iz/JC/wO/aHIM
          "]]}, 
        Annotation[#, "Charting`Private`Tag$81034#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
/y/8HwVWn4k=
          "]]}, Annotation[#, "Charting`Private`Tag$81034#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
5P6oNIOQTZ6e8VpXMsrZ1bSm3gx7tMJfPFxwJsbXaBgl36zqtzBOU77sSPrO
enTe7TaDx7tXvMcbHYl7dMfl3X1mQD7XI8YERxLpfllS/b0ZHvEyC4RwOZIy
KTlj87FV/Xjc7rPJ7yObq11Sg/+u+tNpFpJxzZ7kFjTvXfxnBuuj6aZvfO2J
XOaO7VE05tj997BytJY9MTwxX5pIb458aZrpHaN25LjO2a6r7OZImWsNvaZg
R4Zf1W1sFDaHl8aRaLove8ndcf6rbCbm+L69c0452ZokZp9y/WBmjjcdebtD
D1oT9z1ToiWW5kitjR3gJtaEr7a2zNTWHKyvLF1C56xI0tl9Lcn7zdFcwDhw
ytWKeFGuzDCFmSM6wI820WgPEYrbaMBw2xwtkTeX060syLLycdbeAnNoslgU
c1EsSP/U59e3i81xXLbLrZHbgpyzrXDSKzfHP+2zDU6PzcmK1J7AU7XmOKhc
ki3cb0YGu85eW/vGHJ9ct9+032ZKauLnD7zpNkeewH531nETckHNRTK3zxwP
nbe8my03IcZ5MpXaH8yRJdXRqqdnQh6GvngWPWGOga41dHV+xiRjp+JZy0lz
bLE58aBIzZj4D2dZC/4whxCNxWzZOmMiYeLzseGnOdhuTnf/yzIidLRvb52b
N4fh2pogTS8jMnRfzdt10Ry/Xdsjk+WNSK13rqzcP3No+4l8H1k2JJe2M/9a
WTGHz2hjLbXdkPwfQXlf2g==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$81034#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxF13k4VP3/P3BbccuuhaSkMdlCtplBzpMY2yBJZJnJkqRNolJkTYtK+2KJ
qBSyRJLKdluLiCyVUskaIltEfudzXb9v9/wz1+O6zpz3+7yW97zOao/9m3fw
cHFxPeTm4vrft+WOvjel/Y8Nuf7/h2/jcr9O6SvE/1kr6UZCnvSdv7aqb3uU
KJ3/145eUy8uSVf89Uf1kxvPSb/96+QlttFnpL/9dbhA3trT0uN/7bTtdvbI
KB/+z4vmw13NVor+tYLdcN+/MYv/+vBrBnFjXPqvl+WLf+LmXvXXBV831jUY
yP91q3n46Dmz/zyZVbyUtfk/044x3Gt2/udCSfXJ0kv/+anJcrlHff/5+b2R
g1eurPnrDiG1m5uT/vOs/+5isfT/vIHoEThX8p+L2z4knhj4zyUC1dWHQPnr
z/v4hrStKHD8EHZGtHiFIVeLkcSYAwWRcX67E9k1hnL6obTc7RT0rNR7c9Ll
tyFuP3fdv5uC6anKdgnnFcR2/pnwdYcomM/fcui5tDYRtpeW9j2MAkHxn04t
M0wiuTmg7kEMBU2986Nrn2wlShmPRndeo8Az/ZXbOW0v4nPSj6XU2xRI3z6g
xP3Aj+BauM7gWwYFafxyf3J6gwi5Pb7uKQUUqO5wZqZrRxJGTWnR28sokArx
5df1jSE86N0ZK+souM/9vKJo7BIRcUv+TUcrBTub3AzkI24SKXzbJ+O+UJBx
JrCkoiqZKPdNlNk2SMEp9YEF3il3ibz+3bvZkxRse+E2fpkrg7jjo/fMk0sB
O3tZzPrkHOJKr8CiXYIKEG11OvXVIJ844d3mvG+xAgQPbl2Uwy4kDnXfTT+4
UgGOnQ/vHxB7QXh7BcwcUVSAkvqOg7ZqZYRjl7HlcU0F/IqnuLdTKwhzD/G4
SAMF2L3rkhE7XE0wvnT2n2IqIDxiS4Yl5RWhvD2LcX6TAuL5yi02ajUQMp3B
py87KyBUToiS+/YNIcS2enfDSwGtneNnb5i+JeY6pJVu7VMAv1/rGpPhVmLY
pe9I6hEFOD0w8zzU+I5o2HZCKuusApzNd/pFr/lMlLbb++RdU0Dg0Y7sweEv
RI6jfGFhsgIS8wI/B77rIi45lDj+m68A9pnyIUK4j4h8ey6tplgBzFyqn5Dj
ABFg7zpVX6OAb6XysbOlg8RWu+lr7R0KmE/4XfZ5ZoQwa6zu+dijgIvNvyQd
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
/wHibMh8
          "]]}, Annotation[#, "Charting`Private`Tag$81034#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$81034#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}, {1000, 
          FormBox["\"25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 0.5, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, Epilog -> {
       RGBColor[0, 0, 1], 
       Opacity[0.5], 
       RectangleBox[
        NCache[{
          Rational[85, 7], 0}, {12.142857142857142`, 0}], 
        NCache[{
          Rational[70085, 7], 2000}, {10012.142857142857`, 2000}]]}, 
     Frame -> {{True, True}, {True, False}}, FrameLabel -> {{
        FormBox["\"Prevalence per 10K\"", TraditionalForm], 
        FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {
       None, None}}, FrameTicks -> {{Automatic, {{0, 
          FormBox["\"0\"", TraditionalForm]}, {200, 
          FormBox["\"5\"", TraditionalForm]}, {400, 
          FormBox["\"10\"", TraditionalForm]}, {600, 
          FormBox["\"15\"", TraditionalForm]}, {800, 
          FormBox["\"20\"", TraditionalForm]}, {1000, 
          FormBox["\"25\"", TraditionalForm]}}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{35.6, {
          RGBColor[1, 0.5, 0], 
          Thickness[Large], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 63.99999869387755}, {0, 850}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793443144245936*^9, 3.793443173348229*^9}, 
   3.793443209441594*^9, 3.793469059897922*^9, 3.793485147612919*^9, 
   3.793485628506813*^9, 3.793529276031761*^9, 3.793529762565795*^9, {
   3.793529803230294*^9, 3.793529922140222*^9}, {3.793530270960762*^9, 
   3.793530284504855*^9}, 3.79353139532828*^9, 3.793532112019189*^9, 
   3.793538241081479*^9, 3.793628682718582*^9, 3.793631362738474*^9, 
   3.793632431936298*^9, 3.793632611471447*^9, 3.7936328930369263`*^9, 
   3.793635136477975*^9, 3.793640076054871*^9, 3.793640113444213*^9, 
   3.7936402184188337`*^9, {3.793640708734174*^9, 3.793640738153433*^9}, {
   3.79364093528004*^9, 3.7936409965058403`*^9}, 3.7936410297184362`*^9, {
   3.79364138168408*^9, 3.793641392771151*^9}, 3.79364657367558*^9, {
   3.793707647189581*^9, 3.793707667424821*^9}, 3.793717677413086*^9, 
   3.793718178336245*^9, 3.793718270759697*^9, {3.7937189465911293`*^9, 
   3.7937189636698503`*^9}, 3.793719543515883*^9, 3.7938013964348793`*^9, 
   3.793801476824193*^9, 3.7938015727493267`*^9, 3.7938016402503147`*^9, 
   3.793801744571207*^9, 3.7945070290943193`*^9, 3.794507438437231*^9, 
   3.794507498694736*^9, 3.7945075449917593`*^9, 3.794507665556529*^9, 
   3.794513112818922*^9, 3.794513181489854*^9, 3.794515034998704*^9, 
   3.794515319441284*^9, {3.794564067595448*^9, 3.794564081635975*^9}, 
   3.794568646464917*^9, 3.794569009315996*^9, 3.794576054547822*^9, 
   3.7945766898090973`*^9, 3.7945781447547503`*^9, 3.7945784330282927`*^9, 
   3.794579365451996*^9, 3.794579494458177*^9, 3.795513848821192*^9, 
   3.795513896440954*^9, 3.795514552379333*^9, 3.795515776495537*^9, {
   3.795516179166985*^9, 3.7955161870906963`*^9}},
 CellLabel->
  "Out[1377]=",ExpressionUUID->"42b388c2-fa4d-4fea-910b-6f579b008a4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figoneshotinfnscritcumS", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "solns"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol20x2xinfns"}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol40x2xinfns"}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60x2xinfns"}], "]"}], 
      ","}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindow"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
               ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ",
            "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
               "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
                "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", 
             " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], 
         ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "300"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char", ",", " ", "line5char", ",", " ", "line6char", ",", " ", 
       "line7char", ",", " ", "line8char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"amplitude", "+", "baseline"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<No intervention\>\"", ",", " ", 
       "\"\<20% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       "\"\<40% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\"", ",", 
       " ", "\"\<60% reduction in \!\(\*SubscriptBox[\(R\), \(0\)]\)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793641180339437*^9, 3.793641315838718*^9}, {
   3.793641443959331*^9, 3.793641448676724*^9}, {3.79364150849207*^9, 
   3.793641549374053*^9}, {3.7936416596344843`*^9, 3.793641664167588*^9}, {
   3.793646587897244*^9, 3.793646591046516*^9}, 3.793707651970573*^9, {
   3.794564095058695*^9, 3.7945641010495043`*^9}},
 CellLabel->
  "In[1378]:=",ExpressionUUID->"4b8e4eb4-26ab-4e84-b8cb-fe26a22f8af6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
LWyeAmUXrbrXYR8+OhHpuYIKp/fcuL4Rm2+vipn5ZipE3DaO24TNau0eWyVO
xfvl5bQZu3xXaGCtBBWWRSMNMeyjpm33ybJUSIxobd2CXUH34ZdXpeL/vwlf
JbBPkJ50rTCigl/osRpZ7MqmttwyEypYLJbx3I693mUy4Ig5FQ4e/LFJDvvZ
bUmpGksq9A21ucljr9t4ySPQngqczfLzithPZh1X/ThFhcxBnWoSNk98QN9t
XypQdvhbqhLXo5x03+IMFZgSWz4QXnuicW9RIBWWP8tcUCP60aOZ6XKRClfN
ecQ1iX4+49YdSaOChoKkmC62/X4ZnisZVPB0vZ5IuOSH3jDlDhVmzhTykrEP
KPlFpuZQwfz12BzhB+nDbftKqeCdOvoSsPeHlrm+e0MF62mVTTTsQrEWSmAD
FTysu0IILyv/wq/4jgrxR2xZhAu+iz+JaqdCd8uafDr2kiPRnPqDeD7ZSY6J
nWPgkFYxQwVq+t0fBtgkuS1kNEsFo+nfDEOi39wD3c9+U6Fm5Nw1wk0tthur
OPTAYbGwkhH2tK11zIuVenBlvH+/MTbZw/zsq016EOqvFWuKXWuxVshgix6k
HTvcTNhcveHh6616EBzay2+G7fDH6FudtB5MZj+9Tvh8OPP4W2U9qPU9fs2c
WC+JbNXM0AO+ET2PXdjW/nPfdxnowbiFXA7hoQNPr7QY6cFu8cBhwtMSWo2t
5npwrNp1125swQJVRsc+PSiruiBjQaz3Qo7U46oHFoHN5ZbY3z8J8YzG64HU
Cv3zVthXU8ZqkxP1wC7C+QFhFbPigN3JeqDUy9NP2L3IZKIyXQ8e8g6SrLG/
+AY23MjVgz37R94T/rBsNGrncz3Ya+DNux879GERjatGD+4d3adGeOuxgD8V
tXrAbdC6j/DBegFnubd6oBYXfYtwb5yREWenHszJkORtsNs2319R/kUPtGNB
yRbb651/leekHvzq4jAjvC7E0E/2mx7Y/DriQnjn6DDr+k89UFikeI/w29wN
rzyW0GCCp0LEDrtG82y4tCANTIq/ThN2/KRP7hemgZpPJvcB4v5IWT9zbRMN
Ft6sliZM4Sg4vESCBtMTS/YRLn85SOtToEFfcOpjwiW7mUuu0mhgNSB10h47
wqgsTIRJg8FemRDCNnoyXLcNaMB1Ziae8GKVVWtKTWlQ3jpeTtiUr3FDpxUN
kl6fWHGQOA+a9siKuNBAQ1PgOuEnr2pzM0/SgFH+O4twTKWGorwHDYzDi8oI
kwqFSGQfGmja3ugiHBTbp2sfRIN7Vo6CDthCpk47M6/R4Iel5GXCX+gdLXIJ
NDg3dzSVcKWu/p6SJBrMV4XlEXaSl93/MpUG7I3Grwk/WD3uyLpHg5M7NiwQ
Nn5zyleuggY2n6YOHcIO0A9LLR6lQdXjiPWO2M12R22U2DTYOOS3mbDEKSPB
3E80kFm0U4ZwXTrvlYxJGngoF+kQ5v+dEh73iwY7SpgOhO/mlbq4cdNhSefs
XcK/XiTKfuahw67BY/cJm7w/O3ZkHR228FU/Ivx1ud7BAwJ0kJtRryOsY99o
YSpOh1hhyY+Em/hY2nJqdLhiYC51GFtc5s3PLA3s98HyhE+h/JKt2nQYmckg
ERZy9lIUBjpkDxVRCTvWcGxdaUiHn/Mr7Qj/9BFcybKlg8P53suEDWP+vDxk
TwdTCf4EwimZ/SH9DnRY9kHrJmHqu9tz7UfosGfCKptwlKzyVI07HbhmOqoI
b+k17MwIo8MxYH0hfOG5doFlBB2cT8R/I/w1Sy6c8yIdak+ozBJ+7sFNOnGJ
DrbntJY6EfVxNccq36ADNytQkPBdFWtmVSEdwku4KYR5BA03eT6gQ3XlEzph
v3mt7xKldKD27DMkbPhaJCPiCR0iKW67CX+yG5g3e0kHyeJ5R8IKF46U9nXT
wb1wMIxw/Emr6Et9dND3eBtJeMHCwJE6SIe2FQXRhJs2b+e7M4r35/Hua4Td
S8ZdXKboELJ5aybh4oFTkn+WM+Dd0MAzwiIvnf7krWAAp4b8C8JhOXtbDqxm
gDKH20vCe7w1g17wMsCR3VlP+MequZ4LIgxwctXsIqylHnpVUJkBdk/sJgm3
OwiqpZAY8CB1/Cthz5j8DjF1Bizf4fOdcO6HTiFpHQaIBnv9Irzpqny6GoMB
fBriS48Qz+dUe97ufQwo5DDZQPimiLNZhw0DTqf6CBDW1l80te8AA+BKshBh
r9TtJAdHBtT4tW0iPGoS+NjNlQG51CXbCL/JlqmNDmZA0RN7NcJH2yuO8oYx
QLZKVYPw0sUWK6+dZ8BA+TItwmTrcybJUQwQSY/XJVzI2dKSHc+A6aQQGuGr
jmcHarMZwKy+tpOwzabG2UUtDJBzvHGUcNW69e6nOvH1JjmfICy1Yj+L1csA
eZKiK+GJb6PtjSwG2FyL8CQc/Hr+Qco8zrcqyp/wWAVtO+9SJgQcYgUQNi6+
cCt0BRMWi6kFE16fuuHyCX4mfK65HU74rpeCq6YsE3gPT8UQXnPc60OuIhNY
nOxLhD0OPLYRU2UC40Vb3N/+GTKMOIEJcSEx8YQbNttJt1kywV3WP4VwwsqP
G57aM8GluSSNsMP3U8syTjDhJLkxg/D3uughtyAmFPTduUf4UkP275sXmeAR
rJ5LWLa5lv/tNSZIZeTlE7brWsSUyWbCof2GDwj/7Nlkv7cY1//VrYRw3IC2
X1gFE5w4/R8Sfjl2KmewmQkKWfQnhH+NF/TqjjGhIy+ngrDiDHtt0m8maOm3
VP2td6md1y4JfZhMPVVL+NWC9Gl9DX0o9Bt5TfjHr28BZGN94J0Srv+7HzMV
YSR7fejZJtJAeM9U5EVZL32oT5puJFw8tvn6hmR9cOU1bSG8rq/k1uJqfXj0
TbmdcFONtJn5hD6onWvvJByVd+N3ipABfLER7yasf4377ie6AZgrSPQSXuYf
ZKHpbgDxu/r7/t7f6yYXcT83gEOCZwYJc9yzKxjiM4SrfzSGCT/acv7m6eOG
MDe2ZeTv/iUVRPM9N4QIFt8HwgLDwm94BYwgW6b3r8u3R3DxuhrBr1PrR//e
P1r+SQYVRpDwfddf8xp6yAVzG4PNl/C/ntHewnHusDFo0f3/uke+qcXvqTGI
TB//a8Yo55/8NSaQIWf/14U3kcSInQmoTVj/9fJtT5IC803g5bM9f21boMYr
Om8CtKWWf+0q5Pz6rIUpDAnt/uvAsPSgnmxT2GNn9tcbHh6IOfXbFBSWG/x1
Hkv0BrexGZgW6P21eCi/PucdM/j+B/319c2rvi8smEE9D/mv/w+ECSFR
          "]]}, 
        Annotation[#, "Charting`Private`Tag$81164#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxF13k4Vd/3OHCkCMlUITKEzJR53OsO3MsdUJIUSZIkyRRJVFKEFEmSIRUh
ydxgSKJCIUOmiJuUpKRBKb99Ps/v2/v+ce/zetY6e629zz77PFfB48DG3Txc
XFwq+Iv4td090VH/vsKS6/9/eCnS/sNSKej/rJeVllEmde2fGW29pVekyv95
i+ePmvNSjf88pHOKkiDV9c/ZK+xi4qQ4/3yMv2xdrNTsPztvzbn9+Qsv/J8F
F45tp61Z/s/KDp8mHp2R+OdDz01Q2qzUP68qF33NzS33z5WjlNYX5or/3EM/
9iWB9p+/F9euZG78z0bhJjuf7PnP1eI63+vP/+e7VGn50on//ODG58CUlLX/
PCikfWlj1n+eD9hXK1Lwny3QOH9C3X+u7R24cvLDf67jb24OAaV/HvHjndJn
YEcprrRTXIy4ukliXzdjS3o71+3WRfJmkUZ33LHB7dWcliWCnAfbD+zDzi+Z
OM5tjdz5fh3TCsF+dY1i/o2JovYb5U1GYetfG/X85YDqTUq/7EnFLrotkiWy
FY1kTa9UycG2L+JzvbkdcS3RMucUYqfqJLJU3BGpMy/G/SE2Kd+LNrALNfhc
Wb31I/a2k7TstH2o7P2+fW7fsVkPnDtD96Nr3qb3d3EpA9evr59OuB9AJ716
XfwklCFKMNagPvcgCnl7vSBwDY5rP0wuyA1AXp5Bv0JVsbcxWwfyAtGWMbLt
0Q3YXlfzA0qCEN1DNP2EObaC2UxCTTAyeTP8/rQ1Hq/v5y3GixCk7l5skmiP
47XlJ9vZh9Dq4SOxyS44vluyZvLKISTkxuhL88TeZTVw/Msh9GdQSi3TD+cn
O2jvsQlFn7ZNhOaG4niwI9P3eih6sfWkZHE8jqcGVZvuDUP1rzZ5l6ViR8c9
vdcehkq2KFZXZ+N8i3rKM7PD6Pzmui2PyrGXNiQoy4QjJ4e51FeDON8pSUty
UQSitTePD43jeGzYzo3REcjYLtVw7DN2+aUj3vxHkRRLr2eKVwWidEzipiUj
0SB9/4pFWirAFfR8VOhWFGprNtvNb4Tji+In/H5GoVprgYplJBzfHqe6wuoY
yqLmOUpuxv5ruUth9BjygDfJWhE4fzBi34L6CTRhtFnMuU0F6rtIPz99P4n6
Ktd6uPZiS/uYjm2OQc8MZu54vMHXD95/LFIZgwr1zjrs/4ZtW14jc/gU8tN5
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
B+z1mif+t95ygt8WFuzAUXIhmvD/A3URs7M=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$81164#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxF13k4Vdv/B/BDKhGZKkSZMpXh3qRQ1uc4B4dznGOmkoRwM9wSUTehMoZU
8i1TlKGMheRmTKJkirM3ZUgSmkyVouK7fs/z+2r/s5/X8/6svdaz9l57ry3v
+rf1IV4KhbKeh0L5v7P5ofHn9e/uGVL+/+CjSR95JZWE/udt16+mlUllL5nZ
1lOaLlW+ZAf3bzWXpBqXPKAVRYuX4i45cy0nMlZqZMnh/GUqMVJfluy4J6tk
apoP/mfBxXAn041rlrzZamL80XmJJQe166GrX6SWvL5cdJCHZ9OSK4ZprR27
FJZMMsKn401/e7a4dh3L+rd3/KN38Innb1eKa83WX/rtf+nScqXjv12dO3Us
KUlxyf2rNa9ZX//tn/7etSL5v70bjfLH1/12bU9fesT7367jb24+DkpLHvLj
+6TDxA5TWMdRWI4oBFXssx22pJdj3SFtJGcQuuOuCzY4985pGCLIqnb62xv7
1p3xMzwmyGXlfLjGcezebNqurywU5rsj70MYtk72sPu8FarXK532TMYuLBG5
LrIHDV2fXKechW1ZuHL/bSdEWaGxa6QAO1krwULZBVG78iJdHmJTb3mY9rmh
hsPpG/Z8xN4XYZp51RuVvfP2dp7Ftqh27Ar2Rdle+lVulM1Amf88cdblbxTh
0bPXT2IzhAnGbK+/eRQdf5uTf2wjzjUfXs6/6Y883APmg1Wx97Fa+/KOIYc3
Ruan/8T2uHHL/04AYriKppzdhS1vMBNfE4j0Xr96F22Cr/fiexGz4zhSdynW
S7DEeW15RCc7CG14dSrm8l6cH5Ks+ZAehFY7M19cdcd2M+47Mx2EfvVLqWX4
4frLVpqeZsFoYt948M1gnAfasnxyglHHngjJ4jicJwdU6v91AtX32niVJWOf
i336oPMEuuOgUFmZiet319NaDE6iS3Z1Do/KsVc1xG+W+QfZW80l9/bjevtE
DcllIci0s3l0YBTnMScOWp8LQTs5ybpvprDLr53y4j+NpCy2kZ/4lCFMSy92
UjIU9TN81y7TUAZKQPvw6qIw1NZscIh/B86XxY37fQ9DtSYC94SoOHeKVV1r
HI6u0/NsJe2wFwzd5IfDkSu8vqwRguv7Q7wX1c+i8R12Yo5tylDPpX6fmI1A
LyoUXff3YEsf1n9jF4lats/cdX2N2/dXPRapiEQF2y5Y+X7FNi+vkTkZhfy0
niaekVUBSqbc6GbRGPRVefeaIl8VCHtvoP/sVBwyHDZqjg3GFv60yDsfhyLT
GaFeZ1UAil3GuMHxaJ2E7aTiNdz+1aKewz8JSJfHuyOlEefdRIKSeSI6XX0k
KrhDBeRCz7a7XkhETUHHkf1LFRi6OaQdSiQih4nwEtEpbJ73sfvcL6LM21Ge
k/PYpacd5IouonH3+E1ty1VBLjZgoHX2ItKWu9yTL6IK9YfjrrpRL6HgvqsX
ojeoQuaOKL6xuEvo54Uva9yfYk+FxGtrJCPeuQKRDZvVIbOosv+aUzrSXXSp
sCneCpbnlOgdjFzUek6nvUldCzLTbiualRSjTYkf5m5PaEP9Yhhfqls5+vDt
1SCh/Se4bBcA5ul/Ufb7qhbhhG0gZ0d/or2nDgnL5k2OjOhAa+P6cfHsBhT3
1z2PTCVd8HkgoHLa+zGahYIRr9AdYPvz2X8uOj9BAX82lq97tBPSjGSmJBdb
0KvixvPP5fXB5cR9ztGcNvTjMDdV7aQBTBnvXOindKIt1JULHlW7oJ/I/Svy
ZycyvSHveXe9IfRumb5a9uE5CpI9oPDaCcHIrREavbALbf1oJ9hjAdASn0KI
sbtRpS2rLtYSQG7sx9Frlt2IVmN0zNAG8PughL7RphvtTdDqy3EECDjrnKjg
2I1itFcVBLgB5Cu+7lnr2o1GA6rNxU4AxA3EvcoL7EaZvxRiLbIBfDLr80NT
u5H4min+xnmAil59I83hbtRVExtl9gsghbNBdfNIN7rks3lFxyLA7JFVJdKj
3UisZe+yl3xUYOd13+B5jx3x+NekMBWydytvr5vuRiI/UmY2KFJh5t6q7DkK
F60eM+4/xqSCzMhY7pGNXMRXl1qimEYFvr90XiXYcdHLXXTGqwwqtLM2tdk7
cFHJg49DKVlUuKXWbSO7h4v2VuwWE8ujwmzYJq1cJy66W/QqgFJKhdZIYd08
Ny5yTlPUH2imgvSsO9PzKBdVnihoTP5MhRbvFxVvz3ORt07Vi1VMI7hz+3G3
YA0X1XcShZUWRpBfXEk5WctFa32nQj0tjYA+Y8w/VsdFdTmblR/bGUHmTFB+
TQMXia9P9A9zMQLrf8Wt9j/hoqo5d8FvgUZQybQjPLq5SLBOePdIphGkqOdJ
3hrnogIz18zaWSNon6jYLiRCIJ2t8oZozgj6Y2wmFEUJVCs81Ff3wwiEV//o
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
r+E=
          "]]}, Annotation[#, "Charting`Private`Tag$81164#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxF13k01O/bB/AhlWRPhbahEoUmZM992XdGJSnLJG2yJVmKqJBIhAolkyXb
zFBRWjBEWlRTslS2KKEFLULUcznn+fXtD53XeV/LffscH0POw2/jLn4KhaKJ
X6b/t9rV/4I7UG5A+f9/Asay/l0yqeR/Vs9Ku3RDJvefrZ+2Xs+UKftnJ89f
lckydf/csfakcYLMq39mzrePiZN5/8/HBG+sOiXz45+3Ol8pGR4RgP957t9j
LuZLxf55pcPX/vvxUv8c/EyHpP2Q+eeFZRKdfHzL/vlmj3Hjc335f26xODaS
YP6fRzlVC2w2/metIzo7Hu75zxXz1o5yk//zbRNZ6vX+/3zv6vDB1NTl/9wu
rJq+Mes/TwbsrxIv+s8bSJ9gQvV/rmp9mxk9+J+rBRsagmDFP3f7CnzRsEZH
yi+wl59JKM2Gkt8d0dJ7t1bvohGqXoTWNQYa3NrGVQwIXLnn4rcfXVDaf5zP
jDBmTxxTCUK35Rrr/7QhkT5a+Z8i0Rq5PZ4TDoSrc31kz3k0q0Q8S9yZdGcN
LVC4gqazZrsWuhDKLBX998Xo82vP2CowiOHL/BhGDdqwYLf5252k1itzkfNn
9PZoc2bafnJjYP9+t1G07b2tL0N8SO5e3bs7KSuBMvH96wmGH4ne3brNV2ol
RM49tZ6bc4AEfcgrOrgUc9WalKKcALLbM3AiRBG93abxbf5B4tRrZHVUDb07
uyCgNJBYeEhknNBHy+l9S6g8RHTedQ3EmuG812Ns6+dBZDWDo3OGjnlVWTTP
Lpgs6go7lbIN813SlZ8yg4mwm/XrNE/0TtO3x0eCyVS7jNJlX6xPcVDdYxlC
vm7vD8kJwfzQZhvvvBDy3DlamnMa8/OBFbr7Qgm3bdPeG+fRUXGP7vBCSamT
fEUFE+s3cI0f6x0myY7VTvfL0HNqE1YuPkK2OIyfb2vH+i1JKtIzwok5r6Gv
ow/zU6E7NkaFE23785q9w+iy9LC9gkeJjK16yxcBBYhcqxM3JB1B2i185s9Q
UQBK4LMeYXYkedqgt0tQC/MZp/t9xyJJlZlQuYgh5i5xivNNj5Esk/zN0o7o
PwY75XqOEQ94l6ISjvXt4fv/rj5B+rUcJbc+VQDuK8Oxr6PR5PXN5R6urWhZ
L91exxjyeP23ax7vsL/9br34zRhSrJ7o4PMTbVVWufjwSeK79lHS8SWrgMKk
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

          "]]}, Annotation[#, "Charting`Private`Tag$81164#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {}}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {True, True},
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 18), DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
       None, None}}, FrameTicks -> {{Automatic, None}, {{{0, 
          FormBox["\"Jan\\n2020\"", TraditionalForm]}, {
          NCache[
           Rational[90, 7], 12.857142857142858`], 
          FormBox["\"Apr\"", TraditionalForm]}, {
          NCache[
           Rational[181, 7], 25.857142857142858`], 
          FormBox["\"July\"", TraditionalForm]}, {39, 
          FormBox["\"Oct\"", TraditionalForm]}, {52, 
          FormBox["\"Jan\\n2021\"", TraditionalForm]}}, Automatic}}, 
     GridLines -> {{}, {{0.5, {
          GrayLevel[0], 
          Opacity[1]}}}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 63.99999869387755}, {0, 1}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, None}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"No intervention\"", 
       "\"20% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"40% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\"", 
       "\"60% reduction in \\!\\(\\*SubscriptBox[\\(R\\), \\(0\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.793641203155878*^9, 3.793641316106018*^9}, 
   3.7936413911673326`*^9, {3.793641450128614*^9, 3.793641457813911*^9}, {
   3.793641514659644*^9, 3.793641549701622*^9}, 3.7936416699497128`*^9, 
   3.793646592258191*^9, {3.793707652489849*^9, 3.7937076680067263`*^9}, 
   3.79371767779669*^9, 3.79371817872689*^9, 3.79371827108375*^9, 
   3.793718964189681*^9, 3.793719543883092*^9, 3.793801396721732*^9, 
   3.7938014771106052`*^9, 3.793801573036935*^9, 3.793801640552423*^9, 
   3.793801744926989*^9, 3.794507029842862*^9, 3.7945074990304337`*^9, 
   3.7945075453935823`*^9, 3.794507665904826*^9, 3.794513113176043*^9, 
   3.794513181790862*^9, 3.794515035318347*^9, 3.794515319808216*^9, 
   3.7945641023703012`*^9, 3.79456864676711*^9, 3.794569009626143*^9, 
   3.794576054882169*^9, 3.794576690157279*^9, 3.794578145127552*^9, 
   3.794578433466691*^9, 3.7945793658445272`*^9, 3.794579494745161*^9, 
   3.7955138490319366`*^9, 3.795513896618595*^9, 3.795514552801112*^9, 
   3.795515776619658*^9, {3.795516179304944*^9, 3.795516187388535*^9}},
 CellLabel->
  "Out[1378]=",ExpressionUUID->"8fcdbf27-4d4b-47ec-a1e8-40b1affe18c4"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot break-pump strategy, no seasonality: ", "Subtitle",
 CellChangeTimes->{{3.793445775253668*^9, 3.793445791735546*^9}, {
  3.793461803106874*^9, 3.79346180437956*^9}, {3.793463026329142*^9, 
  3.793463027507155*^9}, {3.7955164317373257`*^9, 
  3.795516434032567*^9}},ExpressionUUID->"c9af2cbe-9773-401c-93eb-\
15eff50a9365"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "0.02"}], ";"}]], "Input",
 CellChangeTimes->{{3.793446122258461*^9, 3.793446135642728*^9}, {
  3.7934618271568108`*^9, 3.79346186369106*^9}, {3.793462009540318*^9, 
  3.793462018321295*^9}},
 CellLabel->
  "In[1379]:=",ExpressionUUID->"5e1022f4-99d4-4421-8e2e-28b3348558fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbptemp", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpnsprev"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", "sf", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpnsprev"}], 
        "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
           " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
             ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+",
               "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", " ", 
           "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], ",",
        "Automatic"}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Critical\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "imsz"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793440555957224*^9, 3.793440562287552*^9}, {
   3.7934406031532516`*^9, 3.7934406035891333`*^9}, {3.7934406435598097`*^9, 
   3.79344064625572*^9}, 3.79344092383211*^9, 3.793441084303793*^9, {
   3.793441245349256*^9, 3.793441270066451*^9}, 3.7934414366245537`*^9, 
   3.793441467463295*^9, {3.793446097780415*^9, 3.793446128296608*^9}, {
   3.793446947620717*^9, 3.7934469478618402`*^9}, {3.793447057506488*^9, 
   3.7934470620245113`*^9}, {3.7934471042355547`*^9, 
   3.7934471058731747`*^9}, {3.793447135977392*^9, 3.7934471395087557`*^9}, {
   3.793461810968658*^9, 3.793461812420525*^9}, {3.79346187541588*^9, 
   3.793461875705258*^9}, 3.79346199728846*^9, {3.793462345482862*^9, 
   3.793462347731813*^9}, {3.793538837356339*^9, 3.793538837628831*^9}},
 CellLabel->
  "In[1380]:=",ExpressionUUID->"b0c623bc-8870-4664-9ffe-49c404268b9d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEmnc41f8b/6lQ0h5CSmaEJHvdt73HcWgaZdOWrSikrEqRIlFGMlJCCJGd
kZBz7H3OkZEUIvR7/67r9/t8/eN6Xq/X+37f4/V634/7us4Bu0vmjmuYmJh6
WZmY/u//AVapb87qtWpM/+9vS3b3lI5bKvx/ncu88Ry3W/5/OlA8RXSdW/V/
mq7+Y/2ia8d/OsEo1ueX6+h/eo7k8mbG9fd/+kUHyeiH6zr8/7qs39a9SHvX
f5qN7bdvRfz+/7RaXesW7ar/aa/bOWkNE//Ts8HvXFz38f2nz6y7EON+6X9a
lWVwImTbgf/0PGtt/CtL/v/0duf8sQnX/2mJuhdSkgH/0w63A2vz0v+n29kU
Zz8s/E+/WZ+t3/JE4D/d5BIfs/X1/zS9/s6A+af/6X1hjp6U7//TkRv2Px9U
FvxPZ7humuQ3E8TS4qvn3A/KqVU1/JVzdBBEv016lstteWr9ot9vvvQRRFi8
7fO4YURtKYzaNB4piP4LNWvjQtfC7u+1nOLPBfFSaZzY6mtukDYosLtYIIiO
tB80Ly8JMMlMyXnTIIjuRf/o11AFXNkf/JntE8Sxehvbc0F6sDtRijL5SxDv
XLX81H3dAqoPfymgbRDCPTHTwinrz8CVTxdiBvcL4eiYdf7vNmfYZ8lxtVtW
CF/1SATFLF2GRnomqcNQCNWEjlW/tvcGHz99qZazQuj2Irt+3jQQhDYxNtd7
C+HHdmbri+4h0JYUOlUZJYQ7/F32cu8Ph0BpoaYPKUL4eppbbr3VfRCvqcos
KBZCo9YtvVMHYqDruF1Y7hch3FU+WCNj/xhCvzO5vBoTQqbbkfX1fIlw9HqS
TspfIVzyT3ljLfEcBreoCSVuE8bPTA4fj6xPBSVZ/+H7qsKYGLS79ZtHJtDr
uCrDycJolUQ+0bvuNcScKkoKcRXGm3mcpun0NzAdOGflEyuMgacNPtxnK4CE
7THK7lnCKOuD8zvV34NemjT3+UphFKPe8bkVWwwpny9RbKeEkeqrKc2ILAcz
682FJ9eKoNLlrhm7uApY/ZEdQ+YSwae7Xadf/66EE7u+k3S1RdDCd8Hiels1
cJxxaJJMFEGPT/s7U9gaoXh2TdbBdyIY434w2v5VEzjdeh7G3yCCYfyCqcGk
FqjI7NfZPSeCXhk7jB9TW8Fz7kTlitFBFFliGfMy6ID+cOPCpuWDqC876aLC
2wMRvJMxtdtF8WvM/qZLP3pA4U341YqDojjV0vdwqrwXHnyrk8q3EEWVt1vk
flj0gy6fRlZCtiju9inXWsoahN95g2Gxn0SRm409OJ1tCF5oB7rco4riW1vh
ItLZIVh2KxUKXieGj53dXH02D8ObArlkNysxtI4p+MlhOgI1a4w2TV0Ww7UP
UbEhZgS6Tc/6Xbolhof/aIfGUkdg3fcIC4/XYth79cWvY6dGgUv+eeX8JzH8
61Lw3vDxKEiGFEr6UsQw6c1rAdOOUTi+b2h9ANMhjGq8czpUZwzOn5v3ZNp1
CEeuL4eWXxuDG0UbR4JED+E91b7hTW/HINNcruy2+SFcLn+z+d8OGnxMMhRj
dz6EFtx0llcaNOiYPBMX6X8IAzV7ZP0u0WA1NOJKdOohvLr9vkNaFQ12dCT3
7yg+hGfXv1Jhn6DBwQOFho+aD2GBcXJp1lY6mH8YFEqYP4Tvf1+tKD1GB+f1
8w94N4rjC8mTvxW86XDNciNT8n5xtOTlp7A/okPaD9nuVD1xPDvkmdfQQocS
FUNdEWtxzHpFmqlm0KEl7Ez+qyvE88qiV44wM2Ck0/OAeKg4zs7x7di9hwF/
BCLuvo4XRzV563xfCQZsupL8VypXHKcjTjyxV2cAf3mBy7sqcRR18bvWQ2aA
/MbGb7JUcdy2QTGJ4cAAoxODGkWT4jhZLqX+wIMBZ9PmcpWYJXBN98rzgSAG
eM2y85btkkARw0h26j0GRABfOIhJ4P4vHxqCEhiQHCm7UKkmgV2up4XpaQwo
6DJw0CJL4PNQeWeOXAZ8Fj7ztdZZAnc9+NG2WMiA/queavrXJLBm+/ELhWUM
+FURntV4n9i/wieqX8WA9ZuT95ikSeC3zs8HiusYsPd0wa3WYgmM4m9z39TI
gCMZn2fNWyQwx0FLxriZATpzA7bfhiVw/ALvTEALA05rzDUdX5BA5iYBlVeE
vnyPXal7oyRiUstYG7H/Vu/+l1Z8kviTLbZkTRMD4kVldw7ISGK8+ZQfNDAg
18vg5ll9SXw42L7vXg0Dqqtsp0esJdEvvrx7oYIB1K2ep53cJfHWLCvnjQ8M
mLIOr2eESuLkKVYVyQIGrMlKkj2XIInL30/HrH/NgN1/8l9M5UqiXopn8M50
BhzS/rzlcrUk7vU5QD2eyAB8MHBtliqJ6yyO3aE+ZIDlwO9xjylJDDuwMfxp
GAPcxNmPLzAfxqbd/ndfBTAgplbmyLLYYWwWy3j/1okBr3YYPAuAw/g+I7D4
/UkGlJ+x3chscRglKYE5PEYMoC+FjbFcP4ymRyqddhxmwF0/Uxo8PIy1AUP3
z+xjgMzSTrrvq8O4fL/ZnXUTA24sJjGmvh3Ge/u7d3kS52/TcvecG6cUDqzu
Lg95TIfBD6rzt/mlkERNZFEJpkO+f/J8qoQU3pecyfa5QIdTfx0X+jWlcEOh
cGYc0uHl0swf88tS+POI4BBjiAZ+JeTFS/5S+GmVU9WsgQYmfoWLkaFSuDzv
yGv3hga/F/2Xap9KIVOKvFjcdRrgIuuyUoMUJs8Y9qfupEH3wt5//PxHcKOn
x1lBhTHIeR/4DySOYOXdd6ydPMR99x7+Z6VwBDWfWZQ4/xsFkYWXTHEmR3DH
F2abo7Wj4DEvvWaj/xFs+Ty5JdV8FDbN6bH8aj+CyYvVUvkuI4CzHhurbknj
iPnH+NDYIVg01hXNvi+Nai9OvFT1HYK8V1y6sQnSuPEY30MW6yEQOFse5PxW
Gm0dhtgbBYeAtZVtaWOfNDYH9z5VLxiExpx4hoXMUWRWrWUIFgxAyIYLrGpw
FPeNZ6/aBw6AiiMIihgcRZu3waPd+gPweu+o7aLtUXRNc/D2GOiH+xESlMSI
o6gzZJBzcVM/HHOtqKENH0VtxaDhfo9e2FLzYOTL1FE89ad3lq7RC/V8jszF
f45iL7e/0pFtvaBI3aAasVkGu0s8OUJf98BeXXL+YSUZdLTMMFGf7IZvL4Ta
9mjLYOYk56xFaTfcXV34wWwmg4ZnPzBlRXbDv4Knhzocif0Kih/2SXbDsCDt
hU+0DI6bHvUCjy5IuFFUcfapDL6Ld4qK0+kCi97wfoOXMtjBLhV3hqsLah4e
5uYtk8HDHpZC8RVUCPjBrMBaL4PSxwdRKZYKcoYdlj/aZLC16vmRV25UyFjj
G13JkMHcOdvqU3uocMbGMDfzF+EP0yD16wwFuEp4mx+uymBBqivvjc8UCL/y
ab3TTln0frKYz7hJAc3mGGHT/bL48UTHcIctBZYPOmspiMniEvvNo1ZAgQuD
G2+woyw2XHNyjltLgVNPuMbkDWSRcajvu9L3TtAxFzFwtJBFsbEnTvfaOuHo
RtncBzayWMzg9ksr7QS+ao2dFS6yqLS7YCYyoxM4rpv5TrnL4taYhlmLR52w
KGvTz31dFgPOjfhyhHYCbfqcpt5twp+6jrBK705oe+mb4Rktiy2fdrbePNdJ
3Nfbm1ISZFEnUqnm1NlOyOKKdW9Nk8Vjtr6MEyc74XHbC8pKriyeyKMG3SF3
QkjEG5VDJbLY9JW7ac60Ey5rlT8/US2L7OwhstkmnWC90sga2kL4V8zWUUis
GxR2nXtHlUVDY46PfMTzcpforYPDshjfa5n++0Qn8B+ck908JYtlSvwfVYj3
bxlak6C8IIsvj8eprT3fCctPtjK5MsvhM5lgdXPfTmCY73N8tFEOqwSE3I+G
dULHRvHPVbvkUMdH6MKbhE6orFY8/HO/HPqw5XS3vemE19d1Y/aJyaGTkjN3
an0nxMtZLhrKyOHX6vorEiOdEPrDzsZXTQ79Fj4o+zBR4GrG5ap0PTmUOJTU
GsVHgTNnAw52mMvhPrVLzt6aFDDijoxitpbDs9UR8mquFFBsfzIr6SyHJ//M
p09EU0A48uVxqyty6G/NIxBWRoF/K58OvL8lh51lm7OLeakwWdgaOnpPDlXt
WRZtzalAvdQ/sS2e8Je0683ecCrkDS0WnH9N+Ou0zMu0tguexbPxxBcR8eUc
PKOs1QUR5F036j7JYX3EcnTBnS5wqJEy4KfIYbL9xMA9nm4wC1DLNR2Sw9Eb
hX9Z3LpBVd5o5/UJObzWcDOP9qEbdr9y7qf8k8Ot9ZNZu9x6oD7ymXvUQXmM
rJlYWv+zF/K1sykl0vIok33Q69LpPni+WqzCUJHHKutTbBsb+sDv8jdWTZI8
Kgeut92e0w/iFhwJf3zlMS6FW6NfbxCiefyq7BvlcZNbsfUD/WGonbKdPd8p
jz6lXgWK94Zh+aP2Aa8heUwXBxuvjmFwctgWeGdBHsc3WVtKWI+ASk6GUo6A
Am6qINjFYRSuBN51LZRUwKirtRdCUkYhneTx+KOiAi6rif+1GxqFbfMw/9VU
Af3qRA/sOzkGNDXK23l/BdzctdQ8IUeDvdvKBv+FKmAzpfLMBTcakEZebNnw
QAEXilhO6T+lQentixd4MhQwvKknZ26JBj9PWjwVfKeAQQ1JoqUidBAWV2qU
KFdAjtL58TpzOkS3sohihwLqqSZJZqTQofbFxHH9AQWs9jVs9G2gw7LH11Dz
7wpoeVIyNWKKDk5ciaMOTIpoXVEg4iXFgKcTQTsublTEW4mF7OamDPha5qLh
vVsRx91XbD3PM0DFTiY5TFwRT95u13r+nAFXZLi/PJBXxBMP+IzfFjMgnZVp
NUFDEU/HPHm5p5UBvdQx8TRjRbzhIJ3SO8qAbVmNp1+fUER1x6jINX8IPrn+
Nvy9vSL2C/i8vrdhHK6ZxhVXXFTEvj9x4uFc4/D2wHVGg68iFhy86vxHZBxo
v+w420MU0TO0qHJQZhz21urp9N5TRO5fVyj6OA6kx5KeY/GKaHj8cZCSwTiE
uu1MnU5TxHud8snF5uNQqrLUtvBGEc/HWG1qOTkOPzcPMjOXKmLA+/bFANtx
EB6qkWKvU8S4iX1cHfbjYPUuy3ZHmyKyTUZldTiNQ/St6Lt7+xRx/l3p1G2X
cag97l0mxFBETnv5fXOEXha1npT8pYh0mtsfAUIfWdbgUVhVxMmzPEp7ieed
Wg4aqG9QQnemP65jduPwNHmzr8FOJfw0nbv5ts04fHX//ZK8XwkzBE0y1xP+
sWp3d1qJKWFBUVTSFcJ/Fc4KFidZJSz/cvJMAxHflfE0mUuohLPphvacGuOQ
/iHC3sdQCf39l/fZK4xDb9SVBzePKWHfZGLHO4lx2HbmeGX4WSX0LA+/uJV/
HHSkVWcenlfC7Zc/8t3YReR/ncD+RG8lbAlIPcC+nsh3xvS13CgldGOvYQv7
zgBT6pZfy3FKWM950et5DwOK2I64GrxQwt+m35fXE7wY4XTVcqxQCSXsIp17
MhkgJfhHgmdQCXVNqUU8ZxnwhMyV6vKd8H/tXR0wJngwWIm78LcSKua0mXcr
MKBj6BoraYMyTifQ94VvZoBvEvNAqLQy7mw+oWqcT4fhFn7LDhVldBb9E5v5
lA5Gq5qNB3SVMWifyfUXIXTYZx36vvS0MgZoBT26SqbDJ+6N92dDlPH755jr
HFM04Hi0U92GooxDoXOOG4j5xrNG9n3WkDKajonZNs2PQf/vYxKLE8porbD1
+JnuMXhLfsIVw6SCSu/8tNiej8GxbftmG0RVcG8OlSdVfIzge5EU2WsqOPnu
etAWGIWjwUosmw6o4q5eF14rm2EIMml8LHxIFXN0PNh2qg9DK5eVOMqqotrl
z+xdAsNw8c118lV9VeQ9tqgZNT4EGX0Vz7uuqOJAzdeWPM8h2Kegq5b+SRUn
NVVX4qIHgX2K7A0Oalit7u9JK+qDk0Wj7CcvqmF/96V9MiF9kBHs+czdRw2t
vjudqjDtA23uuJq0SDXcMvJzIZbeCzd0u3dwFKjhN5/oSuDuhbnnZ95QWQAZ
vNtvKhI8o3Xhp+bsFsCRe2HpP053wwOFIMpGbsC941yc+8S7QepLyqqaJOCW
wJIAsZYucFumGaUdA7ydwC+7j6cLiuu8B8vPANooWQi/nKHC+ofrPahugHzl
A9s166iQJiqWsDEQMCBTYh+zDxV+/y6RFAoDnJ8zTdUj+o1GheEntYeEvQM7
TaYlqDB47ML4lZeAWVFezo/HKeCj3KnjnAcY1eJZy1NHgS18kGpVRowJ9CKt
8HQKpK/LYDavB8yfnPgxf5sCauNbbXXbASliBNueo0Bns2+pSj9gR/h3+x0k
gnfyhrmkxwG1nnHpjylQYF2cobfIb0Djk1urFvkp8NQ/v2PvP8BO0Sq67RYK
cL/ZzLWBBXHXWtt7wqud4MRfVRfMjtjKd0T/9I9OyIvx9lrdghjF8thkI9G/
V1jFhXx3IfZZlr/S7OoEPd/B9l/ciPTJcL2tBD/FTMQEXeRDzEutrLnW3AmD
1vpHxoUQD5UEvYpp7ATx1pUB+0OI9rdvptk1dYKPRt7dfilE7b7NXD+/dEJ1
vpPqSTnErsn9DgadnbBVhGeyXRnRxnn5mM9AJ5x+8iXeRB0xaMDEM2SiE9I3
hug36CCy0ZoMfJY6Yfa6wh9NI8R3VpYc1hxEvmYm08tJiJO3VV8rHyD40e65
peJxxKM5NEleRSJ/HZbr8q0QaTdHvdgtKMCvy/5O0o7Y365kxOFOgYvF5Wdf
OSOmamZ5HHpIgeJDV7cKXkAs/95RfPk9kd9nIh+fuSPqex6mjfZTwGxr7wUu
H8L+0slP9zdQgfFbq3FzMCIz7x7Ody5UkHFe9A27g6j4XPmTciIVbnTlHFx3
F/Fuths33zcqcJbvDl18jLgYXmx8wLQL7KQaZTyeIZ5pUm0iRXfB6xeBI9Mp
iFKOmrrrKF2gc5uBo68Rxc69cOS8QJzvxac/bPIRr3oM1UaVdUP/OdKzrmLE
cQ2De2+29YCnWcnflmrEl3P0SeGaHkjliiws7kasX3+N8udkH8xEoKPMIOLl
TcXSefV9oLL6e0fuGCL/ndqEv0r90D5sfSV1BvHVuriRE6IDsCb7sPg9VnUs
jokQfPFgEGzV2p87SKujVHKNJb4aBi1bIY+b8uq4ZbvtFWH6MIjd8NZ5pqKO
1UJOdvcER2C+kmeCoqOO+k8oWqGJIxCp7SBjeFodbUbfeCXeGgV3p0JWlzPq
6BXkqyxSNgonbq/vCnFUR93NM7ToX6Mg0JB9vfySOjZJlO1vsxqDEqO52iMh
6ngsz86pZD8Nki/oPjEJU8eo0FDxVSMa3Lr75Ny5u+oodFvP8KsPDcxaVbem
PVbH0DFru61NNJD7eW+4MlEd/7JyJ139RfDM9uH8/hfqKO7mq2/JRQc6OfTk
nhx1pFkGLoadoUOTB/WQbJ46Hkpn3dlzkw55sWKrpPfqqF7skpj2nA4BlJYX
EZXq2EUxGknvpYPDHz7PjFp1fH3U7fjgAh30ua7q1jSqY8jUrqq4bQzYeZpz
cvWbOt5f/5I5DBmw5O9aztOjjolPJ3LrLRkw+PTDfYVBdXxFkv0R7cqA2rJN
9pZj6nh6TZMrw58BWf22su7f1ZE7kGvwSyQD7v97y3bvhzqyHnn21+gpA7z4
1nVn/VZHpxXDaAein1mpH8uuX1THuqPz7jzvGaBhlxEwtkrYa9jq6vWJAQeD
l8zWrNPA0JacQT+iH25KNRLYv0EDeZOE3CW/MWC2+tmc8mYNzAuKK3jUywDq
2EzdiR0aqFjfbFI8zIByVs14zz0a2MTZtPcpnQGpIrHnH/BqYFfOdg7tCQaE
69HVcvk1sKX2wIaSKQZcclXc1iSigQssF5mZfzDAIjxihCGugY68RzX5CK2U
1VfAIq2Ba+8aCeybZgBf0+E7/PIaWJ3YWcM0yQDWqZunQEUDnz6YMmlhMGBy
U4e4lboGZoxUD0cSvPZVUvifj44Glhb19WsMMKDQ1OdrrKEGHm2UfjtPJXjx
8ueUPDMNHJmKfvH6KwOCovd6fbHUwJRf9X8vNzDAJe+i3uQpDTTKTWPRqmCA
SXsF94YzGihcYtInUciAo7+3Twk5aqAOfW2oTBYD9uxy/KjhpoFDG7QO2iQx
YFX2fbTtJSIeauzkmwcM+Ox9Wu6JrwbaMWsd+e5FxJv2ZEogUAOfz5OK7zkx
oL+Nkvo6RAOLR/b8tiDqPythsaP6ngZ+bB/zsyL4lnvUaGY6TQM7c1c3CfTR
IXVbxEvfLA2U2J43G1VLB0losFn3VgNT+fe9Nc2lg0a8djNXKWGPodT2M4AO
58zUMrXaNIh5/mmoDScd5q9fO/uFooEbV3omJJdpcCOrZM+pPg08mVFMCx2k
QQyr/O1LDA1kP+drOvyS4PnSww7xqxoY+Hn/ndYjBI8QY8GMmCaK1IsdKpEb
g0fHbL/5SWniywBI09w9BnwhiZEscpr4ZP+n2qdzoyAzwPWXW10TdQw/XW1+
NwpWsdup2sc1cX36iYRgyVHIZl73ICFYE3lsPwlR94+AcTeNRbdXEx/YzMxv
WTsEn7/1Nr4f0sR/b1MUzg0Pgs7XtuiDdE1sK7i/3F85CFhfzss+q4l0qVuC
u24OgkzhI9lmNi0UrXt47BvTIHA/0HEkH9XCi2yPe2Y5+iEuSuVQtYIWOt98
UZ38pQ92hkn/lFHTwjU0UVLCgz7YdGPf9d36Wnh03+QtH64+YLo4H9Nlo4Wc
tu+H/oj1Ak0/vdo2XAt/npEl6zp0g7320/DWe1rINldMm5PshkF8YKYeq4Us
4SO2H5a6oEs+oJc/WQsjFJNPT8R2wbGjHi8epmkh90uHthDHLmiTdHNZl6WF
k3cV8x/IdUGT0LHfYwVaWBQ2l2bXRwX9A0Ylxz5oYdOQ9xvjd1So3atxo65C
Cx8n9Nz4R8y3mnsUdBRqCf8POkWEO1ChYockx6tGLdy3+IaHCamgukWwjeur
FoaX86pfIeblEnbux+GdWrh1p+v7qWUKvGNmFTw/pIWGT+0jtD5RQGrl73gv
TQsrsh3rlTIokP3nZ67xpBbOskZ7eNyngOhvumf5Ty3kKOhuW/Ej+OVHn/Lh
BS2Mef1HaNiZAgIT7czJy1pIdRFNEz9OgWRaQ93WNdrIkZfUR9ejAO/wx6ib
bNrIEkl24VWlQHxfAXmWQxtjuzZ/7TxKAc6uLC777droOt2lwStBgZiO5wPt
nNpol3h9y+JBCmxtjUvT4tVG59tdHu4iFIhqjDpXwK+Ne/QO3okm1tnrgo8I
H9TG6Y1FudbiFAj95LvwSEIbR/Sa5PqlKbC2/FIZ21Ft/Hb7rzW3CgVuFDsG
+yho40+dpbE9hH9x9ovnI1S18dGNuonPlhR4vSnq2DMNbbRsafWcdqRA9Xs+
fKurjeMSg6V3fCjQczZftNpIG0Mo3RPPoigwu1FvB4WkjaZr0yXk0iiwvrBn
efyYNnYd2xdN/kiB/Wcu0ZZPa+OTUK5tyz0UkGNf27rlrDaekoCPMn8pYJz/
qJjfSRvJeao5a4h6OdiIpcie08bF2xI/3dSp4Le+PFLvsjbuiJpIdyd4IzqP
5HXaUxtvhumM7XtAhQyrMduLftr4+sfcJ49yKvF99tW/GaiN86Ab4jtFhclT
yXtfhmmjuhvPShq5C9ayyLCW3NVGmQ1+F6jhXcCdW/ej6SHxfEXh4y/VXaC7
9sen2URtnPk8+lxQvRtscoKyWVIIf3W16u8Gd4PH8d2P9mRo4+Yyf+nO+m54
kaXqqpanjbRLjk67rHqg2PKrOem9Nl7/sWrMndkDrf8cVBxKtbFkwJ2J828P
rJAjt4TXaiMF+vJ3pvfCieXugm/dRD0v9wtX8vXDpfSLSYwBbdy3lq3uR2g/
hJqtCfs7qo0i4R9b6D/64V2qqNWBH9qo42hEvtYwAJuNfdZcWKuDVaqys/6f
B6E6cZfpOnEddL/xZbQkcxh6dF8pcB7RwVG3w1fItGGY/anCLyang8xf6sQ8
D4zAfh2HOVPUwYK75dEzsSPgN52XkGChg2K/drYd8xyF+491br0+qYOfB+9V
fcwchZca3RcrbXRwQy6JafPAKHQ8Ytagu+hgi+5zlQNaY3AYzBjS13VQ4nbB
o47VMfg+96XwXZAOjqwVn8+QoEF6tuktmTs6eDCf+2rTKYJHuE355R7qYIfh
6hpaLg0orS0zhY91sP5njMZXCg0e3Db5KP9MB1km1/yZW6HB+jljK8VXOhgd
WSA0rEWHqqxmsZLXOmhk+8k93ZHgEzvjRaV8HXzCnKmURMybilzNdR+KdfCc
qPihZoJffn8xeqTyUQc3nRjZfqSMDrmhTQ5l1UQ+grfbN3fSwU3V6KjaZwLA
h1iep03TYSjTsBW+6eAnmbX/OLmIfnq28VlFtw6WlTrIlRxiwIk9hhfUB3Uw
+NaM4ysVBuz48ln505gOSt6Ehe+GDGi5ZcCuOaGDhvuWtUJOMiBM5TO1akYH
tfrFnvs7MkDrl/5LrXkdlGIJr6VcYsC/Vw2eNX910E1z6lySDwNKzuhr6TDr
4huLLqWuQAZ4cjZsr2PVRV7rH7GRt4j5vUVvSJdDF0Pet2+pDGPAREh9bv02
Xbx58bJCAMFL6cp6Afqcurjrl152YxQDzs7WGX3eq4uP5vsM3xJ67ytdHkN+
XbwwK88kT+yn2taNN4ro4poztnkOhL2Hu3WLjCR08fcubRcN4n0mzbWhzdK6
uPbTNncq4Q97iI6liYIu6jk5jUv6MqBGqVbgi6oudvHEjRhfYcCNn9qzppq6
2Ph3wVPVhQHKGTUVrXq6qHhBv5nFhgHzNtr3SCa6aJztLZRrzoC3u2qs28i6
eP/C1XR1HQacb9ISJ5/UxVZ3EZ8aBQaIBFcvtdvo4mmGd7mGGAOGFbUaLBx0
MapvQqSSm6jHS02nY5d00YPCEzn4hw47bKpkKB66qDG8/3g0jQ4tOzXXnvDT
RfYNk4l27XTQDtJIPnlLFxcnGONBmXRgUvx0sTtcF8WfKLUMxtCh9Ie66un7
ujhlpHjrGsEX0tbq3VYJuhjw1mpvmCmdmP9x55m3uqhFv171bpwGXdMfhwcL
dTHI06+yrIXgizR4e7ZUF2vTr5GV3tGAfQeY2NcR8dy6W5vqR4OFKdU7Tn1E
vIZ+Iv1raWBEPu0XNqyL3P3DVUfoY/CiyOd8Nl0XU9o0eaQ/j4FR8Duz2Z+6
uDx1YEn33hgk7xHlCmDVQ69MbT8pgkf0NHdmxh7WwwsJ3Evi3KPw5PH3xuqb
eshhnNaTu2UYplfYyumhepjK90FsYHoItOyF3rBH6uHTpqXzu1qGYFriTIzZ
Iz1c17n8+1nkEGhUfbPqzdRDbx/rP8bsQ/B9qmLqV7sernm/uqq7YRCA3D+w
u0sPHd4FC0u2D0BM0d+viv166LhlLwtLzACoBcsVBjL0MM/+5imH3QPwYE92
wMYVPbzO2J7Mu68flDXjtggI62PvLNf9VOVekClIpr07pI9Fa2LG7ZZ7QFIk
s0zriD7Gbfc0HSzrAb6NZeecVPRxUOUh+zXNHmBtH657Za6PMs/+9Cyf7gYm
7clnSif08eHp2lp3oW5YLJzzbLTWR4pxhveFmS6YjF8vOOWij76Hjm80iOgC
Gsf2v9cv6iN7p+81y9NdMBDA07bZQx+PzRsfV5QgeMVO8oZUoD62uvglt3VS
oalD/nhliD6Wu+/Zn/maCjU66pLm4fp4Je5BXeIdov8UGbCM3NNHy2jKmVKC
T4rELHqvxurj715G/w5NKuQ9tX63LkEfQ1jkJ94IUCFrs3N4bLI+krplWZJZ
qZB64/JZ4XR9/Bt5yWdyggLPZn0V3mfp48rmhbzkdgo8dgjeovdWH00Xruys
K6NAdGckjVqoj1n3hRZcMinE/PGozLVUH+t7Heh3n1AgpCQpZqlSH9t17pxT
j6DAdfFX5yLq9NFqg4D5nUAKeD3L09jbrI/Bnz/luHlR4PLWUq6cNsJ/roi7
Py5RwDWoZkaVqo8DdOdo3vMUsPvdUtfSp4/iNslvl9woYOVEfWY7oo9/FsTo
kcS6JXXIc4ahj/cKqKNdlylgYjBhdHNaHyeKtHpo3hTQK/0tsP23Pr6nx88U
3aSAuuTq0otFfbSjV+y3vEsBpWS2tqP/9HF3pY1iRSIFZLZve1W9zgBb+U9z
/MulgGQI9w1LdgM8H6aisbuGAiLzAsdpWwzQpFTgCHsfBfhcJCS9dxmg1OZQ
54EFCnB3y7Gs5zHAAkMe7/hdVNhphL2P+QxwvnawFeSosKlc/52osAG6OEt+
bT9JBaYXVmcNjxignhdLXNcrKiztcFLolTPAvYyGhxZE/X/durTlgooBLtYI
PGtlIc6Pa1DZXV0DZDyMu9Z/oQsGeyJi9hsb4IUb7CZ+6QQPG8eee2NugKx7
82UODRO8eySDq83aAGsignOH7LqhNuXtjJ29AQZ6xi79fNkNH3d9qPvlYoBl
b3ePiM90Q95is+cuDwO0Ta4yVwnvgbjKX19PhBtg2J6RI35jvRDCXPD+yz0D
XEvx2/9Now8uq3sl6sQaoPO+lnVXU/pAr/KPi0yyAa5LvOkXebEf/lSs/NtS
aIB+tIKpdbsG4VQFm2TdkAFGcpTsZDANgw5Tww41ugEGJe3UW4fDII3hi/mT
BrhTzfvA34Bh2FjBUfNiwQADCq8a0f4OQ+nHbVYBmwyR9bVMsuT0CGT8a1Of
226IZm4lajcPjkIMxIic32OItT6Gk8VnR+H8x92/TgoYooX4gb/BraPA+5En
XFbREG/sTjG8kjgG7P96L2WrGWLd/fm4nqYxmFd7ZimgZYjFbrtr05bGoKWc
78A2U0Pkz9F7JUuiQcnqEOsdC0NcUfF/MOFL8IVayuTqSeL9vZSHw8k0CCgX
Kpp0METZRn69YOL77LZKS7R3M0TfV4fthTfS4ZhaRnD3JUNc8490e1WMmCcD
XF1JnoaoHdcQyK5Ph8PlYqb1fobYN+TuZkDwxd7VCRm4YYjv0sV7PgbSYb1a
DnfhLUNc7a70Of9/f19QdpiWct8Qt1uTPK5W06FpZaaR+5EhjiUxS3+j0KFI
Ne9tdIIhbpGXDfcfJ+bb61fj1j83xIYphQq3RTpEl8lcD0w3xCSHjZ0v2RgQ
sDJnN59liBe/V7Qp7GQQfPJe78JbQ1xntKNGYD8Djl33kRwtNMSRYZHUiwcZ
oFGmuPN0qSFOV71m4iPmacmVpcWvlUR+dqfvADlivlYtHdCrM0Shw9Oc7UoM
YL1+veZjkyF+PBMlOqJKzOOlallybYZoIv31mxcQ8/ryv/s5FEPUWKu95RGh
P6tUegn2GeK1RZt6PTUGFF4LskoYNkRTeanBR8oMSCnV1NjOMETlrgNud+QZ
IJb1wvDQlCH+PbUmIVKaAW+eMFtqzRpi3OFYvCTOALk7Z2ysFwwxRbthnbwQ
A0q9Pjp7LRvixs3Psr7vJeJx3HflHrMRar4/unJ/BwPqydf9MliN8Lg6NU9q
A8EjGr3BlRuN0CK761brCh06pJSjurcaod6fW4e9f9Lh1P74R792GWFg0+8z
h0aJ+mxaTOLgMUK/+u/Vv77RYfJ7YZ6akBE+kHnwo6eQDu5du0qPixmhit8I
z4Z0Ovyp86i5fNgIJwIa1jsSPMCSJk19oWiEtq65eZUX6RD5MHrog5oR7hD5
qvvlFB22B81879A0Ir6fr34I6hB8YPt6hdXECP2D5j0ruOkgxyUmcM7OCMdv
bpg6XUqDUrYw8RBnIwypzgDTFBpozNNlE88bIVf8/siiMBqYtKfpffEyQgmL
U0ZrLWngHHXg4tEIIzzk7TS+iTYG0/43vI3uG+GzNn0p7YYx8HAbuOEYa4SJ
5t0ePNljcEM38WFckhE6R2D1+8tj8JiZq/jvOyOcDrrLEJgfhQbPreuqe41w
7tjsdru5EThk8++JhaQx2jjb7fzUOwTHThrc6TlqjFUZ9dK8RUNwwyLWy07R
GNlm/2HgwyH4ZnCIfFnLGAPK1b3OGAxBoPxxjshTxkiWeqf9tWgQ2rfmBlSF
GuPq218r1jIDsLpx6bxBpDEW6A/FNU/1w0E27dNfo41RPoKzMeRlP1xf6ZYf
eGqMPz6bzHTz9IPId9afS3nG2HGQa7vjhj4wHyMN3Cwyxpsqmfaytb1wbfBp
8/pyY7zSc8a2JrgXvnZKZ+5uMEat5iy1UOZe8K+ysZceMEYxy+yj8uw9kF7+
ilQ8aozrtm85mvOlG1qLfwN+N0aj+Ji45EfdIPQmfK/JnDEqkOu4yaLdYJb1
jf3bkjFunVCfVpjrAr90vsXTTCb463ek+vdPXfDlaeE3140meDLvx++f9l2w
FMdcPbPVBLk0V0Kd5btA8KFRnvduE8z4kRlH4+gCk7txyas8JijlF3vl2igV
fMOG7946YIJf7uulyxLza2qIxHUOERPMWvxmxxtPhZZAn3MPxU1wq0X1SzUf
Kgh4bdZ7Lm+Ccc3UOxbKVDC5clLuoKoJWq2eHDzFRwWf86mCuRqEf3fee5Sz
UeGF84/tcnomeERcQTP0JwWa7ZSYy4xNsHDnNdViol/+sb71Q5Nsgm4nkzqs
myjAf7K17/MJE7Q+9Om2L8EXRhY8TSQbE/yjNla17S0FvE2dSqj2JsinOFNw
6CUFXhi8zbB1NcHaa9wfG5Mo0KS9/Ih20QRP69kLz8dTYB51b13wMMFIi/Wc
uY8pcEDlwdXfviZ4iV2ed4nQRvJ9Z/0DTfDYhS+p3QkEj0gfNFtzywRL363/
Q35OgWSJq2ph4SaofueNgOsrCjQeLBffep/wz3JVkjefAvfb0tUUY02Q+41s
gX8FBSyu3TOzizdBpXNHskS+UGCPsI9dRBKRf8bLgwKDFOj9csYjP9UEgwNz
7S7/Iuz76of2vSL2lx2K3LaBCo4C0o9Zc01w3bb0qPUHqCDWzJ15OJ9Yjztr
cZzI97TX2tITxSbYNHWE/u84wXN8k803y01Q6Kew8TpvKnh/7hjIrCLy0bH5
hdNjKqh4lP1srzfBl9/M14mWEnyxL33tSrMJtmmP3zEepkJ13d1dwu0m6MXo
0upk74KwK94iplQTHHHvC6+R7YLtNXqGz4dN8JHclS9DD7qg8+IR6890Ezx1
OKBoR00XJOzhvvRr0gR53hdwFi4S5+38xAPtBRNcsBHkOebWDYxdHakXl00w
9arjpZPp3ZDzsbQwjtkU0wd+ZVJHu0Fux93u8Y2mKL/Dse64aw8slXpNbt9m
iiksq/ttcnvgo5PtqvJuUxRMMzOdWugBvRIp/rt8pug8Ir6m4H4vnDzb7iot
a4qLDVUW9kN9sG9jqf9pJVOs9174LaDSD8P5qVEhYIp+hepm9570g9t6r7ed
+qYoNSeV4Ww1ANdy9yz62ZjiOn/W42WBg5C8Yn2n6rYpbhabufZBZxgcXurE
T0aaYocvfW/UjWEQJR3O3vXAFGXqG76KlgxDXipTq/NTU4yq5nhmID4C1YYp
nBxvTXG4pcdAdcMo3JmLEJUtNMXCSw7KjmqjYJzkoWzzwRSF5WfiI9xHoXNW
2/ZNjSmW1Y6tD6eMAv0JI92i2xTXUyiPbj8Yg2fbwursB0xxbe+PN2vLxuBY
mCjDfdQU2Z/tMeImvr/VPm6i0dOmaH/mw865ozTwn2E3SP5liuoPD8xnnaCB
tEuWW+4fU7zEIzM/5E+D1kPz35yYzXCV5bRscRkNsp11nKbXmqF+jskay14a
3E55NO/Jaoam2cwi9os0sBugha6sN8OiID+34Z10UOOR57y10Qwro3UT2yTp
wH389kuOzWb4xeh2/FFdOsw/oMjHbDVDoUXJWhYbOuSw+5xI2WWGb/cMKbPc
psMdnXqG2B4z/HOmN1PuCR0cgvb45nGbYb9N9J2hV3TAcpcNSrxmGFZleWlD
McE7S0VPKvebYY7OGv+8WqIfym4Q0+c3w2jHsLrBNjq0XzlZ0ipohj+aTawf
99Hhdc4rgxMiZrhtv0pZHzFvh48vdg+ImuG09zkonKaDk5DBOWdxM0zeLKEl
MkcH9bPxf6clzTDqzqkDckvE+xK/R3gdMcMZMxYVBtHP/1CV9q4eNUPz9d15
mkwM6NgZkX1LzgxLHGxLTZgJnjDrUdmkaIa7b4dHbiF0ZOSh5hhlMzyZ1igX
+Y8OzvX+1nvVzPA2d49m4zLBd+uaplLQDN07ih3b/xD9GfcGHNI0w9EKF5Os
X3RY8j+/+Z22GS5sCok9OUWHzvelz5T0zJAkN/N9dIwOeb84Dn8yMEOOhXfC
FkS8UYetP+obm2F4Qiff63Y6uJzLMf1qaoYCl2zfLtbTQevlysAJczPUUevN
Vi2jA9+I8eVBCzMMuZE4dOMNHf7ue8bkctwMnV55CXx+Qdh/pHbA28oMeb3y
9oWH0OFu2923qzZmqP2BdnWzBx1cNw+oh541Q6/WPZR3doS90EC7WCczlJ9i
i7+mSoflyi+ze12JenDwn88RpQNlZX9w6jlC25XxcO8i7HlWpLy7bIZz6b+O
fCR4eMWBeeyrnxlS2msWGeE0oCaTPE9eJ9btU5jSrtAgv/c5y1CgGV5Q91Rs
Pk6D8xYawjMhZhh6UHa3Hz8NujWDnTffM0O9nO+3Bt+OwfpQ/e9N0WbYWpF/
gJu4P3L1Wy5ExJjhWrHmvK4rYxBt9NR9fbwZtqcU2K+VGgM9y4Lra9LMMKF1
oij55SgUOtEfzpeYoZn5THbbnRF4GGZY0U8jzvdX/ipR6SGoaNymmThuhgeZ
zgkncwzB9CZqzelJ4rw0bvkuQB8EgwcOjdSfZhhA3xln+3QQ1iRc72xbJu7D
nXm2IbZBuJydO1m7nYSPBOUPi3/ug2fTnpdu7SKhEqcGX2RwHzRJqcxq7iGh
rqSES7pqH4gU1C9U8JJwdGOulFt+L/SXDa35cJCE+73/RVe/7gEOpoxbvodI
GJH19ETk5R5Q0ri4XkGShJkf05NqjvZAbO3SpoKjJBSQDhvsKe8Goy87uHLV
SOizt5UleLwL6hgZOWrqJFx3mtaz8qELNNaoabRoknC+7TyH+P0ukJd1OTel
R8Jzp4TtG1S7IM9k5d81QxKy6FVdNeDsAnGXBzEcJiQc4uLwejFLBf6E0rJD
ZBKqPLuxZ+41FRLzSeYfLEnIn/TIZvkeFfa00GgGJ0h4UZl/95w7FR7Q/f27
T5Hwbod59CjRzzYxb9vqZk1CN3mjs1/UqHCHOz110ZaErNLsO0pEqLBGRlkx
zI6ELXoBPzO2U+G6cWvzHkcS/i3McU36R/CEk6NdhjMJPVXP1SRPU+DqjaV5
eTcivr3tBm8GKDD95F5E3XkSGgmtzWhto4DLO0G+45eI/Ag9kl5XT4GRpuJ8
2hUSMnEYahp/pIANzUTfy4OES69YFnKKKED9N9LH4k3CXQfu/RIh+j+Zy9c9
1peE8UbZ30oJPmmR3swmdI2EHKLPd18ktL5RSkJ+AAmTV+OXVd5RoNpRQUrr
JgntrnM0ib2ngFpgc3V7MAmT2G0bFAjeKX5sd9I+lITjOUMU5xoKyOQtTM3e
IeGVc3tfFxE88boxMigogoRqbqqa4r0UEB07wLn9Lgmdv7rfrfpOgdTVwqzn
90loalVsEviXAvv3GOGRhyRszfRYsd1MhfgjQx0VsSR8blFn7iRAhZ2GXq5m
j0lYUvGF7aESFe45bFwdiCfiY25uo5GpwB6Q/OBSIglXxf/Z2V2iQkicrMi/
JBKevR50njWKCn6fbc32pZHw6N+3jZ9bqDA38ns05yUJFYQ8fkwS5+HySpiv
aiYJ9z3etkaZqwscpfJfWOWSUCtqOsPmfBcM6uvLT74l4YpoIafcky44Zd/f
6J9PQpKWq5hqfReYPVo/F19M5PdrtOaAeDc05iaGiZWS8HSObdR1u27QaZDe
V1JOQrPtvHak+G5QXrbS7aoioV5YX3PS1h4o3DXb41JL1FfwqSevaQ9IHb59
+U894c9GTk7KvR4Qtnv7hLOFhLBLwG/9nl547q8j+bKVuF/lXaK3bHthb2zP
J7l2Err/fdSo+6oXttWzTFpSScj7ilKeodkHyxKn1GKGSXiZ2b5DJKYfGowd
a06NkfCgfnZE3Vw/PLpw2egAg4Q/fj10kjw1AFI5oadeT5HwIQ/wvNw1CA7i
77zq/xD2WL+YFcwNQqMYR+7yZnN8Mct/jNIxDI8NOOWqtpmjIWt8eO7WEXBw
4y8L22mOkkPKFSxGI7D6SqFxN7c52p2r606tGAFpUUe6lJA59q25xWX/bBT+
6V2+uCBijjuVBBW+tI1Ck4v/XJmYOY5d72DqYhkDp4zotYZS5qhotbvA03kM
4kXK9zsqmyOvXv+0ICcx7+k2pB9SM8fynw3hhWo0kHHukJhFc5xd6LT0dqBB
S/p35UAdc/SW1Gm4mEmDhNq5T9r65phxIIMr4TMNXGhMBhxG5niKzLZplEGD
NcKcJ56QiPeX3B+p3k+HL9r8A7YW5ng6OFTcSoEOTx0lnISPm6OZsP71zaZE
v7mlMDV50hzpwbNaffbE/Jqm6fHOyhxjpHm/NnrRYW2NyV9fW3P8Tu3s6iP4
onX0ZBDamWNq8uhuzjjC3jrHDWyO5qhu8/KzfyphT/Dy/WZnczxsJzixjeh/
clr+nDFu5ugjr/1xgOCNNQ6hz05dMEcRFok7E5WEf8HRQgcum+PtU+JRykQ/
fZryNJvubo5Tve0WlCbCXtXLo689zfHvWZ43tV8IeyN5JR4+5sgmz+O87Svh
39pydWV/c1QBNbWPrYR//A31zAHmKBjgQKW20CFRo8O0/oY57nrRxOTcSAc3
u4HOu8FEPKkXvNwJ3pEP+m5tGWqO7A7vRtdW0GHdi7lRnjBzPEtSvC1YRIev
lUznhyPM0fG96Ou+13R4NrTxV8Zdc8x0//NEgYj3HDOn36Voc3wyrW2n9pgO
Cgf4meVizDG2+9v5P+F0WBUJu/fjEVGPAGAUXqNDteQM76sn5lj4j5ape4EO
JJVypb1J5ijhPnlkrSEd9mgKNXx7bo4NJ+IvAlGvfv3I4/dSzfGijeS2K4KE
/8dPeazJJOxPNd2iEPwoZVO5pjTbHG0/5B7lHaHBgsPBaM9cc+x/eeKOXyMN
Qtzncxj55riQGeP37AkNEqMe0Fs+EvWZtLt4XpwGDjGLnnc+mWPVD8t5iy00
EEs4s06jxhyfB/JWxvwcg8IMyQMFn81R64DdHbn8MWit+nwq4Zs5Jjk6iH6V
HoM1S2tanCfMcWTFJn8nzyjUM7lZHZgm7lP/1vcJ8yNwl+3r9+4Zc9x9xshi
8OsI8OxKYjOZN0ePQ/0C726PgIyUsroMMxlzOO/tX/9zGJydruYzcZJReNpN
S7d8CJraRuKfaJCxLtbfL6KwHwbecCkLapMxUEtRxvVKP8zeNe15rUvGqRi/
qFbxfuAy/MBTbUTGbYklibfT+sCp6sHT6WNkfPsk+2Vmci/4Pq9X8T1Jxp+X
v4WPnu2FyMDV3rVWZHx9SDpOWbAX3im78XKdJaPq2X9bg7J7gClf/ZnmOTLK
CR8J3drcDTseeKu1XCDj/U35xyiPu0H4ck7/ictkHNts/FPUqRuMxbn2X/Qk
47pVl09PWbrhDLvpxz/eZAzpGnv+hdIFHowQ22A/Mq7fJ3AvP6sL4lNnkh4H
kvHMR4HsvBNd8DpIGAWCyPhiQry560gXVJ6xGswJIWNRpGhsC0cXdKg9uKFw
m4yGj3YpPBqnAmNvPV9VGBHfn+8M2Xoq/F1aqTCOJCNbgOSFvAwqbO46epZ6
l4zsXKZBWyKoIBub9HzqIRkbEnrqfC2poHf1m7rPIyK/mtuNolSpYEXaOLzm
CRlfzlzOjiJ44NJh9aCoBDLWnNmgc30HFYI2efPveUbG2dtXRW2YqfBoIvvT
i2Qy+hb41x75SYFXDcN2EilkfOx0OnBxmAKlL/esLUoj4xPKx9zCTgq03jJJ
0cgg44U638NuTQQP2IdoNmeS8WjuQsrOagrMq5eMHM8ho9C7568KiX7NzjcT
PJxLxu5zFxLMiinAuyokeCGPjF6RwxXDhRSQ6j1dvZBPRrp3qN0FQmuVRDsE
vSfjtBNT0QzR/48/rlu3qYSMMTdtbc9/oICb10pqXCmZmGdoUoMVFLhucVSb
/yMZv2jz8RkRfHJf2nUsu5KMfn6beN98Jfr91qRb8tVkbPkUkLSxjwLvpzuE
PtWS0WR260Ebggc+N7HXGjWQMZisefblIgX6M9GJ0kjGRcnYORo7FX7e8WK1
ayEj05ULvnv3UWGdc3b6ZCtRn1o1T92jVODUHtbxbifjDKfnTWcDKogJ7KEz
dxL5M7smd82eCmrMJrcjqWS8JBuicyuACqSBYBHOHjK+vy13NyiBCg5lxXXP
+4jzenCu4moJFXwSfjiLD5KRZ9Od+yd6qPDs+OkM9TEyfvI3aP7L3wXrVNiU
1zLIaJW9x2m3cRe48r1rrv5ORjWWHUbXfLtAZpz9l+4MUd9S5XbRLuJ8Nhfe
2vCLjNtfSp26wtEN/97a7WmcI+PBfYc512l0w2e/ElWTv2Q0nR1btzW/G6Rs
nVq3rJJxS/jj++Ez3RCrud3+K5MFJnVp3yEf7oEzHG53LFgtsLvrZ0r7ux6Y
T+RqP7XNAiuKn98uofaCVVCN496dFvhMuJejSaQPKp2u/OnbbYHeFzmOyfv2
QeThBt6zey1wDbWjRkigH/grfVycRSxQTKN4Z9bDAbiTJvj3oJgFXs6rP90x
NwBTYa1R38Ut8M7qCRM5iUEoMj/47oK0BV665irhEjsIxqOUlauqhL0JipSi
+xDk1Qffl0ULZOo7/8Q6awj25BwWWNCwwJWs4hnmsSEY9ryt56dngVnPBotk
Tg6DD5v8wxtkC3SoLOvYrT4C/RPDQhrHLPDW4O7pvX4joNl6t2jtSSJe34Qc
/7wR2PyE1hdqY4HGNQ3jtXyjkCr26GCUqwUayO9JuzMzCuxbND6YnLfAe92T
I8oHxuDSrynjrZcscCmg6I+v2RgolWpffehhgfktt9JMMscgOfkni6W3BVLG
7VjrO8aA5Vbi491+Ftj+m6/g3grxvTaeK3sSaIHful869OvTQE76udnpIAvs
M22fIV8geGK38cjeWxb4rykz/NddGjD9/ePZf9sC3XfxRRe9poHTQOr65HAL
/MS8JfdZEw2aqswSzkZZ4MUUTscXBG8cyViWELhvgR/SM2M/rSHm08sW5PRY
Cyyrj9t47AgdXot/WVB4bIF8x/rkr2vR4SxD/2ljvAWOncw+wHyMDjtTq9Em
0QJfxxreGHGkQ60tjM0kWaBt5BlDEWIe9uEpCQt+YYHq7l5KrTfocIgiI7k7
zQJ5PZPYhiOI/vggty3jpQU2dly/fCaWDvdNxLyVMy1web/GkmkiHTTY03ha
si1wYvyLYmEKHeZq9lecybXAxyNbOx9n0CHjZrzDr7dE/FWb3Vey6HBKddeG
0HxivT8pcTyHDhyL93L2vLfAqMFhij3R//9PBecdT/X/xXEzMqKizFJpEJVV
UjmHJCRJ7l4aIvkiadmVqEgZodISJasiGUlKU0aDu6xr3VuSyiiJ/D6/P9+P
z+d9Pme83u/zPPfxoPqhkkd+hScqhY/0BhPPg4JO/dpQ5Ylrdv88rU/sX2Qi
deV9tSemVS/a5XdHAlxJKOx+5okhCT8ivYj5//St0Z7RWk/8q8LdppApARtO
0OnTrwg97fPctDdVAgM6X01033qi61a7shgivmtc7w+F7zxxOPu1tN9xgheS
RYew0RM1/zR06xN8JufG0Pn03hP/TCno5e6TwKPp3GrvT4ReXuXuUmdKwPel
++6xFk88enfTKvZWCegef6cQzyf0NmRvf2mDBKLHatzvtxPf/9PO/KUjAfOH
60btRYS9ocThpYoS6At8dKmlmzi/jw8neo+IwUWS3z0u8UTPo8Nyiwj+nMha
Eneu3xMZP9T0i0vEcI99c7nBN0/ca3o/Y3+mGDS4aSGbhoj3FV/rhu4XQ8eL
49MuTHii/M65vu+lxHAheiJv4ZQnzjz14Epobx9sXH9kW6k0Ce2f19rEve6D
3BL/DOE0Epp5U5f1xPfBgSyK8eKZJJS4C0N2zOgDQ/bHxrLZJJyg75z+4lsv
cLW3HnSZQ8LZP/jeb+t7wSbJvipQl4SUzXIjd870gly0qVvlYhLWzLy5wmGq
BzJYssHbbEgo8g4lcTq6wUFKqN+ynoRfjdO9zSq74UfW/bd0IGHH2YirvRe7
YfNn1oK9DiRUnrNmeNK1G34Fl78PdyPhLLP6jbsqu4B0+r+VebuI7z+MyNmf
KgKp5Q6tK71JWKtUmN8YKIKCBp24Uh8SGq++nmK/RQRys9901PiTkDTB1AuW
EcHDqwsTeYdJ6GWcb3i8rwNmlfAG5OJJqOHTfVHysg2qSUUZZ8+REILkZCC2
DfzGYhzUL5BwWNtf99nmNni2wTxT9yIJXTa8ex3V2Ar+IkWnm+kkvN36Yzov
pRW0TnYOL7lMwn8dyk2J9FYIepOwxfw6CTXT6+u3DghBb//u32U3SWi+f/7J
fWVCeKNqc2tDNgnzStbXqMUIwWCHZNzpLgm/HfPt0VsohKZ2uzxOCVGPlHPP
5YMFEBqtRe4rJfL1tMNno4sAliz6Lr2/nLC/9441GAog0jeTdvgJCYMcBWon
2ol+p3xQfuIpke9bNZFNVXzgFjo/OP6chHzfM2Wfr/JhxfAvxXOvSbh+d5LR
aW8+CC82PJxVR8IfkvUPZrryIdY62yujnqjn78aYAEs+mLeGqsxrIuF3ltvj
60S/bY/YXn7rA1GvsgPfc4h+fNpg2R6jZhLu2LCi8vgYMf/X/lO7xyWh3sKw
qxafeSDybnlsKSDhvnOt5x8LeJCgWOBT2UrCvScj/bQbeHD2wZj8kQ4SMku1
dx55xoPT9E3ZFl0k3Kg+/dkkwRuxssn2P3pIGKfj05F/nwcxBR2iAjGhv+Tf
qsfzeXCCtDxq3xciHosQl/BcHkT/O6K/ZICEMwKWyWXe4UHknRePuwdJ+LaC
rtNJPA93n0m//pOEl50dAh0KeBD6hzXGGCGh0uPZp+se8OBoVl6a1m8SyluL
owIJPjq85bdlyx8SZi2I/2BWy4OQkY2fkiZIGCqSjKk18SD46oUDblMkNHxX
tlWR4Jkgx3Y1ZRkypt3OVtL+xoOA70ZFr+XIuF38/jRO8cA/47BrjAIZb1GD
F/yf//zsavtRiYzZZze6NRjxwbdf7cykChlvVIakrrTnw94U5tJKNTLOmlnp
lcUk+GT93ZeHZ5Ex6NHr+YbH+LCrb3S3hSYZLT5tty1J54NXor3Mj7lk3KtZ
bOJWTvCnqNV2nz4Z2/xySLem+EA/s6x9sQEZKRp3FzOWCIBqfiiseyEZ9dPG
5HW2CcAzZkY5YxkZc+LV6u/cFoCHKYOstZyMLlNh/odaBODOvTPSbEpG1aTQ
347ThOC6zM7MzYKwLx19cug/Ibh8ONektJqMTOG9zrpsITiFCv97bU3GmJB7
y7LbheBQfzAPbcmo+HKfIZPUCuuDbi+ycCbjyZCSH+3MNrDRHn72fQvh36+Z
zOe32sD6OXgVuJFRz7l16O5AG1hqCDIXe5JxTpYBLzamHUzKledoccj4q+/i
l9T6DjDeSX3YvJOMDmmqWvcXdcIypRyPpD1knHDepcML7wRDpu15JT/C3ibx
5VwdEehJHVCcDCGjlZBfk9opAhUn7njXWTLSmU+ycpO6gfLmZ17gOTKaqq9B
4ctuyHJSZUyeJ6NKSUrt+J9usHZ2eKx1kYwX/mVWp+zsgT0uxWHbrpPxTpF9
gu7yXrhX17C8/SYZ1UwvepYzemHc5UurXzZRf/tgcnB8L1zYYrA+9i4Zo4cj
Yz9LeqHKNXGiqoSMjQmNUW3JfaDQcLfA5REZC1Q//vSs7AOPrS+Z/HIyck22
ju0W9cHnrRNVw0/IuGRPTeT8ZWKwaJz73/EaMn5UyDarJPgk0s1CX62WjIHB
l2+82Uf0j21+EcZvyBjsZdNolCMGTtMp0/I6MlbPyWcF14ghb9vN9k0NZByD
XUv0hGIYbao696mJjM+z66oNh8SA7vwNOz+S0W18k+ZZop/Fvx/+NthM6Cd8
448t+kR/dle7Fs4j/BdrFfutkoDBB2M3JSEZd/1JeiO2I+b77Y7/0tvI+D6z
IPPZdqK/fthZtLiTjJ9CG+InORKQ8ohgl3SR8fKXo5OZ/hLY8jFjhl0vGb/d
9X+ddUQCaR4PqxvFZOyJSFKeTfTvro9NAcwvZCyubzUaOi0Bkx1f5/V/JWPS
JJxwOC+BI5+mNR0ZJGNHztmEGQQPPN+xMEr+JxnLrw41kNIloNq8YWXKMBkP
mz7xNbgkAaonrdPgFxFvUnF0CLG+1RxyvmiMjFOTccupGRIY9LwA6/+SUXIn
+dwHgo/WtuR/fztJnM/yK7mSJAnEkF5fp0hR8LN0/aWbCRJoaune1idDwaKt
2eHTYiWgQ/43FSxPwftvrUE/UgLeXO37UooUnByd2vaN4LP7ZCuvRCUKiv/a
0yL9JPCX666up0rBKrkt8ny2BBwp/jV31Sjosex3u/T//z6aFxe0ZhYFS54s
PyhL8GAb5ZbBSw0Knm70z+61lEAwVRgt0qag0nsVN+/ZEnjCH10VoEfBTVH7
9TSkJaBIm9n1dx4FlRc7nX32TQzXaE52cw0pmLp6IG/NCzHU0R9Ju62g4KP5
s/g+e8Xg07U5e5YZBRP40TNLXcQg5ytw5FlQcMVkHEtvhRjg0ES811oKKvy6
cYk51AcPz9vPOehAwcC5z1dkHeiDqy8ajTPoFPyWZpKe4UHwxBavBiaLgo1D
ff/OmPQC/8PPwAVeFAyyP3lGa1ovzOrUKM3zJvyVmfi4sLwHYv/Q4UkQBTu0
an1ytXogaIVkR3csBe1dFzVEve8C1dKjv26foWDKtgcp0ne6IG+d0qX9CRR8
zxcvOhrRBb1Oph0jSRRskwhWkI27gLb7oK/CVQrWP4CDdjEi+PVFTrn+OmHv
03dDCV0EqUFphReyKLjgMI7fMxNBY0TFkHYuUY9+i9P3n3aCfcZUuEkJUW/3
L38fRXVA57yk+T9LKXji8c2mT2YdEJ6z8HlpOQUvRz4mj/W2Q1nxJgWopqDT
p7/xJW7E/dUQn7T9LQVv9ZGmW5m3wdsd+pZz6in4gico5w+2wl5hEVfYSEFr
vTSPeYWtcEPyQXdPMwWFN+ouvlrRCpoyWrcPdxL+3PbX5G8WgpTXUbpKNwXz
/3P94j5HCP1P+DOyein4e3PdvyixAKqPXTrS8IWC/0QRp+YkCCCX92f57gEK
Ogxx/ovdKYBkK7pobJCC36ccBNXWAtj7U8fZcITQQ7dEkDrAB/dtYZMVvyjo
eOmp5Zq3fLApbH2w7Q/h77QnY/l3+GCovH5v318KmmYd2TgSxwe1fZk6Yf8o
uDF1ZPZMPz6Mv5poVJemYtqyyd2ybnzoNWSdvC1LxUMzak68I+b3cpH+wAdF
KjqPn/nSJseHLNvIGz7KVHxwYgtv8Q+CHzI7PCdVqWgc77Z9I9FvD4/bTk9R
p+JBI0qIZT0PvKjXnyybTcUXt/dZjVXxwOXR1IFqTSqmbh91PHeP4BMNryWe
WlSsWmnEHLrFg3nBNcIvOlTU3my5bMllHkx/b3A+Sp+KWhOrFJcm82DE9PhG
TQMqSp+81D4Uz4OO+K7feQupWO40NBwXx4M3X+wKcDEVr3vaXeqN4UHx5iwv
7lIqGsgs/zGNWGfmyGj6G1MxU7UmeiDm/zyz+620KRX9ovxWpRD7g3bWRqSv
pOK5wpIfY4R9+tNF5qbmVJzMKM3XJb7voB8jfm5JxXgbV6U/l3iwIqz3MnUN
FeVnXmtMJPzXEjhsG1xLRd3Feq+ERTyQWZMjG7OeiuSTN6uFj3kwkCpfrg1U
9Dh4LTmhjgfcIW//e3ZUFD8w1hkU8qDG/ZXBJgcqaga8WjY5wIP8oiUtQkcq
fuX+TCqT4kOaStyZIGcq7tQ1NdKdw4doP8mGaa5UpGs6dyw25YPnktzbZtup
uIr5e7WRFx9sYxQZr3dQsXhUukk/nA/Lun3VWGQqXjG6kP3gEh8mrhodPc2g
YmGuR+Y9AR/Ef8+YzGNTcYr0XDhngg/vaf2iEi8qbt1LKZ1jIIBszXznTm8q
BlXQdgj8BZB4UPlfiC8VzyTyvmZcFMDRD/uLlfZTcXzqfdTXpwLYes5Ed3UQ
FZvka2gO2kKw/prQ9C6Yih+GNnzf7CSEhc7fTu48RMX8SM/lgqNC+CVXNJAQ
SsXP6twZNzuEcC18ZXVPDBW9aQH8sqpWOPHs6zH/OCpmje769vlXK3hPy7Ua
PUPF3Av/alOI82pywaBw2nkq/rF/+syzqA0qb83MNLpExbYXTuywsna49rmB
UnyFinfGWiaDJ9vhuOnZ2euuUZHTpK7b69ABTmUy8a63CL0+u7XGkt8B3Lrh
Y4GFVOydrP7koiiCSrX7VmP3qHhiZliqGXH/XPX0/xldTEX1JUFreMT9tKej
1ze5jDg//XdX77ovgqGfLZTSZ1Sczq7Qj9vTBTO0y63+tlBx87Vty4VfumGI
FfLzJJ+K288EZhTq9kBL1qpClVYq3nA9y923tQcyTe4azhNRsf50ppXp/R4w
xsuz7fqpWDa9SH8ksBdmnCI3vR2gYnM3N8TgWi/8fDsr3uM7UW9bpQV+73qh
fEe8zJ4Roj4L1A9NW9QHjj7hP2P/UTFpaBbsfdEHxgXWhWrSNNz9+cXB41/6
QPXniG+GLA1D3uqnrFEVQ3Pof6K7ijS8fMtzxMldDOVPjTLNlWnovba4OyVQ
DFfkxJTHqjS8vt9wE/mcGHYlspvqZ9HQd3pmkBHRrxw/6cSTNGl4f1aUiVm7
GIy0eI4dc2m42Oq61FVi3lZhpcj46BD2Hkws3q8kgR83t1V/16Nh9Vwzx8vz
JNAsVg49Op+G5T0RC4zMJFC+/I2V9EIa/l1+pXOuvQQyg2J+njGkoYIV+4UP
wS9RpVg4aykNd5q76eoQ/PJQ6iDjoxEN/7u2ZHARwS/9W3KmJ5vQ8F7J2hlb
CX4xSOeVbV9J7Dd5e+pStATI3dP3zjSn4e+JBw9UCX5JMF2v8cGShiLrLUfu
nZPAs6MBzy+soeGzK2arThF88av2RpC7DQ2nf5VffTGF4B21T/PUN9CwK/am
qphY76LLNzQBDcXrDeKjkiWQkbMm7Lw9EU/Jvtl+BA81/thntG0TDRsGS5WL
zkpAdn0mb4YTDWfOYj7YESMB67jGU40uNMz59qlmd7gEAj5KWSZuJexnRRdK
giWQrW/RvdWdht3pPwY++0hA6Ot9QXUHDec91n4fxJCA+sN02wYSDfv9HRpO
byV4ZertQAKVhvqzjXpsbCUQ7jJx2ZVB1GdF4ewkUwk8uLjCWYVNw3EjO7uL
uhIQi7x+v/Oi4bSJxRbbCb7UM0nJid9NwxoDhnLTsBhOP/8trbyPhu85Ex3W
r8VQrWp8v24/Dbd47460vieGESqTfTaAhl7FQ00L0gi+/V5TOT2Ehjte6RYK
vMSwWu/sQcUoGh52sNsz0N8H/j5VC94cp2GgX3mqy7s+yCoebIqLoeGadDvD
zjxCn847TBTO0nC1w3uZRp8+6D2k1yd/kYYd22gbqwS9kNRURJbNp+HDJ3Wk
ruweGDjxae0/Lg1jlNoiZBW7IDCn+U+igIYTvR3L6SLifL5uqZjfRkOnsLLY
J+Ui+K3CX2vXRUNSeOSz+n0ikElvWxvzlYYVy03+mWd2QkxF+x+NQRouNYkJ
L9vWCQptHRU5P2jIa11467tsJ6gs6Fr7epSGqgEZaa8DOmBuft9aJSk61q07
8F7ZvR0uN4j/XJahI+NpxbvFyu2g90NSsVyejpk1fs2hr9tgoVX/2q1KdOSr
ccIUHYj77Ong2gsadORWurn+2NoK97q+/zGYS0fOvJdnF2q0grncz4oH2sT7
ZpLmrlYhrHEeXvtpHh0VPGStFgUJwf7T77VzjOi4z8qhf1OBAF6Mjv25vZyO
49dCEiKiBLBZa7xizQo6ur18OOnjKQBX1sRamgUdRWcvXGLKCqApavLPFys6
Ovu8XO3XzgePrH8VodZ0FAT0Va2q4ANFImWTuYGOtyNmaPYf4oNwusy4CdJx
xccin3YyMe+ayFY+safjVLDF4Jm1fOh0kwt120RH/1Xsf4P6xLx8QN6mczMd
VS2/9SsTfNGbMm080IWO37Ysi+78ygOfRwqVUlvpWGua4uDbwoN+vmJo0jY6
qsVUl2fXEPP73+k2Cz3oeLM7XTOlkAff9ZXHiz3p6D7f9LBZJg+CUaVyI4WO
PhfkxiISCH7YpRraTKPjnmt7Hh6O5MGRUzNsvJlEfpwH9LWDeTB+R218lE1H
m5m0e7t8eBBep14Zu5OIx4BnsJ3Ng6mBmaFz99Ax9UaycTeZByfUZtvk7qVj
WO1Gw///vw85c41x6310FPqvUexy5UGcp2bl2/10bPGdWOnswgOlI3NC6QF0
PG71cdTJmeCnS3NtvgbRsUrX4mY7sVar0hoPO0hHq5MH1sgR+5M7tCtVDtOx
HPzEFdt4oCGtG3r1KB3ze5Z1/fXkQfoiPZsVYXRceuQs/TWDyIdrysBoBB1P
D3bT2/fwAA8pXX8STUeHC60plYE80Lx2fPupk3Qc4N07yAgn8vlqTHZrLB1V
7K74Vp3lwdPvgY80ztCxLcR2XEDwV6qWxLctno4zGvZ23i/gwT47tm52Ih1t
X13I3UDk39avpWF/Eh0PDSf0hhP1mZ3iGm2RSkc6vWbJfoJfPj+uNf+bRscv
W2yj5OX5kKRanH42k47hDr/BfB0f9q42cvG4Tkc8YLC9mkrwK+fGhHYWHTfD
LqP+I4Qe7ifuvHuHqF9fsNvcx3yoEMhrHMij47sFwbKzO/mQKBPxyrqQjn/P
+1bckhOAtef+5W+KiXziO69QQs+qEd3t50vpSL13dUtVpAC6c2gXKOVEfPdv
ZZ3NE0D8782j4id0fDOWlf9imhC8DJ7eKaqho9epN74ma4Rg6byafriWiN8s
NFdrnxA6Lhs+lX9LR/tg4cvDH4Rgbit9xrCZjo7eLg06D1tBwefougEuHcu6
yD5Hf7RC2/nv30oEdNRaoHN+24o2iO1q99jYSdTj0dravQSfCGIq9Xb10/Ha
txuD82raoajQrMnoGx2LtmWUrFLsgBPc3OM/vxPn7/mC+WXbO8BkWbo4epSO
lTqhvgu/dED0u4P3r0sxsPSepv5jDRGQRvp3+cgy0IPn7plhKwJj/V2aK6cx
cHn5T1xF3GfNAe6h1coMjFp4YWdSjQiWzjJ1aJ/DQGXXuc6GR7ugkSrm6Zgy
0Da5tzBOkeAP34qklpUMdDS7E5Gzrgf8jiZsuWDOwC+JmgWfAnpAIcP8qbw1
A7vIg6HtzT2AvMjbP+wZqHjQs0I2k+ATyXav/E0M/HYiQkOlvhfafhnq7HVi
IDOzftHiv71wbM67c61bGXj5qYOlLrkPiklzD72iMnD//MXclIk+iPbuX3Gc
wUCleNWXJxaKwe3Qk8/r2Az0bxW4cB3F8DV1N/PBbgaKyn/lHzorhsrs1XP8
9zLw4A/ZxLt3if70cPr7JfsYmDspvq1B9CfD5nsbMwMYGG5pqxA8IYahnhOT
5AMMjOlxm0bTkEDNMKlsZggRv0vUCMdYAomyRgfqDzPwQffrmyeJfsmaPWEc
d4ywJ8ncWutO9PtFTb124Qxcl1OSNm+nBMbNs65NRDLwlJHniYuBEnhjf4ha
dpz43uVOY+Pw//9e4jQrOIaBenodnp2xEtizS7feJI6Bt64/7ikjeMA8ePCU
5AyRr4huufI0CUideAZZCQyUfdhR0HtFAk1JqX+Y5xnIcmxvtb8ugWs3fUrm
JjOwtzczjn9DAv4PbP77mMrAxmNmDwuItc0z1aXn0hmYfDT54KtrElD8IBJt
vsxAmSVDPBPCHldUclnmKgMHSTtPSi4SPPEj1vPJdQZabDDZMJUogWAp+oyj
WYS+pt//Fk74a6du+sY8h4E+brbH9hHxqBtInfh2h4Er6ZXnG4Ik0LHy07rc
PAbyLD8+KN4tgQK4PbqrkNDf4vV5C0kSCN127J7+fQY+pUptXLpJAk4c1338
YgbOU9KeVmchgTmB8xellDLwdNIWocYCCZQkvkxTfMzAi7YRB9/9FsOJaxnu
tU+IegQ6eG3pEoN70X6lyBoG0p1S7155K4aBhpmRwy8Z+HcqQ5tL8EZle++a
ojcMnL977c7mMEIP38p++r5jYHpy/Xgdh9CDKtu74z0Dz9n7GL41FAPLNc/1
bSsD3eRstuhk98FRC1ctUgcDzXJ5PzfE9EGqzmCPSES8b51xrnp3H9R9Ngsb
62NgvVZ9xpBBH6w+VXF36Q8GNq3ff7w/tRfUq99Mi5VjYhdNQYfr2wPLc/w+
zlRg4rnc+fUSux5wTFC5dnU6E/sbq7sf6/RABN3dqnQGE98+iPd4/q4b+n/x
dvdqMbEgVX7O8+Xd8GKlpMbelImF31ZrP5eIoHPOmYTGlUyc3Lf6usdTEYxP
GlPp5kwcqpnTIpMuArP6gO8H1jDR8vLOi/2OIrjm+0v/ph0Tr2yqmtuxoxMq
tmV8MXFgop0S++IShU5oXm1TWu7IROnEBpbz4w5Qko90fb+Fid+OVA15LemA
Izflw6ZITIwfmLftxPR2SD59xzGeSuy/c7Bly8s2KAp0njWXwcTNqS3tXifa
oHfDubsrvJi4t1XAvijVBu5CDT7Lj4kzzK1eaM1ohf3PHt364s/Ex+nbQy1a
hBCbSw08FMhEofjkCPeqEJ4czpx2LoSJyrrFUu8shGA829CqKpKJV0/+ca0N
FkCG1PrhyONMvL4uvqfTXgDygzse2MUw8VrOa1qvhgBEb06avj7DRHbdaNud
aj5sfXTl65kEIh9/9R/uTeMT82HJXdfzTPzX9KJfNYgPFyN7Fn9MZaL9uz2o
bsQHGf+/PanpTDRZ9crPV5EPQbTZWZTLTIyUDrud9YUH7Y7LvXSuMtFha++R
qnoeuFhunNd+nahHNZBKHvCgfAGj7XoWEz+pOpBiMniwWO3g5V05TGx2/HzY
5DjR3yfOUhfnMlFTYagydz8PpPqz5nzOY+Kunau/jVJ4EMCrbM4rZKKaDEtR
3ZEHrS8+Jv93n4nPK/4LH7bigVNxv/uqEiYuTbN6l7mUB4+uy6gNlzLxYH/c
ZkVdHiw6p9NQWk7EQ1saZabOgwuh5vFHHzOxvjl9v4YCD/75uDivq2ZitrSp
VuEUF/aTdin8q2Giwk7DiN9/uMC3D31ZU8vEBaKSDd9HueC4KvnkyVeEf50U
4wvDXCjRz7NzfMtErx2PdLlDXDBQfj6lWE/Uq3hEUkU8TxwTPHnXyMQEQx8a
/uLC376fYYkfmJi7LAGZ41zw/TTdZnszE93Xzw1UkeIBt2bB2GweEz//C652
JfxzKFr7iCtg4qvCCUttwv8HV7aHXGpjYnRza+1/OjyYd2afObOTiSNP8siO
SwieOnz8x7xuJgb2beq7ZsGDP7svFXX1MnHu+t01B+15sHf7A/9sCRNPlPjM
fubBAzuTrs9G35j4aLb5ndIjPCjS/nN74DtRH/VDD0kEL+opzPS+N8TEHM9L
lzlZPPjVhV2WY0x8WV55LOsjD/Y0Ua//HifOa5TW8WaCdz5UBbEqJ4l8P3vX
vIvQS0H6DQHIstBNWxxzeiMfdE6Vp8tMY2Fx95Jh7d18iAt+T3qpyMKFCUEf
/p4keHir1EeXGSwc6v0gnfOWD1qyXnUkbRbyF0+vXL9HALE/jpzW0mNhwDmr
NplEAQy3n3dsncfCA06NfLkKATSWP33uZcjCyO+PpB7OEsLJgPmP969koemp
qOiYZiHYWkyLnzIj3tfd6hwu1wpjvwfoKZYs7LSa2B5q1Qr+xyvHK9eykJVZ
4XzqciuQU0k2Sg4sLCp+1/U4qA3UaeuVrjmykPLtaXldbhvU6S8SmjmzkERl
zuV3tQHc+XGM5sbC4EfH8/rJ7bCsMr4il8rCm6FLtne5dkB3ZPCZ9QwW/nK5
c/FjQgdc3UijvWex8EbX6t9PGjpgVsOSP793sfDFzSWrj3t0wt/OZ9ab/2Mh
J67ZnGchgkb5sbK+4yxM/RN4xdGrC07XdcQdi2GhDyV8UuZ0F2w8/5KiGsdC
Tw/r7nX3u6BcK+W3ZQILrxh2Plok0w03l69YE5PGwoMqx+a8z++GkO17Hi3M
Z+EGsdqOObN6YcWcLbGPClmYviniDRV64YvQjOxyn4UYtiFyl38vsPdMjR4o
JfxZ1JfIedkLm49ctnr2lIU7dmuoLwjqA5n1x+VJz1lYt9jnQ01GH1RJ+bZ8
fsFCu5U7Gtg1fbDqrNUh9ToWnuS3LnRSEUO/m96m7HoWzqxLex24Sgw5s2U1
rZtYaKWjVeq6Qww6V98/5DSzsHxcpW0gVQyNTrMTxFxi/+C1zslioh+OkHb/
J2Dh3DRh2rUmYp6+kWEz0spCmRvUVy/7xfBlS+vMsA7i/aAXrn5yEsj8rf9F
uouFtLnTFp7Sk4D7La+a0z0sjDqWunom0X/Lx/sC0j4T9cqMSd7HIHji9jJH
/a/E86Jll1f8JwEDj/362d9YOCD4FUeOkEDzZOGI8Q8W/jFQZHXGSyDu7o93
D4ZYuGDM6NGbDII/SBa3rEdZeFU5ZsvsbAkMSh0Offqbhd88nwmeFkogq6B8
u+M4C1dqp9xtKpUAmfp3WcMEC8MesZM3VUlASc5WynOKhYnvWPcNn0mg+l40
TyjNxnWuCiuDXhB8wqgt2inHxpokno7JKwksVpgW+3kaG9/qay5nEWt+sRMr
cDobS4856iq+lEACO97ylzIb030c/pk9lwAqNSpHzGDjRcuSz6InEhgpVe+R
nclG58mj83TLJZC7c0fl2dls3NQR1iO+LwGmalrSzDlsbPqiEu2SS/BPBd83
Q4uN4dfv8V0Jvqrdo4vzddnILcgLHU2WwGF19tzb+mzcODt9fAvBT8ZVNwZN
DNg43dd/gHJUAsmzl1y1WczGmJFCmSKqBByf+oY8W8rGX9JgoLiZ4Em//C1O
xmz09ktausZSAjufrxonrSTsc0zVLJUloBFw8EObGRsX9r9ZMGtUDG+0H+Xu
tmTjrVu1FX3tYlh1YB3lwFo2Bi16kZ5YIIZevcgVY+vYGG3Uox6SLIaMNzXy
UbZsBHkpfuARMUzNd3yYsJGNcqc6lr+zJfTW6D4zdysbV66/FTJY2wcnQlM+
r3Bn4/413Ut8bhG8s4T7tNSDjeWhEdZWJ/rgagQjoJbCRmbJ4NDghj7wN9n7
rmMnG58U3LG6W9QL08+GndI8zMZE0bR847AemLHectuno2w852qpJ9jWAxqD
A1pJYWxcdP7IPxvDHkJv7AKV42x8/MKDYVnfDdY6dp9kE9gYK3hoVavdDb55
0xYM3WTjz7/q5S8eiCCA+bT/XjYbV3v6PXI4JYKQGUcf/neH8KejakCJJoLo
4C+bvxSwcWpRbc1laRGk29QHiMrYmHRhmqvG/Q7IHIixvlbJRo2C1bmTrA7I
urZBhvmE2D9ssctAtQOKZO5d5D1nY2/VglOkwHZ4VZdU1djAxn9R2SsVN7VB
fbhLbMJ7Nn7xsE/3/NcKH1fIurt8YuOac+4WdhWt0JEc0vOST+S7Zo2UrmUr
9DqYFp5sZWP+LryuOSIkeK/vsF0HoceViafelQrhF52i9KSHjZSjxx6G2Qph
QkW9OVRM5JO90z9cXggyT99ctf7CRpdVVV2OjQKYscjG7OEgG02V73baegtg
8Vc9av4fNlosXSt4l8sH46stC/ZNsDEkYeScaSQfVm1L/Lpkio1Gaj9bqCQ+
rC+ZisyS4+DlTYNL5Kbzwd673MlLgYMGgqy0qD6CN+YemDVPiYNp91dPf1zL
A8+w7pxLahx8+aU63vsUD+imVwIpszg4mrT6eYMvD7w6d6zV1OTgRzl+9uet
RP9NUpH9NJeDB082XS625IH/xpf1F3Q4uGhGlMVSfR4Ej0akuelzcDNvJsue
6P9H76z2UjHgYPsjBUMpgiciad+N6hZyMKJyJJop4kKMcu5w3GIOnrmbkuXR
xAVe6sqmOcs4GGvBnCas4YLxvLK8HGMOlq67WFhdwoWIO7axlqYc7H9SITd5
hwvvV73aWbuSg19nua1LusqFRZVbN3iYc/CVlWnokVQuHN7YotVlyUEnG2WF
ggQuvKlnjgSu4SBaZi5dHssFXXJv07+1hP9ON/R/RnMhoHN//rn1HGQVf1gw
Hs6FGt/hWD3g4AW2z0H7UC7MHgrdlW/HwfxVUh6vjnJhb5iMrY0DB2XyLsme
INYVcme13zpy0Mw77+eBY1xQSZw5SnHmYMhd5ZDkMC5w5l56L97CQbcEp47O
SC4U3zAoOOTGwb1NkjjySS7IG+fGyW3noEB7jeLwaS5QS1buTtnBQbXkbvGD
81zIX19mu5DMwSrqnSvn07nw76WtzgMqB42+1V07fYML27e9GgUGB8sDqoou
5XEhm7/1QyOLg9YTEWlPS7nwa2dLAcuLg+K04clfz7jg/JV5emAXB9VR+tx6
Iv+ZIb27w7yJ+KWplHPtXBic3A9Kvhws+RxZLx7gQqp62K+l/3Fw/F/9ljsz
eCC5JPPxUSAH30bz9RUX8MBm0dnCTcEc/HVaw8Sb0IfI6tKe3Uc4aP5RnKDA
5oHFUwMcOkb4N/nqnWMID2KdcnWPhxPx0jZmHYnngQmj7OO14xyMCX6enV3F
gyPRLSiM52ByS51KN8HzddNZevsSOahx+nDJ3s180Evp/f37AgddNpTJvvXm
w/Oc4SLNNA4W9ujcWpDDhxnvZupvv0Hov/3MkNhUADs9L411ZnFwfrP2psUe
AnjYbtAckMPBjaHO/mZHBED/sTI+IY/Qf6ZKwf1aAdzWdPvz+iEH7538rW6w
VwgbvM622L7l4FLKvDW+Ta0wUKIg1K7n4EhAw6dU+TbIVDjVMdLIwbsqq6rv
rm+D8aIoSV4zcR4/2Q3EFbZB+WTInzkiDt73Ga0evdQOllc4+t9/cZB+dkQ9
PbMTegfbFtT94WC4urXLG1EnpNjTl+RMcDD32HW1/lki+BOSl24q7YUV7Ne6
G4j7kKqXc6Nnmhcyrpe8He8Xgeb+y8XbZnlh/rcVh+4v7IYBDYHlk9lemLNB
W+3cFmL+rJ5bZqzphZ9f5DW3hBD8NOviY3ktLyzwD59X8KYbPlacf/FY3wtl
GmcZ+h3qgQuKp7hLjbxwozbpWZioF3yLa6kXjb3w1vDhh3Yz+gCZMq0yJl54
V1rqZtm6Pvh+L6qzfYUXFpuHBRpd7INXtOqdW1Z54dNKUUsnwU/XZCd7ys28
8EhqP7fqax+4UUI/p1h64YHY5oR9RL9aIl3hJ73aC/86J6ZOeothMu/3QMAa
L7yifzjXNkEMBf9CfjrbeKElfSrDu1kMMbklB8vWeWHCxufO83+JgekxNGq4
wQuTX69sWD5HApYTq44m23qh0P/68DGi/yrfDhyfAi+UmqDyx9wl8D/OPkES

       "]]},
     Annotation[#, "Charting`Private`Tag$81269#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
VX/T7DbGDQ983GtCOsHpR2NN44AxXnoZ3Ra21AlHXLuTHceMMeLA+18FZ7vA
wuSL2dU5Y0xbyeA+69oNyrw8OZ/Wm2DireCqKr9ekAsVDLFjN8HP+mFvWP/2
gsSSqD2V2wQdF2zk+SPp989eVWa27SaowxdcXvi8HxjSjpww3WeCt+sDjl3d
OgQrfK77+1VNUDKazcH77RB8v+HF7XnQBLNW9I+byA8D1eNaebShCbKYJyod
6RmG+n3ZAq1HTTD3skTiJp1R+Jz+8pvTSRPs//1A5/WTUXi/+V3Nd3cTtKhe
EldlHIPC5Qb/zX4meOW5zE9qzRg8qPreQgo3weiMp1vYPScglPHVm6YYExzN
KTrv2zMB3trnHxvcM8H57yfCvhhS4chVtevliSZIXufiH1NIBaOqX+7KT0zQ
+VKeXDs7DZQZSy2eZZpgUeTnG1w2NNitHaQs8swEhfz+zIuG04Dz6kHBhAIT
fCvPZttQTINflX/+cr82wXHyyRtxbTQYZ3g/EfbOBE/Ftk9RaDRoxpC6P5Um
GDULQ3kLNCgL0X7p99kEN5nEgOkiDXIqmR58qTPBninHuMff6HrD8OmSU4sJ
diyeZ7k6QYNreMOpp9MEVR5sCy9pp8HZEAMjq34TNI/8Lb1QQYNDlaxyNSMm
+HVBxqAhgwYGDGQ+LZoJOvioWTeG0UARw5eLZ0zw0pGDA14uNOCo5KxO+2mC
TzBrxICu37/+NuQK/DFBjpPuymrzVBiHmNhYJlOsTU5xNfxMhbL3PEeCuUwx
0/GXQdlpKmT/bdVe5DVFyTIRz4cHqRAP8RJntpniwzbtR/6cVDjzfst3B1FT
ZOs9ubcvZwJ2vN8ernLAFJXrK7ayD40D+99+rzwtU5xuNTGrfjYOS1rJdqJ6
pjhEaZXwDhiHxordwjyWpsiytHSxlWccgivES2acTdGNsi1EzmAMhsvlqemx
pqiU4BhrUzYC6WW6OryTprgz/diS8+QASD9LM907a4pCmBm69GgAChIY7fQW
TNGOXDYJVgNQdv692/lVU5R7Eu2zVNoP7QoaUb2bzDBcm7Wh9WEfMGcqdqcd
MMNzkPdYwb8HIu/eGXmnZYbyv1VGCpR6gPfat+l2XTPsvz/9qH2hG3Y6Pv/D
YmGG3zhnvjD4doOqgLToaScznK8iKX6+2AVuUcJnlSLMsFXuvlhDVgfMBYVc
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
ILW3yYIPgaVm3TaydHwlccrdLpQPGot0tnUq0PH+hQV19hICmDG5O3F3KR3r
74pY9OwUQK3L8kfuK+g4enDBbuFLArgXHUc3WEXHrS3G7l5FAvDPk5KZUaGj
YriR/Jl2Adh2BZWWqdHR+tc163qKb2oSk55RGnSsUe7PXzUhgCndk+r7teio
LbnvA3eM8j+OguZlOnQ8tFdu8TIBxRvXwthGXSp+B39BxicBuJ2N3n1Vn1qf
W2e2Lp/yUxFMsd2GdGQeMNmYlCAAiev6JWKb6Ogj5sjLPEHx9YGYX6kJHd/c
rNBfvFUAdwta9AO20PHk7VRf70UCwObA+6NbqfO/Mn1l8Iji04AdK2s7HUtB
1TToFB86JtSWHdlBR7v3aw8mG/LBT6HycrsNHedpB7emFvVDzoElPh8d6RhX
PBt7tYCqz79D64PpdNwUMyK134cHe3xeD24m6aghcmKyTp8HXxJciOcudLS9
msONye4DtYanFrc86Ehbtrlg5G4v5Zd2LPIMpcbV093b7LvhsPNyrvZFOrbY
6+zc007dP8+RsIFIqv6cxtQyly6oiU2YIq7QsaHO76ikXydIfurpsbpJxVeO
m3bOawd/W7+nSs+o78Xzv7b6tMAOpvWxlhw6vn9zyiZUvgUUTq5Sjc+jY2wE
7XDKi2bIjfmQKPmKjh4mV8vnTTXBcJVs4I8PdJTmyvf5xjUCwzrTmtNOx7dv
TjxpFqmHs/9YKx7oomO/WefGu8V1kLBshNfTQ0e2oU23r28dVAxuCJjk0/G6
wcEnyl8/gVFY4SONUTpWmc5zVxfUgp073Sd3jLpPu4J8392vBff9fxDG6ejC
Kby4y7UW7qiYtxycpuOysMKRFR01sPANWzxclEB2Q5LkcslqWHfPrU5WgsDh
A1ER+5OqwDJ6XmqKFIF3004O62pWwX+0vYZ5MgSG0IKuvNrDhevmY0LmsgTe
fCn3k9lfCS80E7hcOQKH/gSejw2ohKGJZpd+RQL/5qt3hD6pALEuP91TywlM
OSKmsHlXBSh/WP77txKBqT5iO44OcMD08euPF5UJPF6Fp53COeAQz4yTUyVw
4LQXM02fA57+c8g0dQKtzPyIhaNsiDl0Z+06TQJj+x6kphSz4dGO7eP5WgRe
sRVtjaf49V53oHSrDoFuDVczTp1jQ7dCZHS1LoH2btlbOt3ZMP1Hy5GmT2Bb
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
WCgnWVMv6tUH/wO/+Ted
       "]]},
     Annotation[#, "Charting`Private`Tag$81269#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Critical\"", TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {{{0, 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39, 
        FormBox["\"Oct\"", TraditionalForm]}, {52, 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39, 
        FormBox["\"Oct\"", TraditionalForm]}, {52, 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}}}, {{Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.25, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.35, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.45, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.55, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.65, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.75, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{{0., 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39., 
        FormBox["\"Oct\"", TraditionalForm]}, {52., 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0., 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39., 
        FormBox["\"Oct\"", TraditionalForm]}, {52., 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}}}],
  GridLines->{{}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7934460980332727`*^9, 3.793446136522884*^9}, 
   3.793446410789082*^9, 3.793446948533244*^9, 3.793447062548545*^9, 
   3.793447106173595*^9, 3.793447139888754*^9, {3.7934618171374197`*^9, 
   3.793461876052273*^9}, 3.793461948906311*^9, {3.793461998856566*^9, 
   3.7934620191467113`*^9}, 3.7934623480706882`*^9, {3.7934624057905407`*^9, 
   3.7934624191384983`*^9}, {3.7934624892715187`*^9, 3.793462572784232*^9}, 
   3.7934626081882143`*^9, 3.793468959066543*^9, 3.7934690631758337`*^9, 
   3.7935292808428507`*^9, 3.7935297651009912`*^9, {3.793529806351799*^9, 
   3.7935299254266453`*^9}, {3.7935302735659657`*^9, 3.7935302887473927`*^9}, 
   3.793532159988267*^9, 3.793538246225452*^9, 3.7935388379721937`*^9, 
   3.793617483899315*^9, 3.7936177384008923`*^9, 3.7936286870863457`*^9, 
   3.793631367201066*^9, {3.7936318527714577`*^9, 3.7936318853915777`*^9}, {
   3.793631933807501*^9, 3.7936319612334213`*^9}, {3.7936320323772697`*^9, 
   3.793632074221271*^9}, 3.793632435143073*^9, 3.793632615020903*^9, 
   3.793632692072844*^9, {3.793632885691431*^9, 3.793632896357736*^9}, 
   3.793633150156578*^9, 3.793633212152465*^9, 3.793634257361034*^9, {
   3.793634343018119*^9, 3.793634384077757*^9}, 3.7936348391876707`*^9, 
   3.7936351411816196`*^9, 3.7936401178786077`*^9, 3.79364022354622*^9, 
   3.7937088201456423`*^9, 3.793717680983864*^9, 3.793717909878399*^9, 
   3.793718181319303*^9, 3.793718273365919*^9, 3.7937195457486153`*^9, 
   3.7938013988209343`*^9, 3.793801479111188*^9, 3.793801575149939*^9, 
   3.7938016425135107`*^9, 3.7938017472638597`*^9, 3.794507033765918*^9, 
   3.7945075021559963`*^9, 3.79450754813384*^9, 3.7945076677873697`*^9, 
   3.794513116689986*^9, 3.794513184008316*^9, 3.794515037191884*^9, 
   3.794515322050041*^9, 3.7945686568972473`*^9, 3.7945690215396214`*^9, 
   3.794576700658636*^9, 3.7945781576692123`*^9, 3.794578443404724*^9, 
   3.794579375492632*^9, 3.7945795048761044`*^9, 3.795513849197132*^9, 
   3.795513896822942*^9, 3.795514552968328*^9, 3.7955157768179903`*^9, {
   3.795516179432438*^9, 3.7955161876019506`*^9}},
 CellLabel->
  "Out[1380]=",ExpressionUUID->"1dc1e387-7a01-4e19-b73d-ec5bed4ec247"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbp", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpnsprev"}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", "sf", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpnsprev"}], 
        "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "sf"}], ")"}], "*", "#"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"PlotRange", "[", "figcritprevbptemp", "]"}], 
             "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            "5"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dateticks", ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", 
    " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Critical cases per 10K\>\"", ",", "None", ",", " ", 
       "\"\<Prevalence per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", " ", "Black"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", ".000089"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevon"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevoff"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7934461917708607`*^9, 3.7934462838598347`*^9}, {
   3.793446322446604*^9, 3.7934463225391617`*^9}, {3.793446417493855*^9, 
   3.793446493716259*^9}, {3.793446527768334*^9, 3.79344668076748*^9}, {
   3.793446762278329*^9, 3.7934467828855133`*^9}, {3.793446951803142*^9, 
   3.793446955141111*^9}, {3.79344707334725*^9, 3.793447099371722*^9}, {
   3.793447159075315*^9, 3.7934471754116783`*^9}, {3.7934472158450813`*^9, 
   3.793447223477141*^9}, {3.79344729650998*^9, 3.793447304161545*^9}, {
   3.793447499123787*^9, 3.7934475264506483`*^9}, {3.7934618795755053`*^9, 
   3.793461889980399*^9}, 3.793462004628837*^9, {3.7934620364212713`*^9, 
   3.79346203990898*^9}, {3.7934624225659227`*^9, 3.7934624372262497`*^9}, {
   3.793538845392705*^9, 3.79353885312326*^9}, {3.793631496644718*^9, 
   3.793631523669509*^9}, {3.793631709352571*^9, 3.793631710201035*^9}},
 CellLabel->
  "In[1381]:=",ExpressionUUID->"6c6f23df-a7c0-4d48-8560-cc977492224e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$81345#1"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
VX/T7DbGDQ983GtCOsHpR2NN44AxXnoZ3Ra21AlHXLuTHceMMeLA+18FZ7vA
wuSL2dU5Y0xbyeA+69oNyrw8OZ/Wm2DireCqKr9ekAsVDLFjN8HP+mFvWP/2
gsSSqD2V2wQdF2zk+SPp989eVWa27SaowxdcXvi8HxjSjpww3WeCt+sDjl3d
OgQrfK77+1VNUDKazcH77RB8v+HF7XnQBLNW9I+byA8D1eNaebShCbKYJyod
6RmG+n3ZAq1HTTD3skTiJp1R+Jz+8pvTSRPs//1A5/WTUXi/+V3Nd3cTtKhe
EldlHIPC5Qb/zX4meOW5zE9qzRg8qPreQgo3weiMp1vYPScglPHVm6YYExzN
KTrv2zMB3trnHxvcM8H57yfCvhhS4chVtevliSZIXufiH1NIBaOqX+7KT0zQ
+VKeXDs7DZQZSy2eZZpgUeTnG1w2NNitHaQs8swEhfz+zIuG04Dz6kHBhAIT
fCvPZttQTINflX/+cr82wXHyyRtxbTQYZ3g/EfbOBE/Ftk9RaDRoxpC6P5Um
GDULQ3kLNCgL0X7p99kEN5nEgOkiDXIqmR58qTPBninHuMff6HrD8OmSU4sJ
diyeZ7k6QYNreMOpp9MEVR5sCy9pp8HZEAMjq34TNI/8Lb1QQYNDlaxyNSMm
+HVBxqAhgwYGDGQ+LZoJOvioWTeG0UARw5eLZ0zw0pGDA14uNOCo5KxO+2mC
TzBrxICu37/+NuQK/DFBjpPuymrzVBiHmNhYJlOsTU5xNfxMhbL3PEeCuUwx
0/GXQdlpKmT/bdVe5DVFyTIRz4cHqRAP8RJntpniwzbtR/6cVDjzfst3B1FT
ZOs9ubcvZwJ2vN8ernLAFJXrK7ayD40D+99+rzwtU5xuNTGrfjYOS1rJdqJ6
pjhEaZXwDhiHxordwjyWpsiytHSxlWccgivES2acTdGNsi1EzmAMhsvlqemx
pqiU4BhrUzYC6WW6OryTprgz/diS8+QASD9LM907a4pCmBm69GgAChIY7fQW
TNGOXDYJVgNQdv692/lVU5R7Eu2zVNoP7QoaUb2bzDBcm7Wh9WEfMGcqdqcd
MMNzkPdYwb8HIu/eGXmnZYbyv1VGCpR6gPfat+l2XTPsvz/9qH2hG3Y6Pv/D
YmGG3zhnvjD4doOqgLToaScznK8iKX6+2AVuUcJnlSLMsFXuvlhDVgfMBYVc
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
ILW3yYIPgaVm3TaydHwlccrdLpQPGot0tnUq0PH+hQV19hICmDG5O3F3KR3r
74pY9OwUQK3L8kfuK+g4enDBbuFLArgXHUc3WEXHrS3G7l5FAvDPk5KZUaGj
YriR/Jl2Adh2BZWWqdHR+tc163qKb2oSk55RGnSsUe7PXzUhgCndk+r7teio
LbnvA3eM8j+OguZlOnQ8tFdu8TIBxRvXwthGXSp+B39BxicBuJ2N3n1Vn1qf
W2e2Lp/yUxFMsd2GdGQeMNmYlCAAiev6JWKb6Ogj5sjLPEHx9YGYX6kJHd/c
rNBfvFUAdwta9AO20PHk7VRf70UCwObA+6NbqfO/Mn1l8Iji04AdK2s7HUtB
1TToFB86JtSWHdlBR7v3aw8mG/LBT6HycrsNHedpB7emFvVDzoElPh8d6RhX
PBt7tYCqz79D64PpdNwUMyK134cHe3xeD24m6aghcmKyTp8HXxJciOcudLS9
msONye4DtYanFrc86Ehbtrlg5G4v5Zd2LPIMpcbV093b7LvhsPNyrvZFOrbY
6+zc007dP8+RsIFIqv6cxtQyly6oiU2YIq7QsaHO76ikXydIfurpsbpJxVeO
m3bOawd/W7+nSs+o78Xzv7b6tMAOpvWxlhw6vn9zyiZUvgUUTq5Sjc+jY2wE
7XDKi2bIjfmQKPmKjh4mV8vnTTXBcJVs4I8PdJTmyvf5xjUCwzrTmtNOx7dv
TjxpFqmHs/9YKx7oomO/WefGu8V1kLBshNfTQ0e2oU23r28dVAxuCJjk0/G6
wcEnyl8/gVFY4SONUTpWmc5zVxfUgp073Sd3jLpPu4J8392vBff9fxDG6ejC
Kby4y7UW7qiYtxycpuOysMKRFR01sPANWzxclEB2Q5LkcslqWHfPrU5WgsDh
A1ER+5OqwDJ6XmqKFIF3004O62pWwX+0vYZ5MgSG0IKuvNrDhevmY0LmsgTe
fCn3k9lfCS80E7hcOQKH/gSejw2ohKGJZpd+RQL/5qt3hD6pALEuP91TywlM
OSKmsHlXBSh/WP77txKBqT5iO44OcMD08euPF5UJPF6Fp53COeAQz4yTUyVw
4LQXM02fA57+c8g0dQKtzPyIhaNsiDl0Z+06TQJj+x6kphSz4dGO7eP5WgRe
sRVtjaf49V53oHSrDoFuDVczTp1jQ7dCZHS1LoH2btlbOt3ZMP1Hy5GmT2Bb
T1pZ+hE2KPC5qgIDAv31v44Vu1L+i+vx7fRGAutUrbK2ebLBOnfhqz/GBEok
tnS5h7DB9WZOeKQppYejZV/IdTZcCLbftxgI7O1YfKWP4muq64RShjmBO5Wc
iJl6NhTaXv+svY3A8d5vxgcn2dBgZJL30pLAfds1d19Q5oC0WKB17W6qHney
OTx/DqgPr1Ik9hD40zVku+9jDmD9W97AXgJNWQZkRg8HzmSIBcweIPDoVGB9
m20FxEU8sIxyJNBQbSYk6lIFPDm5c9ESOoHzLCNm5cop/7rl8qP1LAI/xKr/
UdteCXvb5FsYbgSaaKVuvrKPC1pyaobFgQTKZ2wQHb5bDdeFTH8EBhMofsV2
v/t0NYiN7H9uHkrgt8gTwhJ2NdDDvqBTHknlk7JR6o1QLVwL5KnXJRCY6e8g
er2gFoSGbisMZhLonLlu+LVZHXg0FzVkZhOodjLeZr5nHbS/r4s78YxA3arQ
Z4OUP8tPE17wI4+af0B7Z7mgHo4fcJb4W0rVV2vdvpLBemgqVZmUayZQ4L2m
4FFBI2x7Ypzf1Eqg+1ehd2Y/G+F5sp33jQ4CI8CmxnNDE0T7Bo+u7CPw0qIV
5q+zm8Bcu3dw7VcCXSaWHBZ+0gyPk9JbQYSBzXnfmyOrW+GCx6pXx3UZmOW9
V7j2RheY/SMeNbuBgSPPFXYHDXTB5K9hWrwBA388thHvN+wG9+Ci6SJjBh4r
im+qaKD644QDJtLbGJiWIX/21uUe0CyKKnzoyMA2S8PHTfxe6Av0jDSlU/Ph
NrLXFvVBioWTUy2Dgfku9YoF0AeLqtZM/XJmYGPzZJhmch/87n67yeoEA5du
uLW0jvJb1WKTBfxgBhbf/MDm9PZDREXXRb9QBl6UXKc+bzEfLK58cJh/kYGH
ZUqmXu2g+n/F+F8G0QxUObU06MhzPnh2+pWzYxjoqdTNcBbwQfs2K4mIpdYf
fd1ftVwAgiNWR0fjGWgl/zPskZ0AMtat3xiayMBpK43Hf0MFQIzKSyjeYOCm
9995vzIFoJD3uykrmYFewtPf/5RRPPPruw+pDJSMlU33pvhyyYzjW5/OwA13
ZH1SGwSwTeSZ5dE7DDTfMw3p1QKYLU9U+H2PgX4jd3rPlwqgKPo/QcxDBqbS
raY0sgTgbXc4f3UWA6XjNkeeuCKA9Qq7w/Ozqfy6LXRlPATwuW3DwV3PqPz7
OmoLrCgepSmu6cphUC5JjSehJADy8Oz46TwGjrf/2RkxwgfFtYIPYi+p+a83
XF8W86HuK/fajSIGJufVCktG8MHqzE3DtyUMvO2rfyRpCR+ETYPFDryj9M4L
DQzs6IdiIdfGwfcMHCZPSfLS+kHvkqHPwgoGcovVpJRU+2FZSu0LZgOlr7pO
jokKVa8dctGCJgbO9Ur9sKWX6kd+HnA50crA8pjPkroZffB5d7tsQBcDtTvF
68xU+uDlNN8jcZCBJ4Ve+lup9cJBx9+aVTMM7Myb98svpAukRc2E7Gep/e7x
xtdT/dObp0HNbXNIrD199I9xSieoS4iHD4qTWLgzJMj5dQf8zFvIE5ElcfWp
qAM2Mu0QJ7cmxUSdROHTQ+UDY81gWeLq/VaDxPsTbqZ3rjXDtFvW7h1aJMbc
HnN5YdwMh97pTR/QJTGCs9SYG9YEeqc3O5w2JtFdY52Qj04j9K8IXD+5mcSk
3IYXF9oa4Dq7VOy8GYkTAbcLuRENMLvK8kW0BYk127I0/1L/b3X1XtmHNiT6
nsv66lVQByH+8YPr95IYlOi64vOJOjBa01SSt4/EP+HNxX7qdZDyH92jzIFE
2kKWRlcS1R9rH6nsOkTi9Ri3oB2RtSB1KSBssS+J8zCsq8SoCmRMDWzrz5Ko
ea1aua+QC/Ijw4qxASTKC8nMUQAuKO8jH88LJlF7u4xqrG0lrBFd4ltxgUTF
TT6by9sqQDu/BiLCSfT42D8wfLQC9F0jpCwjqfxq9B9MTXBg0zLzepFoEi8m
jamqRHDAjDt1620MiXbRbj5PNTiwLTDnyPlYEr8wuNLn2tiwS++43pYEEode
nW+US2XD3j7V6elEEnVSDYZOnGJT70VH2csblD7ONqFvbdlAWF677HuLRKaj
58FzJmxwnrRxMEgj8ejhn5+MdCneZIqrjGWQeHVr9mWuNhs8iJKhp3epfLY5
v1mrT/k5mbMvTjwgMUG4cOqkGeXfSvUC12WSWKwYsou7lw1Bnp+tPj8m8c76
n4JLFN/C1W7LPnhK4oem39tlwtgQ3URrP5xDYs6E32jtPTbFE7l7q/NIFMyR
OkSn/FySCdejp4DEt/qBb7ePseHWcOim1CISN1URzv8oceB26hZh4jWJZHrb
vM5dHHgi/PRa8zsSnX3HbW2zOfCxIra4uorEs1GJOcsjK4B7bld4dC2JIB2p
OlpWAXXrRfbuqieRa/D8+xKhSuiK8+Z9aKHGhV3E/HOVMEFzkH7NI7Ek4IJ9
URAX1L+scMyaIvEeY9Al9kU1aKU0qhybIbGiYptdyt9q0LON+bJmlkSHbzPj
bjtrwDR3NvC2KBM9X5bWWvbWgH1A370bC5i4bs/y7+PRtRA69+GPi+pM3Nho
ExXU/AmaE3RrFDSZWLXzb2fG7CfQWlmQeU+LicmGB7sVNeugVu/joTJdJpqU
ez6W8q+D5Qf7a/4aM7GoSGRCdHU95KQrP/bZw8RrD7LzW0IaQEzr4UVROyYy
VI7z4p41gGOurkv8fiZOJY8cy+pqgL8fzJY9d2TiphR13tTmRtj5hYgYdmai
ewA3Uul3I/QY3jjscoaJGTuSHktFN8M/Jco45sfEmnm0J2MlzRC+4+Hy4HNM
HMkPHrD42Qza9IK61GBqrJMXo0K2wJmgRmyLYqLEnVsH241aQaZSVskunYmJ
J/L4TTNtsIV1qdGMw8RTEV/0ad1dMJwr0baUy0RxYz2e6dpuuCUR1vWzmokF
34xciry6YfrJ+YHMBiZKH4uN3ybWAy//eE8p9DBxZaztxY9pPWCQzFT6NsHE
OvsFYt95vdA/0qFSMcXEvXm3yc/z+yB+K23NvRkm7t9d4GG4qQ+mvDOTdOaw
UHs4zLDich84rriXzhNn4aTcRcGoKQ8WH7+ZY7uIhWFx8E9gVj8My7cavJZj
IWvh0hUdbf3w/s2SAq3FLDQ3b1KLl+aD96Jrr8QUWUi0J3TNP84H6+L6LV5L
WaiM4vp1yXxQPbKotGcZC40SfNRGuRQPCq+8f6XEwoyvf9I36wkg06Xacu0q
Fj6oTn533FkAIfPncxKV/79fkI3dZQHQCnbvFl3Nwm9lHi+bHghgw6FLVadV
WUhPsQ/9nCsAybkc2241Fia/EWRvp8Y9LyTqrNewcFjzt70ftf4laWlfpMFC
Br2n83OsAK5KhjVprGWhV/+x29VeAnDNKXO8psXCSzod7lv3UP6KEG4X1mZh
q6H17S2rBaAobs44pcNC+T1lmhmjfPj29Hx353oWPg/PkjMq4sNHpzeHduux
8Mt1g7ys83xIFfnDe7mByp/utSTdnA97HPwH4w1YWPlqZlrzdT+smVPoNseI
hUcWpPIyzvTDn8xfwx4bWaj6xd3dU68fHv/1/r7ThNJT/ZiDSyoPQh/mehVs
ZuFysT81K+15QOwbG1fbwsK0CZJ/UIoHBjN6Z+PMWOicwrq55U0fzL1/cnoW
WCgnWVMv6tUH/wO/+Ted
       "]]},
     Annotation[#, "Charting`Private`Tag$81345#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Critical cases per 10K\"", TraditionalForm], 
     FormBox["\"Prevalence per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{Automatic, {{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 5], 0.2], 
       FormBox["\"10.\"", TraditionalForm]}, {
       NCache[
        Rational[2, 5], 0.4], 
       FormBox["\"20.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 5], 0.6], 
       FormBox["\"30.\"", TraditionalForm]}, {
       NCache[
        Rational[4, 5], 0.8], 
       FormBox["\"40.\"", TraditionalForm]}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{0.8899999999999999, {
       GrayLevel[0], 
       Opacity[1]}}, {0.7000000000000001, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.2, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7934462183922*^9, 3.793446262635705*^9}, 
   3.793446322861353*^9, {3.793446417955284*^9, 3.793446493969702*^9}, {
   3.793446528220602*^9, 3.7934466811191187`*^9}, {3.793446762960642*^9, 
   3.793446783185998*^9}, 3.7934469583619823`*^9, {3.793447077418531*^9, 
   3.7934471077778254`*^9}, {3.7934471626694593`*^9, 3.793447176249228*^9}, {
   3.793447220612138*^9, 3.793447223788662*^9}, 3.7934473045057087`*^9, {
   3.7934475125474377`*^9, 3.793447526798827*^9}, 3.793461894648978*^9, 
   3.793461954811411*^9, {3.793462025917428*^9, 3.793462051362706*^9}, {
   3.7934624165193977`*^9, 3.793462437537854*^9}, {3.793462489379582*^9, 
   3.793462572943308*^9}, 3.793462608295115*^9, 3.793468960554473*^9, 
   3.7934690632834044`*^9, 3.7935292809471073`*^9, 3.793529765163126*^9, {
   3.793529806446199*^9, 3.793529925526959*^9}, {3.793530273637145*^9, 
   3.7935302888680696`*^9}, 3.793532162151572*^9, 3.793538246353285*^9, {
   3.7935388463385468`*^9, 3.793538853743732*^9}, 3.793617485369368*^9, 
   3.7936177385418587`*^9, 3.793628687297423*^9, 3.793631367349255*^9, {
   3.7936315179470167`*^9, 3.793631524247354*^9}, 3.7936317107362137`*^9, {
   3.7936318555128393`*^9, 3.79363188690956*^9}, {3.793631936832223*^9, 
   3.7936319627131557`*^9}, {3.793632033683556*^9, 3.793632076506719*^9}, 
   3.793632435266795*^9, 3.7936326151734324`*^9, 3.7936326938437443`*^9, {
   3.793632887378137*^9, 3.793632896509204*^9}, 3.793633150297453*^9, 
   3.793633212280756*^9, 3.793634113241684*^9, 3.793634258875181*^9, {
   3.793634291668049*^9, 3.793634384224745*^9}, 3.793634839330484*^9, 
   3.793635141331812*^9, 3.793640118035039*^9, 3.793640223640168*^9, 
   3.793708821958202*^9, 3.793717681230094*^9, 3.7937179100106707`*^9, 
   3.79371818152843*^9, 3.793718273600041*^9, 3.793719545883644*^9, 
   3.793801398956727*^9, 3.793801479248869*^9, 3.7938015752891483`*^9, 
   3.793801642654684*^9, 3.793801747390401*^9, 3.794507033990834*^9, 
   3.794507502315681*^9, 3.7945075482767878`*^9, 3.794507667915263*^9, 
   3.794513117110821*^9, 3.794513184142086*^9, 3.794515037313142*^9, 
   3.794515322179332*^9, 3.794568657024329*^9, 3.7945690216934566`*^9, 
   3.794576700803309*^9, 3.7945781578308973`*^9, 3.794578443657825*^9, 
   3.794579375572747*^9, 3.794579505036727*^9, 3.7955138493123703`*^9, 
   3.795513897093109*^9, 3.795514553118288*^9, 3.795515777043782*^9, {
   3.795516179574772*^9, 3.795516187777906*^9}},
 CellLabel->
  "Out[1381]=",ExpressionUUID->"b3026925-9e5f-4027-8ef8-1bd45bb5de53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"figcritprevbp", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"10000", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpnsprev"}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"10000", "*", "sf", "*", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ISq", "[", "t", "]"}], "+", 
           RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
           RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpnsprev"}], 
         "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1.2"}], "}"}]}], ",", " ", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "/", "sf"}], ")"}], "*", "#"}], "]"}]}], "}"}], 
            "&"}], "/@", 
           RowBox[{"FindDivisions", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"PlotRange", "[", "figcritprevbptemp", "]"}], 
              "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
             "5"}], "]"}]}], ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dateticks", ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", 
     " ", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",",
      " ", 
     RowBox[{"PlotRangePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", " ", 
        "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Black"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"10000", "*", ".000089"}], ",", 
            RowBox[{"{", 
             RowBox[{"Black", ",", " ", 
              RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"10000", "*", "sf", "*", "thresholdprevon"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
              RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{"10000", "*", "sf", "*", "thresholdprevoff"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
              RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}]}], "}"}]}],
        "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.793708807863866*^9, 3.793708862589035*^9}, {
  3.793717820859579*^9, 3.793717820954225*^9}},
 CellLabel->
  "In[1382]:=",ExpressionUUID->"edbfc412-277b-4cfc-81c3-55bc3a69e7f7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$81483#1"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
VX/T7DbGDQ983GtCOsHpR2NN44AxXnoZ3Ra21AlHXLuTHceMMeLA+18FZ7vA
wuSL2dU5Y0xbyeA+69oNyrw8OZ/Wm2DireCqKr9ekAsVDLFjN8HP+mFvWP/2
gsSSqD2V2wQdF2zk+SPp989eVWa27SaowxdcXvi8HxjSjpww3WeCt+sDjl3d
OgQrfK77+1VNUDKazcH77RB8v+HF7XnQBLNW9I+byA8D1eNaebShCbKYJyod
6RmG+n3ZAq1HTTD3skTiJp1R+Jz+8pvTSRPs//1A5/WTUXi/+V3Nd3cTtKhe
EldlHIPC5Qb/zX4meOW5zE9qzRg8qPreQgo3weiMp1vYPScglPHVm6YYExzN
KTrv2zMB3trnHxvcM8H57yfCvhhS4chVtevliSZIXufiH1NIBaOqX+7KT0zQ
+VKeXDs7DZQZSy2eZZpgUeTnG1w2NNitHaQs8swEhfz+zIuG04Dz6kHBhAIT
fCvPZttQTINflX/+cr82wXHyyRtxbTQYZ3g/EfbOBE/Ftk9RaDRoxpC6P5Um
GDULQ3kLNCgL0X7p99kEN5nEgOkiDXIqmR58qTPBninHuMff6HrD8OmSU4sJ
diyeZ7k6QYNreMOpp9MEVR5sCy9pp8HZEAMjq34TNI/8Lb1QQYNDlaxyNSMm
+HVBxqAhgwYGDGQ+LZoJOvioWTeG0UARw5eLZ0zw0pGDA14uNOCo5KxO+2mC
TzBrxICu37/+NuQK/DFBjpPuymrzVBiHmNhYJlOsTU5xNfxMhbL3PEeCuUwx
0/GXQdlpKmT/bdVe5DVFyTIRz4cHqRAP8RJntpniwzbtR/6cVDjzfst3B1FT
ZOs9ubcvZwJ2vN8ernLAFJXrK7ayD40D+99+rzwtU5xuNTGrfjYOS1rJdqJ6
pjhEaZXwDhiHxordwjyWpsiytHSxlWccgivES2acTdGNsi1EzmAMhsvlqemx
pqiU4BhrUzYC6WW6OryTprgz/diS8+QASD9LM907a4pCmBm69GgAChIY7fQW
TNGOXDYJVgNQdv692/lVU5R7Eu2zVNoP7QoaUb2bzDBcm7Wh9WEfMGcqdqcd
MMNzkPdYwb8HIu/eGXmnZYbyv1VGCpR6gPfat+l2XTPsvz/9qH2hG3Y6Pv/D
YmGG3zhnvjD4doOqgLToaScznK8iKX6+2AVuUcJnlSLMsFXuvlhDVgfMBYVc
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
ILW3yYIPgaVm3TaydHwlccrdLpQPGot0tnUq0PH+hQV19hICmDG5O3F3KR3r
74pY9OwUQK3L8kfuK+g4enDBbuFLArgXHUc3WEXHrS3G7l5FAvDPk5KZUaGj
YriR/Jl2Adh2BZWWqdHR+tc163qKb2oSk55RGnSsUe7PXzUhgCndk+r7teio
LbnvA3eM8j+OguZlOnQ8tFdu8TIBxRvXwthGXSp+B39BxicBuJ2N3n1Vn1qf
W2e2Lp/yUxFMsd2GdGQeMNmYlCAAiev6JWKb6Ogj5sjLPEHx9YGYX6kJHd/c
rNBfvFUAdwta9AO20PHk7VRf70UCwObA+6NbqfO/Mn1l8Iji04AdK2s7HUtB
1TToFB86JtSWHdlBR7v3aw8mG/LBT6HycrsNHedpB7emFvVDzoElPh8d6RhX
PBt7tYCqz79D64PpdNwUMyK134cHe3xeD24m6aghcmKyTp8HXxJciOcudLS9
msONye4DtYanFrc86Ehbtrlg5G4v5Zd2LPIMpcbV093b7LvhsPNyrvZFOrbY
6+zc007dP8+RsIFIqv6cxtQyly6oiU2YIq7QsaHO76ikXydIfurpsbpJxVeO
m3bOawd/W7+nSs+o78Xzv7b6tMAOpvWxlhw6vn9zyiZUvgUUTq5Sjc+jY2wE
7XDKi2bIjfmQKPmKjh4mV8vnTTXBcJVs4I8PdJTmyvf5xjUCwzrTmtNOx7dv
TjxpFqmHs/9YKx7oomO/WefGu8V1kLBshNfTQ0e2oU23r28dVAxuCJjk0/G6
wcEnyl8/gVFY4SONUTpWmc5zVxfUgp073Sd3jLpPu4J8392vBff9fxDG6ejC
Kby4y7UW7qiYtxycpuOysMKRFR01sPANWzxclEB2Q5LkcslqWHfPrU5WgsDh
A1ER+5OqwDJ6XmqKFIF3004O62pWwX+0vYZ5MgSG0IKuvNrDhevmY0LmsgTe
fCn3k9lfCS80E7hcOQKH/gSejw2ohKGJZpd+RQL/5qt3hD6pALEuP91TywlM
OSKmsHlXBSh/WP77txKBqT5iO44OcMD08euPF5UJPF6Fp53COeAQz4yTUyVw
4LQXM02fA57+c8g0dQKtzPyIhaNsiDl0Z+06TQJj+x6kphSz4dGO7eP5WgRe
sRVtjaf49V53oHSrDoFuDVczTp1jQ7dCZHS1LoH2btlbOt3ZMP1Hy5GmT2Bb
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
WCgnWVMv6tUH/wO/+Ted
       "]]},
     Annotation[#, "Charting`Private`Tag$81483#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Prevalence per 10K\"", TraditionalForm], 
     FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 5], 0.2], 
       FormBox["\"10.\"", TraditionalForm]}, {
       NCache[
        Rational[2, 5], 0.4], 
       FormBox["\"20.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 5], 0.6], 
       FormBox["\"30.\"", TraditionalForm]}, {
       NCache[
        Rational[4, 5], 0.8], 
       FormBox["\"40.\"", TraditionalForm]}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.2, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.2\"", 0.2`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.4\"", 0.4`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.6\"", 0.6`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.8, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.8\"", 0.8`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.0\"", 1.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.2, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.2\"", 1.2`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.05, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.15, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.25, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.35, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.45, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.55, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.65, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.75, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.85, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.95, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.05, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.15, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{0.8899999999999999, {
       GrayLevel[0], 
       Opacity[1]}}, {0.7000000000000001, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.2, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7937088132503643`*^9, 3.793708882176083*^9}, 
   3.793717681655506*^9, {3.793717818261732*^9, 3.793717821386374*^9}, 
   3.7937179101913652`*^9, 3.7937181818794003`*^9, 3.793718273836336*^9, 
   3.793719546027667*^9, 3.793801399085376*^9, 3.793801479407075*^9, 
   3.793801575442823*^9, 3.7938016428614264`*^9, 3.7938017475284357`*^9, 
   3.794507034222432*^9, 3.794507502463951*^9, 3.7945075485407257`*^9, 
   3.794507668058676*^9, 3.7945131175532637`*^9, 3.794513184289607*^9, 
   3.794515037461585*^9, 3.794515322333177*^9, 3.794568657157696*^9, 
   3.7945690218569613`*^9, 3.794576700966303*^9, 3.794578157991281*^9, 
   3.7945784439195967`*^9, 3.794579375673527*^9, 3.794579505190486*^9, 
   3.79551384948342*^9, 3.7955138973464823`*^9, 3.795514553286211*^9, 
   3.795515777260828*^9, {3.795516179714916*^9, 3.795516188030072*^9}},
 CellLabel->
  "Out[1382]=",ExpressionUUID->"11e0d76b-b8b0-4c54-a4e5-5424f47666fd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fignpibp", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"10", "*", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"npi", "[", "t", "]"}]}], "/.", "sol60bpnsprev"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "130"}], "}"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", 
        RowBox[{"Opacity", "[", "0", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.79344727493867*^9, 3.793447275672996*^9}, {
  3.7934625847549*^9, 3.793462585031742*^9}, {3.7936175028040037`*^9, 
  3.793617538931221*^9}},
 CellLabel->
  "In[1383]:=",ExpressionUUID->"24b44674-a498-40b4-a201-950c5d746f2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpnpi", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"figcritprevbp", ",", " ", "fignpibp"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"PlotRange", "[", "figcritprevbp", "]"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "ar"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "imsz"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793446704447353*^9, 3.793446711536757*^9}, {
  3.793446744118206*^9, 3.793446750009528*^9}, {3.793446976069807*^9, 
  3.793446978955377*^9}, {3.793447262748226*^9, 3.7934472636613283`*^9}, {
  3.793461917634132*^9, 3.793461928547559*^9}, {3.7936314331853037`*^9, 
  3.7936314420113497`*^9}, {3.793631476571097*^9, 3.793631485116753*^9}, {
  3.793632121400091*^9, 3.7936321215815372`*^9}, {3.793633048723785*^9, 
  3.7936330803039227`*^9}, {3.7936331333339367`*^9, 3.7936331367594547`*^9}},
 CellLabel->
  "In[1384]:=",ExpressionUUID->"27cf9651-c4d9-4c53-b7c4-4d445d96fa3e"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$81483#1"]& ], 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
VX/T7DbGDQ983GtCOsHpR2NN44AxXnoZ3Ra21AlHXLuTHceMMeLA+18FZ7vA
wuSL2dU5Y0xbyeA+69oNyrw8OZ/Wm2DireCqKr9ekAsVDLFjN8HP+mFvWP/2
gsSSqD2V2wQdF2zk+SPp989eVWa27SaowxdcXvi8HxjSjpww3WeCt+sDjl3d
OgQrfK77+1VNUDKazcH77RB8v+HF7XnQBLNW9I+byA8D1eNaebShCbKYJyod
6RmG+n3ZAq1HTTD3skTiJp1R+Jz+8pvTSRPs//1A5/WTUXi/+V3Nd3cTtKhe
EldlHIPC5Qb/zX4meOW5zE9qzRg8qPreQgo3weiMp1vYPScglPHVm6YYExzN
KTrv2zMB3trnHxvcM8H57yfCvhhS4chVtevliSZIXufiH1NIBaOqX+7KT0zQ
+VKeXDs7DZQZSy2eZZpgUeTnG1w2NNitHaQs8swEhfz+zIuG04Dz6kHBhAIT
fCvPZttQTINflX/+cr82wXHyyRtxbTQYZ3g/EfbOBE/Ftk9RaDRoxpC6P5Um
GDULQ3kLNCgL0X7p99kEN5nEgOkiDXIqmR58qTPBninHuMff6HrD8OmSU4sJ
diyeZ7k6QYNreMOpp9MEVR5sCy9pp8HZEAMjq34TNI/8Lb1QQYNDlaxyNSMm
+HVBxqAhgwYGDGQ+LZoJOvioWTeG0UARw5eLZ0zw0pGDA14uNOCo5KxO+2mC
TzBrxICu37/+NuQK/DFBjpPuymrzVBiHmNhYJlOsTU5xNfxMhbL3PEeCuUwx
0/GXQdlpKmT/bdVe5DVFyTIRz4cHqRAP8RJntpniwzbtR/6cVDjzfst3B1FT
ZOs9ubcvZwJ2vN8ernLAFJXrK7ayD40D+99+rzwtU5xuNTGrfjYOS1rJdqJ6
pjhEaZXwDhiHxordwjyWpsiytHSxlWccgivES2acTdGNsi1EzmAMhsvlqemx
pqiU4BhrUzYC6WW6OryTprgz/diS8+QASD9LM907a4pCmBm69GgAChIY7fQW
TNGOXDYJVgNQdv692/lVU5R7Eu2zVNoP7QoaUb2bzDBcm7Wh9WEfMGcqdqcd
MMNzkPdYwb8HIu/eGXmnZYbyv1VGCpR6gPfat+l2XTPsvz/9qH2hG3Y6Pv/D
YmGG3zhnvjD4doOqgLToaScznK8iKX6+2AVuUcJnlSLMsFXuvlhDVgfMBYVc
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
ILW3yYIPgaVm3TaydHwlccrdLpQPGot0tnUq0PH+hQV19hICmDG5O3F3KR3r
74pY9OwUQK3L8kfuK+g4enDBbuFLArgXHUc3WEXHrS3G7l5FAvDPk5KZUaGj
YriR/Jl2Adh2BZWWqdHR+tc163qKb2oSk55RGnSsUe7PXzUhgCndk+r7teio
LbnvA3eM8j+OguZlOnQ8tFdu8TIBxRvXwthGXSp+B39BxicBuJ2N3n1Vn1qf
W2e2Lp/yUxFMsd2GdGQeMNmYlCAAiev6JWKb6Ogj5sjLPEHx9YGYX6kJHd/c
rNBfvFUAdwta9AO20PHk7VRf70UCwObA+6NbqfO/Mn1l8Iji04AdK2s7HUtB
1TToFB86JtSWHdlBR7v3aw8mG/LBT6HycrsNHedpB7emFvVDzoElPh8d6RhX
PBt7tYCqz79D64PpdNwUMyK134cHe3xeD24m6aghcmKyTp8HXxJciOcudLS9
msONye4DtYanFrc86Ehbtrlg5G4v5Zd2LPIMpcbV093b7LvhsPNyrvZFOrbY
6+zc007dP8+RsIFIqv6cxtQyly6oiU2YIq7QsaHO76ikXydIfurpsbpJxVeO
m3bOawd/W7+nSs+o78Xzv7b6tMAOpvWxlhw6vn9zyiZUvgUUTq5Sjc+jY2wE
7XDKi2bIjfmQKPmKjh4mV8vnTTXBcJVs4I8PdJTmyvf5xjUCwzrTmtNOx7dv
TjxpFqmHs/9YKx7oomO/WefGu8V1kLBshNfTQ0e2oU23r28dVAxuCJjk0/G6
wcEnyl8/gVFY4SONUTpWmc5zVxfUgp073Sd3jLpPu4J8392vBff9fxDG6ejC
Kby4y7UW7qiYtxycpuOysMKRFR01sPANWzxclEB2Q5LkcslqWHfPrU5WgsDh
A1ER+5OqwDJ6XmqKFIF3004O62pWwX+0vYZ5MgSG0IKuvNrDhevmY0LmsgTe
fCn3k9lfCS80E7hcOQKH/gSejw2ohKGJZpd+RQL/5qt3hD6pALEuP91TywlM
OSKmsHlXBSh/WP77txKBqT5iO44OcMD08euPF5UJPF6Fp53COeAQz4yTUyVw
4LQXM02fA57+c8g0dQKtzPyIhaNsiDl0Z+06TQJj+x6kphSz4dGO7eP5WgRe
sRVtjaf49V53oHSrDoFuDVczTp1jQ7dCZHS1LoH2btlbOt3ZMP1Hy5GmT2Bb
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
WCgnWVMv6tUH/wO/+Ted
        "]]},
      Annotation[#, "Charting`Private`Tag$81483#2"]& ]}, {}}, {
    GraphicsComplexBox[CompressedData["
1:eJxVWnc4133YlVmIJyuEzIyEZGT9zJAkm8zIjCJJSYlIGSmECCUjhMomRJHK
zEjJzkqkaCDjfd/rep7v8fZHXef6fOh7n/ucc9+/L3yOXsbO5GRkZFf/96//
+3eIWqrHVf0ViezfPw+6jfTn3CnV/sM1g/Y+FQdYCUxD89O/Lnkngd1pYxfn
BwQJ/KRU7v4JG7F/Mbva5HL4ONUlSQKrzfvSvbwqTeCTw3RBtGqyxNfH7Ljw
8nizPHE+kfPt4uMbigTeF6JItZVPhcDD5ie/nH6oSny9Pakr3UlanTh/e85a
Lslfg8CH+yaodPo1CRxU6Rxyfv8B4uslVQ2npC9pE+d/ZlWuuwzoEFhJM5FR
YNdB4n5i/cI7ywg9AmdUa2owTR0i7u+2W08ylThM4GaRWvF/bhkQ9yeTprJN
+44Q532aIa4MNw0JrN/OzPGYZETcX9ljRbo9Cryfj3+T3G1j4n5L5+fkJA0T
4jzNwjpHfRx4xdvUJDvelLh/x5bC54iiGYGjNue7Vn0yI+7T675fHokwB59W
ZZsMJCwIzErOnu03ZEHcT7soWfs51JLAl0vVCpiEjxL3Z650Kay9P0qcJwpw
KUoEWBG4zXKil3OPNXHfVj9P/80nYDFmQdnqQBvifsipnc88JG0JzJnaUWLf
bUvc3xIRcJXVz47AoXQ5C9eE7In7KsciekhvgOmyvZbXVY8R938ZuT357v5T
9b/z39SvknPN+MHPMacWiVRh4r6+5bBGxYw4gfv+cK3z8+8lsLl7XePE6D4C
r6++4Cu/Kkd8P2VHmfvh4grEOX0Ci7pdrxKBaWdNzqk6kQg89VOrmSFEjfh6
FuvtM2s90D+9KB/PdzHofeJgdoN9hBZx33Klr7Sn7wBxHsemU6G/B3pPujPd
3BCsS2D3K43fVT5A/9zPd0TIKkDvrjf4Tu2L1CdwwEu749JDh4n7Rx263KVl
jxDY9XWALRcJeo8LP1Q3OAGcuVb2KP0W9J4sXLvTWQl6J18mb3P9Ciwbfy99
Ng56PzzWu3pGBXrXm3w0ujwJzFTcO0MZCb3ri6jvNdhnTmAPI+21xH7o31ti
0mQ0DPq3ei4gvUcaemfgqJD922NJnMtxRZzZfBn61+j6o8AmCr1LkzaFC3YD
JxjrMvmEQu8NkpN1Gnug9/d1fIvMvcBtVIvl48HQfyzzrlRFIej91duY6rZW
O+J8WDbJ6fg56J3VI7noCNMxAt/Vjz+/4D5G6F2Favhr6DY+4lxRNmD0lsqu
f3G3cnNB8pSpDPQs5zXZMTyKPOfZr0PKfoG8Fu9YHTq+G3rljNV2NtmnRZzP
WN3nehiOPNbVZMmLl4T+Oh0lgqQuQ39WdTQSTSN6xHnXP48DX4Yhb5kadQ+l
jyJvy1wm435XQV+LLs6OOa7QV7MY/eMVBugp9UbsZNtzYLIS9TRND+jrdypH
l9U2UwKbXT8pmecIPXne8dMPpYGeUhvaxO5YQT8Vw9wz7zZDP+/fLvh7FQD3
uTnf2moC/Wx/NK5ASwa9jD2Jdsh9CPxP7WvqMEob4j7Z9AO2qTzoRaQqsjLH
Enpxy6Pmm0+HPoru8+afNYA+ZO7ac8/9Bn6yOf9gW5IAgQcjDpe1rIgQ/9+o
4MSD8zEyxPnrqDSfGyKY57/Sjz35QIV5nckRVVbZp0acF2+iFvQcQT41pLIe
oRTHPJ6erZtd6IIeyB7YOBzai/k7XCM5kXELeSTgx6CbLo/+31+1vf7yGuat
d/7jmVdM6L9hwuZfyZXA7oLet1pd0X9XlzMlZNtNCHzCbzUzsRp6yBRLELnh
jnxpH1DPsy+GHsQr6NjY7aEHjTvrF8WLMT9XUkXPX7dG/7VdL/4IW0OexLQX
mlM8gh48/25R5DdG/4Oazzy5R2ZN4HPpVAHrZuh/fuL9j6oU6L+vkVMZ/yPM
S6GvXJaPlqAHhuZt3Eb30f9bm6++FxbFfJxUn9u85N5N5MUxypO3fbx4ifud
98Jm628I/Yu7lTsf+uecjUE+pASUdHOtQw8yZQmyrTTIAzlaig5GB+QBdddo
U64x/L9Yt7rOWAb/X5a3oI+ygv+/+VFUW1ai//x3q2t2m6C/TuLFfq8XjYj7
Li9jU76Zo59vL1SpGPzd4Hefio6LBtiXLhpus7r3A/11+cF5UPAn+lmVsS1F
NAn9JE/sVwj9iv2HdKKn1SMG/ZO7Wpkr/B35Hx/4WajzNvpnfttMkVYL/dvP
qd5FEYV+7TAfa19TQL8qVn2X2IaBu2gU5p/94Scwl45JiaTif35lV3NqlNLj
78U+EqTTx0xfin1D+9qU2lgh8rtFyPzneCn8qvGyx6Y/D/6UYdqW20AJf7an
lPW406EfFx+zL12wgx/J715637mCfL7w1t6QJwv9kpFSUpfZBP91XDXI0MhB
f7xfRx2Svod+KHtnC+w7CL8dPX7GjSYV/XlUuKunTxv9GTvLNU4VD39ZTJIp
pqigPx9Dq7gcp4HT3H5zp6ujP+riI1Ois8DpuyXkQxPgr99WFrQ1n9Gvc0E9
an2R6E9n5c2GZ9yYxxlvvXrtZzFvk+XMlg7JoD8RjulmChboB9mp37c/2qEf
Dx6puJOK4J/q59tsArciH4WnqX8sF2E/k2OO7vtCh/1MWtR5UkoI+cdff97N
VRjzriSVP7rXD3zbDH8iuXOD7/kfPRal9civyD86vyZqwN/0797jY+yYV3+H
6vfrnIS+ExVbTg2Xgy9Lrqz7n6nBTw65f0z9FOaNuCn93UV/zJsTKxP6WebI
F/J8SfGb1NiPY9nzA+lWodeWvTkcnbbQa8OhjO30T6HPwZoR8mci0OMux6dJ
29s27Kcpj4RbxaFPLrLTm1d9sT+Kt0bGGL2B/kii6q/J6qE3YaY9WgNsyG+d
c8my9c+hHwOLC1NxMsjfy+IZopQnGoj8nQ8pdnPnQf7ymNGf6ZMVIjBvgwZL
nRvyl/TlH3udLvDzyaFEtEEfeuGlq/FwUUbe6tYvusncR972tx/zLcmEn+Vl
3TxmdcGHVEGYVeEs8pXj0LMdDfrwq8wX2gWd78A6U7Z8LlrI19D8weH8Ceir
1j/pXOsX8Cd+i7eA+ib8+4f+g4L6CPJ1+tUixeEw6G34dciepnD40zO4arlK
AXrjNbbLpw/G/twh9crhpST8uVx4eTKvG9jp2uVXRdn8BFb4sEUlkgF5WjSy
VOpZCL8e4ExszIpCnm6vZQtbugP/fpQP7Oe/D/8a6H3VD/4G/oWeRHAZ/IJf
T2z2e/r+IPSpF+vU/OEH8vOmE93aUDL6cWXrOX72NPBdryKdsiMe/Gq1nMlT
I8G/Y7p7Bn/GYF8ll8+iCFUG3/q2KwpH94HfsJEBY80h4L0tp+ZOy4PvKL/g
7zyjwBXscX9kosD/YKzv58YP8Lu4dXlnWjD49mWKf0bFDv9/u/zL5nw88nHK
mMc5gQ58Wye1Jxuog9+tQTyX2A5iv9ChmHsxnwq9X1rtkx9KAb+Cnl9jD/yB
vqMk33A7cCH/KJlfD9Z5gj8n5dxGPybw5zQ45hZbDr72m3rsfl0Efi5ZGcqW
MiD/mFp3Lf1xBB9BPl90vuSDjyXfvMQ9m1B/Y5wkJ3cN8k+qPWONJAE/k0Lk
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

     "], {{{}, 
       {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{566, 645, 50, 252, 164, 480, 346, 619, 442}}], 
          PolygonBox[{{472, 464, 584, 291, 397, 84, 120, 36, 83, 35, 360, 247,
            635}}], 
          PolygonBox[{{630, 189, 628, 460, 581, 274, 383, 47, 94, 46, 251, 
           161, 345, 215}}], 
          PolygonBox[{{579, 623, 449, 573, 233, 313, 126, 186, 43, 90, 42, 
           491, 362, 626, 456}}], 
          PolygonBox[{{600, 451, 575, 241, 319, 140, 198, 67, 107, 19, 66, 18,
            139, 65, 641, 482}}], 
          PolygonBox[{{598, 632, 467, 587, 304, 409, 105, 170, 16, 63, 15, 62,
            14, 240, 137, 640, 478}}], 
          PolygonBox[{{572, 118, 637, 474, 594, 333, 431, 180, 266, 33, 80, 
           32, 150, 79, 484, 352, 622, 448}, {370, 612, 411, 537, 110, 174, 
           23, 70, 22, 142, 69, 224, 109, 330, 173, 458, 260, 608}, {471, 644,
            490, 607, 361, 455, 249, 326, 156, 210, 87, 123, 39, 155, 86, 353,
            231, 634}, {520, 438, 562, 202, 286, 74, 112, 26, 73, 25, 243, 
           144, 340, 201, 463, 285, 610, 392}}], 
          PolygonBox[{{337, 338, 616, 436, 560, 195, 280, 60, 103, 12, 59, 11,
            58, 10, 238, 135, 639, 476, 596}}], 
          PolygonBox[{{502, 625, 454, 578, 246, 323, 148, 204, 77, 115, 29, 
           147, 76, 227, 114, 331, 177, 459, 263, 609, 373}}], 
          PolygonBox[{{255, 595, 336, 434, 193, 278, 56, 101, 8, 55, 7, 54, 6,
            133, 53, 481, 347, 620, 443, 567, 219, 301, 100, 328, 167, 627, 
           457, 580}}]}]}, {}, {}}, {{}, {}, 
       TagBox[
        {Opacity[0], LineBox[CompressedData["
1:eJwl1nfAT2UYh/HXTvaq7JW9NxlFkVEyMyteO/ISGdmkFJmlJKOM7L2KUCFK
E0WlZFUikayiPnf9cbnu732ec/zOOfdzKJiY1KJvsoSEhGeSJySEz/qjN26o
FyERleBwQgqkxDnH++CmejG6oHKssWisfg7sjGsiFX6Tn8A/6vus2acewG/J
DdVduQx/y9X0t8b1uQP/iCr645EaVZEm1uEWdEN13Gbde7yOm6Gl87/lkfys
fmFeJNfGOTktzqv/u3ksoe5xHetekcviO7lG3LfeOPl2NFB/wu/rl1OvV/fg
5tyKv+NR/FzcN27FXUiHmkiPHqiFO6z9gMtbv0Hdk1twaz7KExy7U71YXQfn
5Qz4XZ2EZFgq98Tt1r0ql8NRuXa8K71n5Jy4X/0p79KvoN6o7sUt+WH+nkfz
83F9ZEQdZMLdyIxl6IVZ1pZHE+sP8JA4P94Db5M74p549/J4dS7sll9AFlyQ
+yE5lsulrFupboTH47nIr6kr4AH1Qf4h3oX63ZglfoTb8nEew3Udn4isqIds
6I17sQeT4j6svRC2/oP4DdyVO/Bpzu7YRe6PFFgh94mZjdmLOdLLjQ/lF1Ek
ZjjuFRfle+Rd6m7xDNQ/xV7Q/4OfRCe9lPwRVuo3jnvhY6iPyTF/aBDvE6vQ
FzmdNzv2CVfkB/lQ7I2YLfV29aPxjmNvxOyp82CvPCWeJy7FnkMqrJaTkMva
1+VKOB7zKe9QP4Z26hM8lhvGXuMJciLn5c+wT78VT417jN+JRnFd9Iv7Q764
X67ovE3xfrk1t+EfeJpjRdVL1HVxSc6NP9UDkRpr5P5oEvs2ZlQvPz6Wp6OY
3lK5Hv6U68q71d3xiPpnHsd5HLusfgqd5TRxDayNa8c74hN4ADOQFwPwIPbj
pZgn6y7HjDl/T8wK94jnz79wPseu8CDcgnXyQDSNb4E1L+gVwCfyy8iPq/Jg
pMV6ubR1q2L247fG85DnqCujqforHson4zvCO+M7xp34JB7Sn4kCaIaC8Xfr
b+DVMT9oYf03PIIH6efhuXIVnJKbxzdLb6JcEJ/Kr6AQrsWeRzpslAfHs7J2
nlwVp+UW8a3TmyQXinmRK8mb43uDV+Xi8rJ4T3wfN+PDPIyvxHdNXZhbxncQ
Q2LeYu9FHw2t+zyeUVi/Mm+J2cIsuYS8XF0fV2O/4no8O6THJnkoWiODtZP1
7sQX8msxl/hLfhoZsFkuY92aeA/Rj/mW58ee52rx7PnrOBb73/HOcb88O+YU
w9AGX+L12OuOX+MPuVfsPeedSfb/v8fF9f+O54GM2CIPR1tkdHyKXhEckOfE
/eKGPByZ8LY8ImbM2jfk6vhZbodMelPlojgoV5HfVrfFXLmkvCK+KWiuPhLX
5euxB3hv7Bd+nH9FSf32KIV3MBI19H/h2ta9p07iRG7Pp7iDY5nV09TFcEie
F/OPmzGbyIyt8ih0RBbrp+sVx1fy/Hgn+EceiSzYJo+O+bf2TfkunJHryO+r
u8R3Qc4qz4jMJbgRfxF7N95hPCf1GzEDKItHUS5+i37WmCvr9sd3Kv5dijW8
NmYAY2LfyQvUNeMZyY8hm95L8bxwWH4T5RH/wRqtlw3bxbHohOz6L+uVwhF5
ASogmf4YvezYIY+Lvam3UK6FszF7yKE3Uy6Nxuov41sTe9+xqvyO3Jvb8zEs
jJlDRfwLXowlnQ==
          "]]},
        Annotation[#, "Charting`Private`Tag$81626#1"]& ]}}], {}}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Prevalence per 10K\"", TraditionalForm], 
     FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 5], 0.2], 
       FormBox["\"10.\"", TraditionalForm]}, {
       NCache[
        Rational[2, 5], 0.4], 
       FormBox["\"20.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 5], 0.6], 
       FormBox["\"30.\"", TraditionalForm]}, {
       NCache[
        Rational[4, 5], 0.8], 
       FormBox["\"40.\"", TraditionalForm]}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.2, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.2\"", 0.2`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.4\"", 0.4`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.6\"", 0.6`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.8, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.8\"", 0.8`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.0\"", 1.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.2, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.2\"", 1.2`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.05, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.15, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.25, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.35, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.45, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.55, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.65, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.75, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.85, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.95, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.05, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.15, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{0.8899999999999999, {
       GrayLevel[0], 
       Opacity[1]}}, {0.7000000000000001, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.2, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0., 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793446723677157*^9, 3.793446785087015*^9}, 
   3.7934469801090403`*^9, 3.793447227208099*^9, {3.793447264011318*^9, 
   3.793447277456396*^9}, 3.793447311102808*^9, {3.793447516154393*^9, 
   3.793447528874736*^9}, {3.7934619226037683`*^9, 3.7934619288630877`*^9}, 
   3.793461961164349*^9, 3.7934622036035557`*^9, 3.793462451229333*^9, {
   3.793462489491652*^9, 3.793462608413128*^9}, 3.7934626961006603`*^9, 
   3.7934689623154917`*^9, 3.793469063363864*^9, 3.793529281029666*^9, 
   3.7935297652435827`*^9, {3.793529806518998*^9, 3.793529925606844*^9}, {
   3.793530273719088*^9, 3.793530288945623*^9}, 3.793532164393281*^9, 
   3.7935382465107327`*^9, 3.793538857025456*^9, {3.793617488369979*^9, 
   3.793617540148157*^9}, 3.793617738678664*^9, 3.793628687436328*^9, 
   3.793631367459117*^9, {3.79363143845481*^9, 3.793631442242111*^9}, {
   3.793631476767042*^9, 3.793631485457098*^9}, 3.793631858561059*^9, 
   3.793632121775387*^9, 3.793632435370782*^9, 3.793632615346583*^9, 
   3.7936326990393543`*^9, 3.793632896683559*^9, {3.793633051880995*^9, 
   3.793633080583713*^9}, {3.793633137138521*^9, 3.793633150393712*^9}, 
   3.793633212368238*^9, 3.793634115477564*^9, 3.793634260809019*^9, 
   3.793634384326985*^9, 3.793634839427136*^9, 3.793635141442663*^9, 
   3.7936401181586723`*^9, 3.793640223716352*^9, {3.7937088524855824`*^9, 
   3.7937088842186728`*^9}, 3.793717681970107*^9, 3.793717824835767*^9, 
   3.7937179103593197`*^9, 3.7937181821313467`*^9, 3.793718274034895*^9, 
   3.79371954616118*^9, 3.793801399207608*^9, 3.7938014796226797`*^9, 
   3.7938015756784983`*^9, 3.7938016430186653`*^9, 3.793801747714795*^9, 
   3.7945070343920383`*^9, 3.79450750269622*^9, 3.794507548699544*^9, 
   3.7945076681917458`*^9, 3.794513117786797*^9, 3.794513184607078*^9, 
   3.794515037644409*^9, 3.794515322455339*^9, 3.794568657242687*^9, 
   3.7945690220263433`*^9, 3.794576701138505*^9, 3.794578158149716*^9, 
   3.7945784441658287`*^9, 3.794579375733444*^9, 3.7945795052579117`*^9, 
   3.7955138497904863`*^9, 3.795513897540947*^9, 3.795514553438608*^9, 
   3.795515777387865*^9, {3.795516179888289*^9, 3.795516188210128*^9}},
 CellLabel->
  "Out[1384]=",ExpressionUUID->"e14b6a70-59df-42a1-a3a9-ef3636dab655"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpnpiimm", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60bpnsprev"}], "]"}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"yearticks", ",", " ", "None"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "22"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1.5"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"baseline", "+", "amplitude"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", " ", "200"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7934696625099773`*^9, 3.793469677272522*^9}, {
  3.793469808823731*^9, 3.793469971790944*^9}, {3.793470223261483*^9, 
  3.793470240817769*^9}, {3.793470311660644*^9, 3.7934703125299*^9}, {
  3.793470508123329*^9, 3.793470523377727*^9}, {3.7935388618606567`*^9, 
  3.7935388959889183`*^9}, {3.793632137623155*^9, 3.793632138501503*^9}, {
  3.7936338319734373`*^9, 3.793633964756832*^9}, {3.793634823336767*^9, 
  3.7936348291842413`*^9}, {3.7937088950579767`*^9, 3.793708897415483*^9}, {
  3.793709013641704*^9, 3.793709013847748*^9}},
 CellLabel->
  "In[1385]:=",ExpressionUUID->"8b9a39fc-1864-4f3d-853a-5b2f1d4edfec"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEl3c81v8X91EaqEjDSgolhGSHc+y912UmkRElqSRJJVnJLKSMkL1nGZe9
ubiIJKFCohBFqe7P/Xjc9/fnH4/n45zzOq9z3m8fn88hh4vGTnQ0NDQBm2lo
/u/v91vEhpyVWhVp/t/PrrzRBXW3dPj/XEjLeJ7Drew/viX8/Nhmt+b/eEbp
27Z118H/+IlunM9314//8aqRS9Gi68p/nDZopPvNdTP+f64dP+1Vpbb3P966
deU6OfHgf6zYRtml1vQ/vno/P6Pjy/94+W6piys3z39sv9kj1uvi/1iBfuJL
IMuh//jHltbEbLPD//Fu57JPX1z/x8fb0sRE/P/HjvdvtZZk/o+pW2WXX/38
Hxdty9PqTeD9j7tdEmOZC/7HM+3B740b/8fcIU5Xhuf+x+HbD6ZOnOL7j7Nc
d8wfNiSYOWZ7wswhaOr4LeXkSDCTHY+njxKMH5u7/cKHYLFjphxR+vArZKT7
czjBgQNjn+fMYN9c637hVIIF2Jwdcm1AXLvc4UI5wbxz2x+3nwFXhui15XcE
x/EIHPvuAvueig3PfydYy8mIYZMHNIv2lU9v50eavmsSBk884VKjR+zEQX4M
oPkh6NbuBdxmTJdHJQk2iekQYrgCXTM5RoM6BHdMfOUWugY+vlpivWeIesq2
/vY314B/x+zO9msEyxzc7/TUBwaSgxYaHhCccoZJ1Ps63BLn7371nGCmVMVM
G18QbmnKKa8m2Ka/NszsBgTN0bhkfyJ44+C2VO+bcPJmsvrz3wQ/OVYom+AP
E7sU+Z+yHMGA0y2S27tugZzkjalIhSNII2lhqiJ4G2ba2BtCTY4gOVr/dvvQ
bYi1qkoOdCXiTW9f4f078PXWqo1PHBFXF7jd9PsuPNkde8orl2B5RW5yXSBo
ZohzuDcQHKC1O+L+Pfgh3b/mNHwEUf8Ar6R5EDzvvDh8eoGIZ69erhe8D4a2
OyssNx3FALOCnrqq+/D3W16sCftRxMxWP5PdwZB7R+eynijBh84ltHoEA2nv
nJGGGpE/MHCypzMYmOwdu0WeHkWas5xMk1qhUL1MlytQehTJl6ppPXJD4dy9
1JDDHUT9JeEeux1hQM4ZV9+3SuSzat762R8GV1ZJDX90BZD8ePsdA+sHMB6q
V9G9IYATpuekXcUioahcKsXNRhAD7kdqBG2OgRY63R0LnoKYwj59xEs4BkYN
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
ZzY=
       "]]},
     Annotation[#, "Charting`Private`Tag$81771#1"]& ]}, {}},
  AspectRatio->1.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 22),
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
    None, None}},
  FrameTicks->{{Automatic, {}}, {{{0, 
       FormBox[
        RotationBox["\"2020\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"2021\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"2022\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox["\"\"", TraditionalForm]}}, {}}},
  GridLines->{{}, {{0.5, {
       GrayLevel[0], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793469805382372*^9, 3.793469814661562*^9}, {
   3.7934698453928432`*^9, 3.793469972008574*^9}, 3.793470241244164*^9, 
   3.793470314282918*^9, {3.793470508631143*^9, 3.79347052367684*^9}, 
   3.793529281349784*^9, 3.793529765439126*^9, {3.793529806711815*^9, 
   3.793529925814185*^9}, {3.793530273914832*^9, 3.793530289149942*^9}, 
   3.793532166875166*^9, 3.793538247077958*^9, {3.79353886239925*^9, 
   3.7935388963270607`*^9}, 3.793617739231846*^9, 3.7936286879447117`*^9, 
   3.793631367853709*^9, 3.7936321388044243`*^9, 3.793632435674089*^9, 
   3.793632615644248*^9, 3.793632897162451*^9, 3.793633150669476*^9, 
   3.793633212668477*^9, {3.79363383245334*^9, 3.793633838754334*^9}, {
   3.7936338809697847`*^9, 3.793633965077063*^9}, 3.7936343846799917`*^9, {
   3.793634829758572*^9, 3.793634839810528*^9}, 3.79363514176517*^9, 
   3.7936401184643097`*^9, 3.793640224229719*^9, 3.793708897727332*^9, 
   3.793709014263481*^9, 3.7937176825615053`*^9, 3.793717910848081*^9, 
   3.7937181828731213`*^9, 3.793718274495146*^9, 3.793719546555455*^9, 
   3.793801399505114*^9, 3.7938014800054903`*^9, 3.793801576092574*^9, 
   3.793801643367606*^9, 3.793801748128078*^9, 3.794507035064093*^9, 
   3.794507503086135*^9, 3.7945075493943157`*^9, 3.794507668563439*^9, 
   3.794513118312587*^9, 3.794513185342229*^9, 3.79451503881774*^9, 
   3.794515323093136*^9, 3.79456865761374*^9, 3.794569022530732*^9, 
   3.794576701556452*^9, 3.794578158571226*^9, 3.7945784447903643`*^9, 
   3.794579376025532*^9, 3.7945795055360317`*^9, 3.795513849926415*^9, 
   3.7955138976853733`*^9, 3.795514553587586*^9, 3.795515777493658*^9, {
   3.795516180051409*^9, 3.79551618831635*^9}},
 CellLabel->
  "Out[1385]=",ExpressionUUID->"a20b3eef-b2b2-4ebc-8cc2-ed4ce74ee79b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot break-pump strategy, with seasonality: ", "Subtitle",
 CellChangeTimes->{{3.793445775253668*^9, 3.793445791735546*^9}, {
   3.793461803106874*^9, 3.79346180437956*^9}, {3.79346302353588*^9, 
   3.79346303274085*^9}, 
   3.7955164422914553`*^9},ExpressionUUID->"ffb64e72-1023-4c3e-8a8b-\
ad3295a94570"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "0.02"}], ";"}]], "Input",
 CellChangeTimes->{{3.793446122258461*^9, 3.793446135642728*^9}, {
  3.7934618271568108`*^9, 3.79346186369106*^9}, {3.793462009540318*^9, 
  3.793462018321295*^9}},
 CellLabel->
  "In[1386]:=",ExpressionUUID->"674e98f7-34aa-4fbe-b040-9e153e0e5e59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpstemp", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpsprev"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"10000", "*", "sf", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpsprev"}], "]"}]}]}],
      "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
           " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
             ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+",
               "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", " ", 
           "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], ",",
        "Automatic"}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Critical\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "imsz"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793440555957224*^9, 3.793440562287552*^9}, {
   3.7934406031532516`*^9, 3.7934406035891333`*^9}, {3.7934406435598097`*^9, 
   3.79344064625572*^9}, 3.79344092383211*^9, 3.793441084303793*^9, {
   3.793441245349256*^9, 3.793441270066451*^9}, 3.7934414366245537`*^9, 
   3.793441467463295*^9, {3.793446097780415*^9, 3.793446128296608*^9}, {
   3.793446947620717*^9, 3.7934469478618402`*^9}, {3.793447057506488*^9, 
   3.7934470620245113`*^9}, {3.7934471042355547`*^9, 
   3.7934471058731747`*^9}, {3.793447135977392*^9, 3.7934471395087557`*^9}, {
   3.793461810968658*^9, 3.793461812420525*^9}, {3.79346187541588*^9, 
   3.793461875705258*^9}, 3.79346199728846*^9, {3.793462345482862*^9, 
   3.793462347731813*^9}, {3.793463036835421*^9, 3.793463065940053*^9}, {
   3.793538604552825*^9, 3.793538604858341*^9}},
 CellLabel->
  "In[1387]:=",ExpressionUUID->"1d428b43-73d0-4dfc-a5be-12edb24e11dd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEmnc41f8b/42i0CANo5LM7L3dt70ODkdLpITQIJHVEBIlFalIVjSMjEpI
QmYDWec49jrnJEqKSuj3/l3X7/f5+sf1vN6v171er/f7ftzXdXa4+zl6crCx
sR3nYmP7v/+HuJS7jxo1GrL9v791BfRpc98c+P+6iJ33mLDv8//0BfkHsit8
6//TTKNvq/74dP2n75GSQ374jP+n5xy8i2d8fv6ns7scSN98VuD/168H3QLK
zTb+p7m5f4bWpG7/Txs2ta8ze/s/feZyYW7Ll//p2ahn3j7bxP7Th1acuBXg
9z9tsHL4SzT/jv/0PFdj6pPd4v9pgaPPJ774/E8rNGUrK57/n/a4fKGx9OH/
dCe3zuyrX//TxasKrFpTdv6nP3in3lr/9H+a2Rw75Fj3P70tzjOIOvk/Hb96
e9awnsR/+rHPmilxsgRqxe7VD1TSNHzb8lfT00MC8xb/PFb9Umo4KDt58VGI
BMYVume3fRwzXIijffgcL4GlVtWNfTGcsGmycbN8lgSOd4sk5+QJg6r1C/eT
LyRQ5km+xouTCmCX96CwuEUChddfGHbX0AcfnsTfswMS6G/ET50KsoRN95Wp
Uz8k0PrEwU8O/k5Qr9T2grFaEg3XG83emXeDU3Unbg1vl8RD39N23688Ctt2
852ma0hi3vVjD65O+MN7Zp5Dl40kzrrOm20zCoaQMCvl1sOSKJd313pQ6AJI
rmGtbQ6WRK/HKd63rKKhIyNmuvaaJB4xWTQyHYuDC6qSH149kMRnHYyYwyo3
QL7hbd6LCkmU9Aubvs5Igt697nFFbZJ4ceWdOieBuxAzyeb9ZEISjZvktxc+
TwO1cxnmD/5K4j4uZqkzIxOG1xlK3ueXQoERy7UuBQ9AVyN89IaBFOY/1WiK
HXkCzCah2isUKZw3WvOu0rYQbjmXZ0T7SGEIpSOVL7gYvl6YcwlJlsJnNoYH
Vd2fwz2BW3oB+VLIXOmyc194GVjmqgofr5VCF6e2oqm8cnjwzo/qNi2FSVp1
JeVWr4HsurZsP6c0qiXq7Jd++QaWvxXcoghJY2Xqp5+VIrWwb+Okg4WZNGoe
P9lcXPYW+A55fFC8L42mHpIP00ktUDHLkS/zTBqzMzx2sde/A69LWXHiLdL4
kaREe2j0AWryBs03zUmjq6qHqrptGwTN7atdIslgUqhevlVzB4jH/sr45S6D
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
3LBq0F6an/FI2xGbVnQ9VHSuhtoNXw591HNEjaN+9oObquE/cm/NP2NHfMnJ
G21kV4Fbp8uzS6aO2Jcpv+i/kioocR6JVgNH7I3f/ePz0yo4HihqZrLTETUD
Qz+bBlfBy/samT7WjlggJkaxX1cF4trpMXPtHJFloPz6iHIVUHP1jlyzd8Qo
Rx/fIrEq+PfZTDWH6oiJx69mWrRXguV3h/ODhx2xSs+GX3StEnibbh09cpbY
L9TEOVa6Egzea+Bvf0fUjWjouztTAdEW6f+FBTli7Rf8r3ewAtYz8uvvhjmi
vNF+seGqCjgb2oQtFx0x+oNOueLVCpCtkFe3u++IepwvC5OWV8A2pwtNZl+J
/Pz74/4f+RsM5s5rWVLpiOlgsfSjxTdInhfVMVrtiIer3+WGb/0GU89DBBmN
jig3ljG9c/k3KPjrPanEc8QJ2s/G1z++guEdR/WhMUe0Mmcr1cZ+hcUut1/a
LHLCO4G7VKYqy2FQsdmwSMEJb70Xet0uLYdPxcr52oudMOvQK5k9eeXgvej6
W3EVJ9TKqz376V451L+5/OmtuhMeo+dcsPIqhyuSUey1Wk64YIeEVoxaOTi/
/Ei9ru2EA08kZXvkywEdRFtF1zthlYXMrb3zymHoRUhnu64TupVJXDX9XQbW
lID+a4ZOuPXx9YsvystgzZw3p+ZsdsKoeeT3p4rL4G/G+KDbFifscNcz139V
Bpn/vIctTQj7jPdp/r0yiEzP9crf6oSrb4ptabheBg4Hfv9Ztc0J8zp/x1Ve
LAPDmQ1+V82c8Ilxdnh9WBkseOw+NQtOOHYmldF3tgz+B1XdohA=
       "]]},
     Annotation[#, "Charting`Private`Tag$81892#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
wWnBzHALxYX/A78ijGE=
       "]]},
     Annotation[#, "Charting`Private`Tag$81892#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Critical\"", TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {{{0, 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39, 
        FormBox["\"Oct\"", TraditionalForm]}, {52, 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39, 
        FormBox["\"Oct\"", TraditionalForm]}, {52, 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}}}, {{Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.05, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.15, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.25, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.35, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.45, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.55, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.65, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.75, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.85, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.95, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{{0., 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39., 
        FormBox["\"Oct\"", TraditionalForm]}, {52., 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0., 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39., 
        FormBox["\"Oct\"", TraditionalForm]}, {52., 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}}}],
  GridLines->{{}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7934460980332727`*^9, 3.793446136522884*^9}, 
   3.793446410789082*^9, 3.793446948533244*^9, 3.793447062548545*^9, 
   3.793447106173595*^9, 3.793447139888754*^9, {3.7934618171374197`*^9, 
   3.793461876052273*^9}, 3.793461948906311*^9, {3.793461998856566*^9, 
   3.7934620191467113`*^9}, 3.7934623480706882`*^9, {3.7934624057905407`*^9, 
   3.7934624191384983`*^9}, {3.7934624892715187`*^9, 3.793462572784232*^9}, 
   3.7934626081882143`*^9, {3.79346304116936*^9, 3.79346306769261*^9}, 
   3.793469063615583*^9, 3.7935292816405478`*^9, 3.7935297656063643`*^9, {
   3.793529806932928*^9, 3.7935299260326643`*^9}, {3.7935302740932837`*^9, 
   3.793530289345275*^9}, 3.793532172333684*^9, 3.793538247343383*^9, 
   3.7935386052002773`*^9, 3.793617662333313*^9, 3.793617739694757*^9, 
   3.793628688240258*^9, 3.793631368205997*^9, 3.793632435988535*^9, 
   3.7936326159816217`*^9, 3.793632897537457*^9, 3.793633151012488*^9, 
   3.793633212966311*^9, 3.7936343850732927`*^9, 3.793634840104055*^9, 
   3.793635142037528*^9, 3.7936401187224903`*^9, 3.79364022447375*^9, 
   3.793709171179693*^9, 3.793717682942176*^9, 3.793717911283661*^9, 
   3.793718183265564*^9, 3.7937182747954283`*^9, 3.7937195468446407`*^9, 
   3.793801399723845*^9, 3.793801480320408*^9, 3.793801576386196*^9, 
   3.793801643685059*^9, 3.793801748449422*^9, 3.794507035474964*^9, 
   3.794507503396233*^9, 3.794507549739094*^9, 3.79450766888688*^9, 
   3.794513118790169*^9, 3.794513185638533*^9, 3.794515039189467*^9, 
   3.794515323476878*^9, 3.794568657968494*^9, 3.794569022841572*^9, 
   3.794576701831605*^9, 3.794578158887932*^9, 3.794578445235889*^9, 
   3.794579376280307*^9, 3.794579505733264*^9, 3.795513850088276*^9, 
   3.7955138979795732`*^9, 3.7955145537610703`*^9, 3.795515777718026*^9, {
   3.7955161801789207`*^9, 3.795516188441947*^9}},
 CellLabel->
  "Out[1387]=",ExpressionUUID->"13d0400e-64c4-41f4-8763-9f087ac9dab7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbps", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpsprev"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"10000", "*", "sf", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpsprev"}], "]"}]}]}],
      "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "sf"}], ")"}], "*", "#"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"PlotRange", "[", "figcritprevbpstemp", "]"}], 
             "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            "5"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dateticks", ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", 
    " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Critical cases per 10K\>\"", ",", "None", ",", " ", 
       "\"\<Prevalence per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", " ", "Black"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", ".000089"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevon"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevoff"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7934461917708607`*^9, 3.7934462838598347`*^9}, {
   3.793446322446604*^9, 3.7934463225391617`*^9}, {3.793446417493855*^9, 
   3.793446493716259*^9}, {3.793446527768334*^9, 3.79344668076748*^9}, {
   3.793446762278329*^9, 3.7934467828855133`*^9}, {3.793446951803142*^9, 
   3.793446955141111*^9}, {3.79344707334725*^9, 3.793447099371722*^9}, {
   3.793447159075315*^9, 3.7934471754116783`*^9}, {3.7934472158450813`*^9, 
   3.793447223477141*^9}, {3.79344729650998*^9, 3.793447304161545*^9}, {
   3.793447499123787*^9, 3.7934475264506483`*^9}, {3.7934618795755053`*^9, 
   3.793461889980399*^9}, 3.793462004628837*^9, {3.7934620364212713`*^9, 
   3.79346203990898*^9}, {3.7934624225659227`*^9, 3.7934624372262497`*^9}, {
   3.79346305953295*^9, 3.793463072999475*^9}, {3.79353861265899*^9, 
   3.7935386178457613`*^9}, {3.7936321802253237`*^9, 3.7936321810634003`*^9}},
 
 CellLabel->
  "In[1388]:=",ExpressionUUID->"369cc1a6-821d-4e57-8477-f21aeffea94f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEmnc41f8b/42i0CANo5LM7L3dt70ODkdLpITQIJHVEBIlFalIVjSMjEpI
QmYDWec49jrnJEqKSuj3/l3X7/f5+sf1vN6v171er/f7ftzXdXa4+zl6crCx
sR3nYmP7v/+HuJS7jxo1GrL9v791BfRpc98c+P+6iJ33mLDv8//0BfkHsit8
6//TTKNvq/74dP2n75GSQ374jP+n5xy8i2d8fv6ns7scSN98VuD/168H3QLK
zTb+p7m5f4bWpG7/Txs2ta8ze/s/feZyYW7Ll//p2ahn3j7bxP7Th1acuBXg
9z9tsHL4SzT/jv/0PFdj6pPd4v9pgaPPJ774/E8rNGUrK57/n/a4fKGx9OH/
dCe3zuyrX//TxasKrFpTdv6nP3in3lr/9H+a2Rw75Fj3P70tzjOIOvk/Hb96
e9awnsR/+rHPmilxsgRqxe7VD1TSNHzb8lfT00MC8xb/PFb9Umo4KDt58VGI
BMYVume3fRwzXIijffgcL4GlVtWNfTGcsGmycbN8lgSOd4sk5+QJg6r1C/eT
LyRQ5km+xouTCmCX96CwuEUChddfGHbX0AcfnsTfswMS6G/ET50KsoRN95Wp
Uz8k0PrEwU8O/k5Qr9T2grFaEg3XG83emXeDU3Unbg1vl8RD39N23688Ctt2
852ma0hi3vVjD65O+MN7Zp5Dl40kzrrOm20zCoaQMCvl1sOSKJd313pQ6AJI
rmGtbQ6WRK/HKd63rKKhIyNmuvaaJB4xWTQyHYuDC6qSH149kMRnHYyYwyo3
QL7hbd6LCkmU9Aubvs5Igt697nFFbZJ4ceWdOieBuxAzyeb9ZEISjZvktxc+
TwO1cxnmD/5K4j4uZqkzIxOG1xlK3ueXQoERy7UuBQ9AVyN89IaBFOY/1WiK
HXkCzCah2isUKZw3WvOu0rYQbjmXZ0T7SGEIpSOVL7gYvl6YcwlJlsJnNoYH
Vd2fwz2BW3oB+VLIXOmyc194GVjmqgofr5VCF6e2oqm8cnjwzo/qNi2FSVp1
JeVWr4HsurZsP6c0qiXq7Jd++QaWvxXcoghJY2Xqp5+VIrWwb+Okg4WZNGoe
P9lcXPYW+A55fFC8L42mHpIP00ktUDHLkS/zTBqzMzx2sde/A69LWXHiLdL4
kaREe2j0AWryBs03zUmjq6qHqrptGwTN7atdIslgUqhevlVzB4jH/sr45S6D
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
3LBq0F6an/FI2xGbVnQ9VHSuhtoNXw591HNEjaN+9oObquE/cm/NP2NHfMnJ
G21kV4Fbp8uzS6aO2Jcpv+i/kioocR6JVgNH7I3f/ePz0yo4HihqZrLTETUD
Qz+bBlfBy/samT7WjlggJkaxX1cF4trpMXPtHJFloPz6iHIVUHP1jlyzd8Qo
Rx/fIrEq+PfZTDWH6oiJx69mWrRXguV3h/ODhx2xSs+GX3StEnibbh09cpbY
L9TEOVa6Egzea+Bvf0fUjWjouztTAdEW6f+FBTli7Rf8r3ewAtYz8uvvhjmi
vNF+seGqCjgb2oQtFx0x+oNOueLVCpCtkFe3u++IepwvC5OWV8A2pwtNZl+J
/Pz74/4f+RsM5s5rWVLpiOlgsfSjxTdInhfVMVrtiIer3+WGb/0GU89DBBmN
jig3ljG9c/k3KPjrPanEc8QJ2s/G1z++guEdR/WhMUe0Mmcr1cZ+hcUut1/a
LHLCO4G7VKYqy2FQsdmwSMEJb70Xet0uLYdPxcr52oudMOvQK5k9eeXgvej6
W3EVJ9TKqz376V451L+5/OmtuhMeo+dcsPIqhyuSUey1Wk64YIeEVoxaOTi/
/Ei9ru2EA08kZXvkywEdRFtF1zthlYXMrb3zymHoRUhnu64TupVJXDX9XQbW
lID+a4ZOuPXx9YsvystgzZw3p+ZsdsKoeeT3p4rL4G/G+KDbFifscNcz139V
Bpn/vIctTQj7jPdp/r0yiEzP9crf6oSrb4ptabheBg4Hfv9Ztc0J8zp/x1Ve
LAPDmQ1+V82c8Ilxdnh9WBkseOw+NQtOOHYmldF3tgz+B1XdohA=
       "]]},
     Annotation[#, "Charting`Private`Tag$81968#1"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
wWnBzHALxYX/A78ijGE=
       "]]},
     Annotation[#, "Charting`Private`Tag$81968#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Critical cases per 10K\"", TraditionalForm], 
     FormBox["\"Prevalence per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{Automatic, {{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 5], 0.2], 
       FormBox["\"10.\"", TraditionalForm]}, {
       NCache[
        Rational[2, 5], 0.4], 
       FormBox["\"20.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 5], 0.6], 
       FormBox["\"30.\"", TraditionalForm]}, {
       NCache[
        Rational[4, 5], 0.8], 
       FormBox["\"40.\"", TraditionalForm]}, {1, 
       FormBox["\"50.\"", TraditionalForm]}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{0.8899999999999999, {
       GrayLevel[0], 
       Opacity[1]}}, {0.7000000000000001, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.2, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7934462183922*^9, 3.793446262635705*^9}, 
   3.793446322861353*^9, {3.793446417955284*^9, 3.793446493969702*^9}, {
   3.793446528220602*^9, 3.7934466811191187`*^9}, {3.793446762960642*^9, 
   3.793446783185998*^9}, 3.7934469583619823`*^9, {3.793447077418531*^9, 
   3.7934471077778254`*^9}, {3.7934471626694593`*^9, 3.793447176249228*^9}, {
   3.793447220612138*^9, 3.793447223788662*^9}, 3.7934473045057087`*^9, {
   3.7934475125474377`*^9, 3.793447526798827*^9}, 3.793461894648978*^9, 
   3.793461954811411*^9, {3.793462025917428*^9, 3.793462051362706*^9}, {
   3.7934624165193977`*^9, 3.793462437537854*^9}, {3.793462489379582*^9, 
   3.793462572943308*^9}, 3.793462608295115*^9, 3.793463073451934*^9, 
   3.793469063710894*^9, 3.793529281741108*^9, 3.7935297656727667`*^9, {
   3.7935298070245333`*^9, 3.793529926132883*^9}, {3.793530274168375*^9, 
   3.793530289438217*^9}, 3.793532174176157*^9, 3.793538247473281*^9, {
   3.793538609925652*^9, 3.7935386184566174`*^9}, 3.7936176643324738`*^9, 
   3.793617739913664*^9, 3.793628688422764*^9, 3.793631368379669*^9, 
   3.793632181435913*^9, 3.793632436100501*^9, 3.79363261614002*^9, 
   3.79363289767867*^9, 3.793633151168467*^9, 3.793633213136217*^9, 
   3.79363438528654*^9, 3.793634840298051*^9, 3.793635142169423*^9, 
   3.793640118873715*^9, 3.79364022459678*^9, 3.793709172791792*^9, 
   3.793717683096919*^9, 3.793717911461453*^9, 3.7937181834540567`*^9, 
   3.793718274942525*^9, 3.793719546969058*^9, 3.79380139985353*^9, 
   3.793801480456283*^9, 3.793801576534741*^9, 3.7938016438461027`*^9, 
   3.793801748581594*^9, 3.794507035686893*^9, 3.794507503528822*^9, 
   3.794507549871644*^9, 3.794507669309033*^9, 3.794513118950705*^9, 
   3.794513185807193*^9, 3.7945150393193398`*^9, 3.794515323661188*^9, 
   3.7945686581239157`*^9, 3.794569023047379*^9, 3.7945767020032387`*^9, 
   3.794578159030787*^9, 3.794578445404962*^9, 3.7945793763943243`*^9, 
   3.7945795058447943`*^9, 3.795513850218019*^9, 3.7955138981788273`*^9, 
   3.795514554031288*^9, 3.7955157779509773`*^9, {3.795516180321785*^9, 
   3.795516188574162*^9}},
 CellLabel->
  "Out[1388]=",ExpressionUUID->"ea3cee42-50b4-4539-9ee5-ae20a0fba408"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbps", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpsprev"}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"10000", "*", "sf", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpsprev"}], "]"}]}]}],
      "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1.2"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "sf"}], ")"}], "*", "#"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"PlotRange", "[", "figcritprevbpstemp", "]"}], 
             "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            "5"}], "]"}]}], ",", " ", "All"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dateticks", ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", 
    " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", " ", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", " ", "Black"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", ".000089"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevon"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevoff"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793709147296422*^9, 3.793709164089078*^9}, {
  3.793717851683216*^9, 3.793717851773666*^9}},
 CellLabel->
  "In[1389]:=",ExpressionUUID->"ffd57634-773d-4c3c-a4a5-f2f78b8bffb3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEmnc41f8b/42i0CANo5LM7L3dt70ODkdLpITQIJHVEBIlFalIVjSMjEpI
QmYDWec49jrnJEqKSuj3/l3X7/f5+sf1vN6v171er/f7ftzXdXa4+zl6crCx
sR3nYmP7v/+HuJS7jxo1GrL9v791BfRpc98c+P+6iJ33mLDv8//0BfkHsit8
6//TTKNvq/74dP2n75GSQ374jP+n5xy8i2d8fv6ns7scSN98VuD/168H3QLK
zTb+p7m5f4bWpG7/Txs2ta8ze/s/feZyYW7Ll//p2ahn3j7bxP7Th1acuBXg
9z9tsHL4SzT/jv/0PFdj6pPd4v9pgaPPJ774/E8rNGUrK57/n/a4fKGx9OH/
dCe3zuyrX//TxasKrFpTdv6nP3in3lr/9H+a2Rw75Fj3P70tzjOIOvk/Hb96
e9awnsR/+rHPmilxsgRqxe7VD1TSNHzb8lfT00MC8xb/PFb9Umo4KDt58VGI
BMYVume3fRwzXIijffgcL4GlVtWNfTGcsGmycbN8lgSOd4sk5+QJg6r1C/eT
LyRQ5km+xouTCmCX96CwuEUChddfGHbX0AcfnsTfswMS6G/ET50KsoRN95Wp
Uz8k0PrEwU8O/k5Qr9T2grFaEg3XG83emXeDU3Unbg1vl8RD39N23688Ctt2
852ma0hi3vVjD65O+MN7Zp5Dl40kzrrOm20zCoaQMCvl1sOSKJd313pQ6AJI
rmGtbQ6WRK/HKd63rKKhIyNmuvaaJB4xWTQyHYuDC6qSH149kMRnHYyYwyo3
QL7hbd6LCkmU9Aubvs5Igt697nFFbZJ4ceWdOieBuxAzyeb9ZEISjZvktxc+
TwO1cxnmD/5K4j4uZqkzIxOG1xlK3ueXQoERy7UuBQ9AVyN89IaBFOY/1WiK
HXkCzCah2isUKZw3WvOu0rYQbjmXZ0T7SGEIpSOVL7gYvl6YcwlJlsJnNoYH
Vd2fwz2BW3oB+VLIXOmyc194GVjmqgofr5VCF6e2oqm8cnjwzo/qNi2FSVp1
JeVWr4HsurZsP6c0qiXq7Jd++QaWvxXcoghJY2Xqp5+VIrWwb+Okg4WZNGoe
P9lcXPYW+A55fFC8L42mHpIP00ktUDHLkS/zTBqzMzx2sde/A69LWXHiLdL4
kaREe2j0AWryBs03zUmjq6qHqrptGwTN7atdIslgUqhevlVzB4jH/sr45S6D
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
3LBq0F6an/FI2xGbVnQ9VHSuhtoNXw591HNEjaN+9oObquE/cm/NP2NHfMnJ
G21kV4Fbp8uzS6aO2Jcpv+i/kioocR6JVgNH7I3f/ePz0yo4HihqZrLTETUD
Qz+bBlfBy/samT7WjlggJkaxX1cF4trpMXPtHJFloPz6iHIVUHP1jlyzd8Qo
Rx/fIrEq+PfZTDWH6oiJx69mWrRXguV3h/ODhx2xSs+GX3StEnibbh09cpbY
L9TEOVa6Egzea+Bvf0fUjWjouztTAdEW6f+FBTli7Rf8r3ewAtYz8uvvhjmi
vNF+seGqCjgb2oQtFx0x+oNOueLVCpCtkFe3u++IepwvC5OWV8A2pwtNZl+J
/Pz74/4f+RsM5s5rWVLpiOlgsfSjxTdInhfVMVrtiIer3+WGb/0GU89DBBmN
jig3ljG9c/k3KPjrPanEc8QJ2s/G1z++guEdR/WhMUe0Mmcr1cZ+hcUut1/a
LHLCO4G7VKYqy2FQsdmwSMEJb70Xet0uLYdPxcr52oudMOvQK5k9eeXgvej6
W3EVJ9TKqz376V451L+5/OmtuhMeo+dcsPIqhyuSUey1Wk64YIeEVoxaOTi/
/Ei9ru2EA08kZXvkywEdRFtF1zthlYXMrb3zymHoRUhnu64TupVJXDX9XQbW
lID+a4ZOuPXx9YsvystgzZw3p+ZsdsKoeeT3p4rL4G/G+KDbFifscNcz139V
Bpn/vIctTQj7jPdp/r0yiEzP9crf6oSrb4ptabheBg4Hfv9Ztc0J8zp/x1Ve
LAPDmQ1+V82c8Ilxdnh9WBkseOw+NQtOOHYmldF3tgz+B1XdohA=
       "]]},
     Annotation[#, "Charting`Private`Tag$82108#1"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEm3c4FW7Yx2VVRtpGUskKWdnrvu29jnGQJJFRkjRQoZJUCgkZRQihjZCk
rHPsvfc4R2iQHXrPe13v++v8c67P9TzP/cxzf+/vH+eAszfBlZ6Ojo6NiY7u
f78HmaXa3TSq1On+78OR2/Nd1zMd/p9fb2A9zeOZ9x8HiacdYvSs+I+pGj83
LXu0/ceJxjF+vz3G/uN5C/c3vzzm/uPUNgvjnx6M+P/8aeD4+UKdXf+xo2Tg
Qzbvf0wXnPTO6fE/1jzQPbtp6h9XnST42kXu/o+bJrQvrPRw/scjs4cuqZ7j
+Y9vaunHRsb/Y4FHpwrGvv7jU3JpC+G79vzHU5d5L/cX/+O51S1+gUx7/+ON
G+f8yxL2/cfq1U0cOuX/+NLtl8/JU/949uZ7dw++/f+xE6PXo/Pe/1iNaWgq
ZNuB/9jWtUG+WvAfX6gsub5Z+R/n3ornfOD8j3mYLbXi3v/jBeaqhBfW/P/x
dre88SmPf3y4OlVKIvAfu9wOqnqX8Y9bNyrNflz8xz/chNXWWQ/+xyykXWG4
/x9rhs3urdT/x2825Ro0xP/jOveER1tf/WMqKWyQ8PUf891xvdg5+Y+Vv1mW
cf/9x9YGmqwOOwT+4/DN+54NqfzjLA/2aX5zAbR9JsdpelQGysl/5F1dBNBV
/5vOBPkcDByavJ7pJ4Buq7WOU7FhsHKnq+5buAAyXsnodTj4GHZPVnGKPxNA
55iPL1xz0kDGMN/5bL4AXl+asVmpzgXT7LSXb8gCyPDdX2085T14sDxcmu0X
wAp948WVK0Ww+4lU5/RvAXzz60/CftUyqJBszKdsFkSu9hKVaeYK4LNm8+2R
E8Qd9PTlK251UEvNtmgzEsRes2O2W/2bwC/AQKrhhCB+39m+oSStBQTZJ7aQ
LgvikP2UlsbjNmhJDv3+5b4gahiQeQ86dkCQjGDdxzRBlHbsk/j5pxPEK8uz
84sEse1jCI/O5W7oJjrfed0oiJgi0rm5vQdCJ+ncX4wLIsOWnsYA7j44ci1Z
N+2PIFb2+Q4a6/fDEIe64JNtQqi+UajjjcsAKMtdGYlUE8Ljji1ufopDQK3m
/nLXUgjnldv0nr4bgkf2hckhHkL4ePPMq90iw/AjaN7BL0YIjUkW+9g3jUBa
jXfn8e9CSGKYrnHNHQXzY1sK7BiEUV1oX5je9jFY/5n7yJJbGK9nZZnevzwG
trsmLfR0hDHf6USxhsY4MGWFSWkcFcZtUWyhezLG4Z2yMIeKjzCKVfMuyrBS
4Hh95XfZ28LYGC07FHuOAmxOLnUST2j9Nx1QlKqhQNEsfY7Ie2H8lJklcXwb
FU7denaHnyyMDoqShrL6VNjBhe68g8JI/BZjeescFcqyB3R3zwsjRxiXwPI9
KnipXRPcyiqC0lflbRiTqMDTtIeR5YAIbi5o5l98RgWSc/EIg4IIDowJji0+
pcLFedsva8YiuINR2X3HIyrwhy0mLzqLoIhQynfFG1Ro4okNnPETwYvRht6q
nlS49lL22NQDEVyo5EjpM6aCKLaqjKeLIJ+F66avolTobPHhGSwWQf3OkuJQ
RiqEuG5d7moSQe2G23UveigwcNekoG5VBGPVqsUnrlHg3t7pR1XbD2FYn5hb
nREFFN/c9S0TOYQXKKk5bzgp8LC9WirP6hC2cXBcScweB739mjmJuYfQT+za
PsPyMXiTL5/i6SCKYs7HbMxHRqCS3pj9+zlRrGAbO+mSPQI9ZicCvG/R2hst
w96eHwHGyXtWF16Jon+u8B9uxhEg8g1vCqQTQ9aDj+78FB2G9dB7PlHpYrgy
lH5JgXsQdrSlDOwoEsOXPV6ZNfkDIHKgwCi2XgyP/JCKsLIcAMLHIcHEBTHc
0nREzTyqH57/lOtJ1xfHdwvSB9e4+sDYdkizcFocE3IPvmEgdsOJ5/OvlTcc
xmyBD447GLrh0izL3k+7DmOA3KmfO950QUq43OIX9cO4dX+B3jBbF/wuu5tT
G3kYw6llOkHNHZBwSG7noKwEnmE7c1zmVhu8vmR4/YSBBLqrjZ0MhDaoKD/+
Y/SYBG786Lzr6UorfD92lzQRKoEskVrV5r6tgA8Hr852SaDukr6DydkWoK7c
GWe6JolJk9p2s2FN8CDAjALRkljGnLS3zrAJZFd2Uv1fSOKjInq1APYmCF5O
nvjeLomvHaabokUbgX21Z96TUwoPv2PkmXaoh6GPagu3+aXw8nyFlvP3Osi7
krKQflgKqWYdGxyC6sD+j+vigJYUZm5rfk/KrIXDH0mLf0ylsFyUfusR9Vqg
uyK2xGUvhaFxS1EcHTWQufJriXBOCk+Aow87Sw0EFFsue1+RQrWxYQahDDKY
BhQsh4dKodUPh48DRmQ4oMy98iJKCpOXu87NM5NhbvnKSlWSFPqWFfOXtJGg
umhgZTRTCl8+H2cfe0eCBH+NP3TvpTDD2wfdkkngpZT+Z2+pFPIuJ1YGPyYB
LjOvKpNp85kpbn6aRIIdRR6rxDYpPJsS13Q5mwQUv7rVC4NS6KHVn9pfRoJi
Rcm1qEkprNuYF9I1QIL7S1Frr+al8KfoFZXrDGRwKpxbq6WTxm1MS57bJcgg
60dcn2CVxv1e8Sajx8iwUbF4nYlTGndHLwqceEiGnkXev/z80tij8jGGvZYM
Lz8E/YXD0pjq6Xnt4sYaCL488tdBURqzPlyJVtWrAeHFTLo4U2m8uSS9kNtY
AxcWZOhZr0jjY79D2QZrtaBXEEMvEiqNDz/G30k2qQOeS0v0OlHSSAnaJfAi
uQ7K5j8xBGVKI+krl4Offj2wz+sz/W6VRumW/o/fsxtgKC+HaeugNLYwy6R8
Ym6EvAtbmA9PSqOcB9eHspONYD/XyuxGJ4N546ifurUJMn47buoVl0EKF9NE
X1sT4OwF1vJbMjj43oRR9nILLJvoHcqNlMHpD1YHqLkt8O4Ft15MogwyKo+K
7RttgYMnSm+4vZVBv+RTofstWoG5aeMKa78MHn9uGBhwpA1qXyZMWMkewRDO
l+XG2zsgZLMXszocwSh93aFc8w5QdQUBYcMjWLd8+XdyRAe84h07vnz8CK5Y
Dt7Q4uiEyHuHO5/cO4LRzBdOp+zqAhuPskrKyBEUTszzL4Ue4Kh8ONr4/Qgy
TLUx9d3uAdJ+1w1FS0cw5sJt/pSmHlDq2qx2b4ssxkqIXjrg0gu8epZ5ksqy
qN2v4iwR3QcjApRUvyhZVOQ4Ovhq+yB4DbEGs6AcHk97te2v+QjYx3OPKxjK
4QOS75kX10ZAlyBs6Golh3ojhzvf0vLX/grNnWXucmjmn1QwyDQKLZn+WRej
5FBKY6a6omwUSp1us6clyqGMz+eEC79GIYc75nzTczmc39iTGrZ/DELuvVEV
K5bDUKaqwKHrYyDvTW0aGpHD/MKSDleDceAXmZfb8l0OV49OTJlcHQeOYfpE
lUU5tIhIaUh5PQ6r8VvpPDbIo9z0NPH46DhMEPhcY1nlUXh2zOkuLT+3sYrX
lO+Sx+guhuf8xhT4UqEkObNPHsP7LmmqBlHg1TW9R3yi8sj73PnN7+cUSJC3
XjaSlUefzbVPRz9TIPSns6O/ujyW9NZOnmqggG/WufIMfXk8+TSbs7CFAk4n
AkXaCPKYa5TpPldPAWOe8PsbjsljXJfiIb4vFFBqjZ+VcJPHloryda6XFBAK
zyQ6+Mjja8of9sKHFNiuk19y54o8KmXz1rw/T4G/a18PfLglj4Fti1KFJhSY
LmgKHYuQx++/3744LkCBLu+BqW0J8sjH6XzkyCJNv4eX88+8kkem2/pMOtHj
8DRh456EQnl8oXfGzf7YONyz3BVc/ZW2fjmBaV3BcXCplDLk75TH85fSJgZf
j4F5oPprs2F5XPH+bMTtOwZqCsY7r03JY1VjYRHKjcHuF24DnX/lMbPTsk/l
wyiQwp+evy+igIuP/BSNC0YgTye3s1hGAVUTtUxrL47As/Ui1QlVBTT+rp18
Um4EAs61M2tZKOCmszLpsvnDIG7Flrjkr4B/rl1Tkyoagqg9AeUna2nxdrib
nvnQD1Xfj8+e6VDAm9WH7/mp9sPqZ50Dl4YVsHtKJ0m0vA9OuWwLCltUQGUu
urzI9l5QfZml/PKgImpetboVuaUHfIIeeBRIKKJA0wZx5mfdkGFx4fFnJUU0
1M4wFZbrhm0LsNBspoiqe3lnTjh3AUW98+3CFUV8a2zAc7ypA3i3fRr6G6qI
B4JDN3d7d4DFaCrH5oeK6C+8kju8tQNKbp/12pOliMZPan7fI7ZDVBMTTfwV
EW7t7fq40AqqzrIpd8SV8NbdHRc2+zWDjyxP40MFJQzRPLu6U6IZMpjp1hM1
lWj5R/6w43gTbMupPfrKVgmFtilExRCbgPLbmbM1RAnXX+R/5X7UALxV+rp9
EUqo7PGrfGF7A1g8lrg4nqCEwku+uOFRPZSorrQsvlHCKAU4EZBUB1G3oh7w
9ivhQfq9VaxVNVBFvPxJcEIJW6I1jh2zroHVQ8emJX4roduAXFkchQzSq5p7
FNeVUFxcVywigAynGkQMNTYrI4npl5/1PjIkpWzxN9ypjPPFhfoJnSRoPj+X
ablPGeHO4uBUCgmYdXo6HESVUdB9wVfJnwSqnGVMp+SU8cMBUf48RxL4fHsu
643KSJ/xwLrCjAQZH++d9DNSxhJJiSfMRiTou+/z8LqNMm6PSThrTmvf5kT8
cveEMt6+99gp6igJdGXUfkWfUcYT358FTZwlwVXGg/ueXFbG5ISUbzfDSPC2
Y5Npxg1l/L0aFPE6k6Z3WT+uvr6vjEfVT/5tqSWBWRfH79U4Zfya4BP6aIYE
hRulPQxTlVF3S/bGTh4y3Dvlaz1eoIwp4q9koy/R9DjmUa3MF2Vcam5YuZNF
BsfKfI3gWmUMTvVi+N5HBimBpcN7hpQxZCDkvoJxDcRbcqe7Tyrj5T8iLxtD
a4D+pjJPwZwy8l0tGZMsr4G24avMFptVUDPuYtkQ1oJ/8obBUBkV5L19LaSQ
pm8jDfzWbaoqWE+wu6P0qA6M17VqD+ip4D6mLvv53jrgOxb6oeSoCr7M61Ra
O1sPX3lYI2dDVFDp24u88tQGYIvdqeHYqYLeDOV/nic3wcVKuQ85wyqYuy62
fbq2CQbmbA4vT6kga3bcs69LTfDWMp77EZ0qpkq0aQpZNYPNNr5Z8iFVTNy0
5/SvbS20+k44Te6qKirc3zy0N6cVNpfoc98MVUWxbcQa6eFWOD/lEdEUqYq3
LmtwzXG2gY5h7pXTz1UxaLMa3/3bbTC5UdrqWYMqdrgOJBO92+HITWUm9gNq
uFpapZ1yshNumNY+FhJTw6IKZZYb6Z3QxO0gjnJqeDvF5KUcpRPOvrlm6Wug
hvWmbmZ8Z7ogq7/sWbePGjr7F47p3egGPkU99YyvaqjnfOJye08veDF0NX+u
U0NYIuuZifZBSYO7a3eHGiYohXM3BfSBnevdcLYpNbQ/+enLPF8/PHpY33N+
hzqGDou1KF8YAJbvlpfBRR3j5wbuC+YMgV3hGIvdWXU8J3CWh7VvCLJuXnx6
3k8dxX6RK2PYh0GHJ67yebg6btt/Win9/DAE6/XsYMtXR4LWj85v2iMw/8zp
TRcTIO/pfhEi2xhoe81ozXIAKjtn+37WH4OHijc6WXkAp68Nzy3cGgOpxrR1
dQlAxhBBjiH6cQhMkH1oqwh44SVxIk5zHOpdKwXPawKa6+/yFbs5Dp6rFOPn
NoAR3Xncs8w0P1Z9eajUCfB5a6evmCEFNkVvutDlSZuPojsddo8CNo7xG2cv
ALbRXQ+6Q9Oz54dEE1mDAK8I4T4LCgXm5oolBO8Aagq0qmhtoIJmmdFX9WhA
xRJt/VSav4u612dt+wQwdBe/YDQXFYZsvL75ZAKq3O7Q5uWkgp9Kh67bO8AU
r6gXO9mpwLEf0h0+Ac5tvH7K6A8FMhizNhBoZeqLblH1dyMUUP+29bgercyX
lmJo56+gQEe9f4nqAKBY0ECaUwoFvN6NcMt8A/w9eVKK048CjHFGl4XnAMMV
/0wO0fxX0pW8Nt6/gBvLNGYMeCnA82YL92YmxISt0kvkb+Nwir+8+iYLor2F
QV5N3jisMYsL+u9CnBgYKW3VHgfxprXBk2KIb9Yj/Y5aj4Gf5rsHA1KIfIPR
kU84x6Ai75SanTyig+3Lrqvdo3A0vjHBVAMxQPu+yhOHUbjr/MxaiYjYXbqc
E39yBCbmtGu33ES86Wa66hsyBLJuy/53whBzzKNqBY2GILj7pQjjA0TTZipb
0PYh4CzdHbr8GPGLKl2Gm+4g6N6ewLFXiKmqN8Q+x/dDOnd4QVEPYocTaZfo
zR74dQ9dZYcQd2ps+HZVqAdU1+d2vB5H7PogfE6gthtaR475pP9C3BMXIXmS
qxvocyXFI5g18IPHkQHFr51wXL31mYuMBmppfkr9ZNYO2scFL1xX0MDJ9rBw
N9Z2EA2+rPtUVQML9rC10ZPaYOHLnqlOXQ20Vz8rRqfdBuE6LrJGRzXwqnnK
QqFuKxQbz1dJh2ggu30iw8kLzZDipRdvekcDW/YLbUpTa4ZbD+JPn35AO7Bv
f1NTNzaDeZPa1uePNdBp39mtHU+agGoZasf1UgN/GolsvPO8EXYe5Zxeb9fA
ErPktZnCOli54lG6p1cDr5H7ypac6mAo6WOk4hBt/uvC+pIsdZAzcFzu/KQG
Dgh8vcDtVAuRf99ujPipgbF1dAwVbLVwaT9jT86cBu4VExUOL64BTeeswPF1
DczXup3kwl0DIjdXzOkZNdHJxeGRVw0Z2NOND+7brIlml/vO/rxGhtmKp/Mq
WzRxF0u+S64mGbrGf1Xb7tBEEbFz0x40vShl1kq4yKWJKR6HphfpyZAuHHPm
4V5N9BKlePqvkOCuPlX9Nb8migoxbzL+SwJvD6VtdcKaKMv0TOwvBxms7t4b
nRDXxOWUjF2mYmRQzunPZ5LRRBaLKRUxczLsr5MM41fQxA0QyZ5EWw/z9+v2
oKqJpceF3NrfkWGavU3cQUMT54U3Lu7+SYZmCaG/frqayBs+fvqTdA0knatJ
e2euiV/Laji4STVwI4r3UqO1Jhqo/Sif4qkF93dn9aftNXH3mVAV4vlaODK3
/bugqya2SB/NqjlcBzWXj8rH+2uiw1WGDobmerB6Hv/9YJAm5ihar3wyaoCB
ls70VyGamGsoYcZV0wCzh612VERo4nNP8NZrbgSeMeNfP55rIiGo8eFGxmZI
33Yv0z9HEx8Ht13dYNYMEkB2ZHyric/6hJlTE5tBM0GnnrtEE48trFT1KbXA
aXP1bO0WTSyojFNIutsKC9eunmjs1MSYye49B0dbITinmMu+XxOFpih3z6u1
wSNmhdveE5qo2fKCFLbYBiUlki4J65qoetbD0udGB7AdOsD3S1QLxWa+fTf9
0w2xNsfbA6S0cN+2H3qBF3pgf8iTcCZ5LeSLHH6w9VcPyA5y/+HR0EL+5JiU
Bz96wSFme5cOUQuPOyokWrMMAOWreUSTgxZemNA2XY8bgHO/HugeddbCqT3n
S8+LDEKIEWv+OS8tdJZ/1/pHZAhyNzA+TLyphbpuxIhQl2GQl9Q0ELqjhYIL
+Q62H4ahzCGY7u0DLRzfOcBWzzoCbR9Wz1bFa6H3Xraiz0UjsOo1bzTzWgtZ
YiulP4uOQWjiEYar+VrIVnITHt8bg61kn2Lmj1oY/rWx2f7HGAgI/BDhrdLC
s3Mm5PKicXhlIT6UUauFvhF+Tdf4KaAY5Bkn3ayFBqVtlg00ffiam2Va0qGF
xkd+OpSOU8Ckh8Kk16eFyltaGdsOU6Gmva/2w7AWXpQrU5BxpYJuc0uUCFUL
N3XVR7NEUKG8jkSMn9bCQ8+2f5rMpQKSSveyzGphv0xVkHgZFT6V540GLGph
oq39D7YaKih/zn4xtUqLB9eNntZS4UNxircDvTZmaYw97aukgmxBrFz9Rm0s
L1Vzyiqiwtu34X/U2LUxU2XlbFUmFSRe3vjyars2LlRY7foWSYXsLL/b+7i0
kewZfPrVRSoIp581idyrjT9tffrTbKiQnuyyY8NBbWSfkD+NslTYn2jf7SOi
jeeaDxxe2kIFnoe6rpZHaPOL1xyQ/0SBuPuqYhWK2pi442nsmSgK7LwjMyOr
ro0Vqwxp210owB7Md223gTaeCkfBGCYK0J1deNTtqI1FY8SeT+rjQDHIqDh+
VxvtUGjS7PkonNRJutsUoY25dT/SIs6PwhA+NNeI0cZXu7fLbcNR6FYI7ONP
0UbztM9Jq70jUCdoMzeer431Zw0F9nONwPsNzAJnhrXxrnZXZF46TU+KXG/6
KeqgzElvYvOhPog7uXzmnpoO/lKjOhqN9cIr9vs2TzV1UMd2YjgwuRd6T+Qd
qjDWwQA2r2esXL0gz8LQxHFCB1k+Pw4P3dYD0/YpvJl3dLDp7/coJ4EuYGCS
ZS5+oIOKfonlMd86ged19c+6aB3c8Uof3V53gh7Dz6+zT3TwftvmlU7VTkjN
UfNQf6eD2bJXBL44doDtak9+e48Ong0oUFb71AbeGWeTJwZ18G7NzxCve20Q
ak5/58+YDhYLc+7ab98G79MPORz4qYMbJcrmmZZbYYuJH70Xgy66fCnoyFZt
hYonu8wYxXWRfEWR7lBPM0iC+YTMNV0UDbbcc4SWfybnGwve39DFjwDRP640
QEau2S3ZMF2cskk7GCRB8088Zvzy0brI8LjLaVdsPWyaN3FQeqGLnvn2hxrP
1kF5Tr1o8StdlIxeK5gWqoNAZ5Nl5TxdZEoXb6gdrIW5RuNY1c+6GFVpUF9p
WQvD2UZN0K6LyR2KV05r0/LtidqnZT26aOvcVEWkrwFbLiMvjSFd3HmBa99c
GRl2NNaofB3XxbONc506N8jQcMuQRWtKF5m9DfXN7MhwR7Wmq/yXLlZuyvEY
1yOD9m+DTO0FXVy/P5wpaUSGvy/IFyv/6OK07lpxuRMZip0MtHU36GGzusHR
u6FkuMhJ3l7NrIebT1dJ5RbT/EmD/rAemx5eCigdzv1DhqkQ0mvSNj1k59Zl
lNGvgQwV/UADTj2kZ+5KPJhcAydmq41rePVQdYNYzfW/NcD7Qm+PEb8edpQ0
C19wr4Xo3XqFxof18OrdV8zOFnVgWl8VWi+jh4x8vewaTXXAEqJrbaqoh+dO
F8z5WNdD8IzOrJmWHj5g2tFxzacBztRpi1va6eGiavT+FxeaQPhmxUqrox4+
DxEJbCA3wYiSNtnKRQ8ddYVeWRxoBttMrVM23nq4/nFsxb6zGXRuaKbY3dLD
wfv63arHW4FO6evZnrt6aLUzl52luhVKfmqoHY3Uw7aROy6y0m0gc0yjxyFR
D93UYWcJWzvNL+BOp7d6uDrryO833AGL39XCTvXrYZIlr28vSy8YWx4NuDOi
h4pG+4/yR/dCaqHfmVyqHhJyfby28fWB8c335rMzeji/emKJU7UfUrgOcQcy
62Pv8K37fAmDoK+1MztGUh83hPv/7b8wAk+ypJMKZfWxiYN01Lh5BGbZzR70
KumjdqJU8xXJUUjqunP+gLY+erg98VWdGYUZtUwXbQMahzgK9FuNgW5ahY2b
qT6GuX0/5Vg8Br+8/iq/tKXFH2lkE7g3DjqtvIebjtHiiTYL+i+MQ4Ki8r7f
zvqooEhSbzpJgZ9PiNt2u+tjSmuv+WMyBbQZLjIoeenjy+rwE7f4qBDv/nD+
6Hl9PDL1o8/FhQo/6l9TAy/r4w8G+2/1SVTQPlLf/eyqPo7rPk6TJNP6P56s
rbiuj1c/cq21T9L6r20spYbqY7TRDZ9R+gnQPin4hiVcH++WyTU4b5+AeJJm
6uEofTyjyXJVnWcCfhx2emQeq4+hreZEkz0ToBV9LdQ3UR+9JwfbzHdPwOOl
BL/YFH3MOGKYNss6Ad+PFXoWPddHi5Ty+fpVmh8pb3foy9bHbzFDMl7fqBAn
8tv072t9HMo7pGTSQoXp+1s1+PP1MfxI24+OD1TQ+H34iE6xPt6Q7/DxSaBC
rK2RoPtnffzDU3LnYgAVpj65c96r0Mdka4cn0rY0vToYuvkVWR9nhJSN5o5Q
YfJ72fffrfpYXPk4PZTmj8ByYHB3tz7uWo19+YmmD48K/zQrDehjanlEU3s0
zc/clC8ImtBH0bSfc+pqFHjIlRvIuqaP2QmejvfDxkFFK47joJABno63++Kz
cwxk81Mo78UM0MzR9rDAyChICGd/0pY2QNnmmWr6N6Own/XT6VOqBkj6kyDr
bDwKzK0j1S8IBjh79thPYtgItDhLBEsFGaCSpcONM1uHoa5NgfglxADdCB0x
e0aHoFJXQ4Jw1wBvOXA4HC4YgkJRqz7fGAOU4bp/OeDYEDyd9Vf8kGOAc2J/
u4JODILHjcpfal0G+Pt+fFV4ax84zzVUN/Qb4KZri1Zyt/rA4VTX0+OjBij0
7pxnokIfmBpOGV//YYC/FhkeJjztBdnt215UMBpiSNAcB1zsAbpUhxNG0oYo
pPDt2YBWF8R9+d1se9cQuenXBb0c2iBkQ/6HxghDDAojW20XaINzGpee6MYY
4m9Tbnqt6VbQ/7LkLptiiHyLGbMaga2wVLb2l6PAEJU5wkejs1rAvmyjRPWw
Ifq80FcM2tUMunTkHepUQ9QwKNM2GW8CGby7nDdtiCZlF0Ue5TcBaxlbZeqi
IYrZmRwOIzZByedtDoHsRmi902iwW6MR9n7ec1dOyQgzrz75ERlFy2d/+7xz
1Y3w4soBVmuogwX1p9YHtY2wmCtNc+p7LTSU7j+wzcwIV++vFoaa1ELx+jBz
mJURlkYyWYat0/Kretr0up0Rnrl3ptTqTQ0ElgoWTrsY4dzy7JLu7hrwXKc8
OelphDkKbyrcaf7DRj3rZo+3Ea6Rz5vWBpNBM9DDw+KiEap0eQtkGpJBslTU
jBRghIrJ1sZWomTgXZ+ShWDaeoUqvu7fS4ZN6i95Cm4ZYe7kcEn5fjLMXTtL
d/ieEdp+O2QDR8gw9EmSkhZphH/lXB41EchQt/arlifWCF/Sa/5kCiRDodq7
t1GJRsgSlkuJeE/zM9d84zY9M0K5EwSho7NkiPokey0owwgj+1I4zyjR9rM2
77yQY4Rn/ZifT92m7Uftg77XWyNkbLkatb+f5rc+Ke08WmKEk4/mGozja0Fi
bWW5+QttvU1XfbT+1gKPWsmgfrURSrpmXfjlUQezJeo58i1GaDNlTBYxroe0
Ei3N7RNG+N1BK15VrRFEc1KNxL4bYYSK082awkZ4E7/BWnvWCFeuHjh4Yw/t
Pi99dru0aoQ/t/klJ9L8ZZuUyv2ercY4F3nuWsKbZmB6LtOVqmSMIecuXzjB
QfOz0VHDH9WN8Xum14ebTm2w/cavyTYtY3zXUd3X/q4N+I6/WmM2NcaFmfWz
2462gzy36MHTzsYY/lPgxL7iDnC7f+DskXvGePBBSmRjXjf8uBJ82TjSGA/1
zuSw8PTABc/BYNcYYzzFxm+THNwDwXpPouOSjbF80Sl32KIXHm/gLvrz3hh5
mOSWDzL1A/niVsaKPmOku1AUWWA7BOYu3uz9w8Z4zC2FPBg7BB2Eht0LFGN8
dWnBu7F9CEYkww+JzBjjda93HptshmHl20azcCYTPKRa/YDdaQTEHP/GW0mY
YLZPbF1Z4hjY2BmG9R4xQS79/liv72MQbBVzyVnJBIcSn4Ttx3FoNxSzPKdt
ggaTD51TJsaBTveSxqKBCcqu1rL4qFNAVOOLZKCZCSpfnDno8JACVqpsfEzW
JniuOPbRWDsFghSIbOH2JlgzJKg4vYlWj8ukrmx3MkG9uffaZjT/0Hb4+0S8
qwle3AuthdpUWBdR7Nx/2gR57B8lZJtT4ZDAzcrMcybYzjG7y5dABat9De8l
LplgiLpIlY4RFQJ5uFPzr5ig0+2AfnFVKmTtcolUvW6CP/8oDPAKUaF16+vA
8lATND5kNvFzMy0+68oZw3ATtN3Ove4yQQGRjTpHm6NMUOfGeadDXylAoI80
sI0zQQn3FxydcRS4ttajMJhkgr3vShQWPSiQtSQodCrVBPc0R/WvKVKg5fe5
nd8zTdDZ2FzXgVbvC08yz6y8M0GZXh7D6LhxIIxbDF4vNMFhsdeyXI7jcHUo
qX5TqQm2SvcJaBwch+YOmezdZBMUP0l1O5E9BlfKHU/KDJqg+xYxDta3o5BR
+sKiaIy230/lNks+o9BUNAc4aYKif45Yd8iMguCbu7ym8yZI0Ig6/yVvBBqT
Cto9WE1R+2xKkfLHYTh4aYv+MwVT7D89uX69aBBMfezkRdRMkeWW6oEa3UHw
O5Mu8FrTFAUfRdtotg9AvbPyhk8mpmhIL+vZOd8Pl81OFXedNMUaJZWbnTp9
UCtSKr41kjZ+30fezwe6IbIlQ10pxhRtT5x1Zid3gdXVCHPnBFMUXqVIe/p0
QV+j04W8dFO0ebrPS7+yE35cYiixLTLFnrP0mU7+HbC9Ut/o2YgpXmYLpPBt
a4OOs9LHaqim6HrUQOo4qRUSuXi8f0+b4lcpP5l7wa0gcGbqoc6iKW5WYa1K
+t0C8jse9HxjNcOqwP1cJ8eawe5Eq4eMnBn6N/ORRvsagY+15MpRZTNsLj6o
knGqEUby0u+HgBlyn9Mrnp9pAM9Nl952GJjh2URIO8TeAFdfcy0HOJrh0zjm
tNPWdYB2G1jTT5rhvuMRSnumaoGJYZK33t0M3c9xfZO9UQsPbD7iPl8z/Kp0
TSY2rwYIdOkEfT8znOzy39NhVgOc2eEuPtfMUP0Z20fvaTL0WV68lHDDDJ84
cts8uEuGlLVjYeW3zTDtBN/rIDkyuGTqJkyHmyGrtu6O6RkSHLKQzN310Azz
8zxjsj+R4McKZ6l6nBn6fKg7sRBLgnfpdE1uSWZY25TzWe0qCS6ZfhuOfGaG
gSszB/eeIYHKUvPvogwz3LQ/McjclUTT32Km0RwzrNtxULP5FAkqjNI42d6a
4WXqqZEsbxKEzd87JFdghgmplx5uDCKBSfIFFcePZuhhofpO5hEJthscM7ld
ZoaPJB7tuPGKBB2zOsffVJrhSfLVLSfqSZCQJOHTXWOG5z/smyX8IoGjLudN
+iYz3Ly/yJCymwzU+IkMqx4zjDQgFfl6keHptjvVJwfNsKFo5F5bIk3v7hya
OD9mhm2ejxyv1pGhws/zUNQPM/R1u3b045EaaBJbaD+1wRy/FfE8tthVCy9Z
/GzTdpnj0tfHOVls9RCmS5oQ5TJH7/Ov6IXM6sHlBpf/Ox5zfNfDOmv4sB54
Vwrjv+wzx+64rBOePA1w99tyz+Ahc3yz8nr2qHQjuJGuHONVN8cktvdexh+b
QJOx7nsamqMsuTg7eagJ+JA3UEzLHHsmrKtFmJuh40PJU2V9cwwOmtzaY9EM
2plrg7YEcyxTfsPxYqoZ9ocGOcecMsfxzA1+8SKt0KN1021LhDmyl4nvTaxs
h02hBpN1UeYoc9i+PHqOpickDq97j8yRnGFOKj3YAVHGSec3JZhjQXKDf/aN
DtC3zr9G/5y2n2cez+o1O6HgFDV6odgcz4DDjenaLoi+Y1Q2QDHH63vjlJ+s
90JZ7TatJ9/McZTS48R1pA9+sHdVHp02x0YVHUKhWx8YPnSp7Zoxx5Qv7xNc
mvuAPvFaR8uqOabKW+c7ZfTDudzX01XbLbA80P7VJZtBMG7cwf1a3QKXYouM
SK7DUD2R9VJdwwJbDA8ZzAcNgya9umaDlgWWqeSriiUMg4Kc++nv+hb4PKBa
8m3DMPAnlnwSs7TA+/MOHvsUR2DplKtzlpsFrl8hu9qwjYJv8MqCgqcF4nQR
y4rQKPyIj7hXfcYCJcSrC9I0RmG0riiP4mOBHkLuCZsuj0KDzJaNglctMKz/
UtcWWr2cvl6Q8yzSAo8xZJb3F47BPi5jlI62QOHmio9VrWOQID3cVhZDWx/f
09PvfoxBhAvr+mCCBXLBXZEogXEIqDluzvfcAvN/E4hukeMwPzo39jLTAhU5
/rKeyBmHc2t3/NWyLfDhugOfQ9U4uErlpTq8tsBH9z4XW6+Ow5CBgcL0Wwvc
fqHltyUnBexPDtReybPAbLpcKkGGAu1XfZ1YP1jgrbX7ZwgmFDCP3TSfUGSB
k3XZvw3dKVD7+skd0RILHIwT2tZ0hQK6ZBm+4lIL5My6wK5+kwJlI9XvDL5Y
oLhBUtFkEAVUVh30usstMDjTrI3RlwIFu2Z73ass0Ll1NC75GAWkJG+fWyJZ
IDmCdKwAKZCjz8sUVmuBxkmhXYJ7KSDk/Daes8ECt3r8mi76PQ7PruhKZDZZ
YI5XpI9w5TjwxvR+lW+1QN9azontD8dhG4lp2rrLAl8NnFPK3T8O4cMJweM9
Fsj4Z5uh3egYMP+R3HWx3wJTZsrdbqeNwephe/VHIxbIp0/cPbZ3DMgmrpX2
4xaou7IDBlpGIdbrnPGBCQt0c5Yxuxw6ClIvQ+1ffbfAtzfyp6omR8BF/P0l
0hLt/Ihpl/NeDUOtKNvr1S0ErEtL3km4PwCPDTnly7cRMOxT8kWOlX5w8eT/
dGcnAV+qJ3fmuPfD+gvF2t08BGxN/BZCNuoDmUOuVClBAj5rVAtqEO2BBOHS
fa4qBCwrimWuNaPVb3rkDDF1AtKbH/+1YaAdZN3aDs8iAZ2jeE1Mz7ZDQ8ak
SpAuAS/vs2bjiGkDeiFO23gLAjZ37T8ZstICjTr8g8etCNiY7E358LgFklwP
nxIiEpDu0v3ROkWaXj3XuvDegYC3Gnd0XAtsBg+Bc5H1bgRsacg4J7avCeS1
r3A+8iSg7snyA/JxjUDvEvrU3ouAWpuU4k/8boCktKRc6nkCjnxQfeqcXw8e
5ZlHXl2ktQu+M+XZUw/yo++KL/gR8MbX20sjN+ugiZ9M2hBIQHt7MrePYy08
0WwzIwUT8E2JayBPE60+dx7seHCTgAdZCcJPtGtA4cbkMetQAo5Xi2tMfSQD
Y+r82J47BJQ96c5eqEyG5i90Z0buEdBCIP9yRS0Jng6z/s56QMD7u4yoal4k
OL2BM8A7ijZ+uJtJcC8JFA/wb5B/RMCKkjbZ4u5qWBe+E/EzloB9EdZrx1Or
oULi194X8QS0TLB38L1QDXfliLnOSQTcfKuJsc20GixUS5V5kwm4xa4n+Z5U
NXBpCZLbn9F4f71MPlc1DBiEEyPSCXh99I1uLHM1pJv/HtfPJKCjcZDSleUq
8CTaX6DPJiDHljuStb+qQMrxC31JLgFxT9Dj9akqWHQRibr4moBJEV850iar
oPR0xD7JdwSc+ur42Gy6CkLOL7ycyKPdf9BJ+RzaeEP/Y6qpH2jrLe0XOrFY
BVuDK2qOFhNwtd5XW4auGjpCxex2fSJg5lFj+xGWanhy/yG14TMB1dj2+ctx
VoPLo+WLYV8JGBMzH/BXoBpEE50YNSsJ6FK2zMMpWw0FWRIH8msIOLCbKhNn
XU2rR2Jen60noL/Dj+lKt2rQKlhVE2kioHUrf2hFQDU0ldfYJ7bT5jsQXzRK
O8/YGulvVl0EPLz1Xs7gh2pwaH58eUsvAUX8PWVd66vh28CpR9eHaO/74w6D
3uVqoF+hb3CbImC58T0/VyIJSHSeDgd+ELB/d+fHaFo98GBj82TPLwLusmXJ
2RRGgj27kjeaLhAw/fGTqvdFJJCVUtGQ3WCJ20tEnhfvI4PbKd88Ok5LLLpx
UHppjuYnW0YT4jUtUWsvw/WesloYfMOtIqBjiVnZ16g7+2th9oFZ7ys9Swxa
EVn0W64FbqOPeyqMLTHpmMiprzJ1cKr8YdIPG0sU9a5tO5lZB3R5Gk+1Tlti
622PT4bx9SAXk/zse7QlPnURvpiX1gj6vu0afrGWSB/Tfk21qhEcLFhH6OMt
8S5HgvOGb41wg/0yP9dTSyxc8jFM5WyCplumaZpZlsjzuUrO+XgTeF5aS48r
scQHoirBwvNN8JR4NEtj3BJvNWQ6Rqm2AKPqRhWGCUus22hoqmLVAh7739dX
TFrivhBlJa4zLSD7jeW33i9L7H5Zfd0rqQVqAorVTP9YYnLuhZG4vy2w8IS7
1X6bFXbebGUKbGqlqXalK+9OK9zw+kNkxlQrfDnls9S/2wrtnng5sm+k+VFJ
8t4TvFa49w/Dnnj1NuD/4ufuJmyFgeqNt8retIHJWOear5oVrnDOi/Y/a4d3
pJuRcmiF6ZvoJ7W+tAPXS8mDi5pWmLLk92R+qB1GLt7WD9C3Qvl3vmWqBzrA
b6NCdLClFcYJC/icf94B6aKxIvc9rJAXf04QP3XC6jkry4wYK1zySieryfTA
K/HGRcXHVsh6/kHzVvseODFhkFSbYIWlE7ORmjd6oOo4jP9KtsJklmWjqtYe
iDQVvaySbYWVIfWCZ670wkFxusSmUivMqaaLFRnogw5qAJz8YoV5D77Ye7D1
Q1ja/Oh8uRXuHHzWxqPSD9M8U+J7yFbYIpT/vi2+Hwo2d5S6tlohMa6TUukw
AIbUnJEVKi0+4chQ5fIgrKYK3b4/aYVRGpDfzjkErx2fie3/Ths/9dOZ9cgQ
7OyIvaAza4Uz6Z46mp5DMFBxnTly1QoVN5rd+d07BD6pRFHBbdZ46RNh+/b6
YXh8jOG8mbI17b0dV90yPQradD1721WtUX3AlO/I1jH4lfqGbA/WWF/IG/5O
dgz0Jo4dOKVtjUe6jGoqAsdg4Xxh01VTa+x23cxiwTkOqbsirtJbWGNi88tE
F/VxMC10FQmztMZTSotuPa7jkLG2PTja1hpVnLpf/Mqn+ceUb2LcR62x05yf
N3pgHNY1yzqfHrPGCa+wr4kbKZA9HntTwMkay3wMS1mlKWAd5iWZ7WyNXDbH
+MbsKUAnpt0r6WqNjVE+wZ7XKZBbz3M7380aXydJv/FIpIDtuRkZFU9rnHq7
Y/zrCwow7iANlJ2xxh9811PzXlLgTf7Tu7re1uhhSbR1yqKAg+1F+Tofa5T8
Y6lVn0CBTX+MRiwuWONanPTIxC0K5D3hf9B5yRqvhseP3vKkgBMuKx3zt0Zb
xggXNwMKsI02jo9cscZBdek2hYMUKLyVEeUeaI0+u0kFsUvjcFLkmtqPYGsM
Mj/1a3vNOGyptfzme9Ma86aVRsQej0Oxl2jM8i1r/KrMTrA+OQ7b33dOM96z
xps6Oqzes2NQav3q8d371jg6QJ+17cMYeC6FaG+NtMa+4z/YhALG4IuaTNKe
GGu8XZdzp2B1FM6Rwo1kkmnxtzuKOy3T/HO/Rvbx99Z4f+Wp/d1fQxAQzGUz
nm+NvbsvOTC8HQKhgz83nC60xoTp/Tc3nx+CQPcku0ufrFGRJU7q89QgSPxe
2HS/2hqTGMK0mFgHIHxTrltxrzVed3eTVo3sgbtvl5guD1jjnN9Flp98PRBm
r5N+ZNganRN2qXi97oaQ3IGhXIo1mu5cmCtv74Kr5tvsk2es0fwkq98VhU4I
WD62dHTOGvslCs1l2mi/39TsWK5FayyIGOOMPd8BF+a0WqNWrfEX+x4d07x2
OPP4knHIRhvU+1ywgWrYBp4a5ZPIYoNxf7o73edawX2S484amw1O81mNeCS3
govqi8pL221wwXKdvnm5BRyGetU99tpghIZRa/jnZjAW0ZA2PWKDxCa3v7I7
GsGw+X4ji7wNNqWTmOMjG0A/oMerWtEGy5PyhbS2NoB2nW82qtPa40r0NXbX
g+bFMv01tMHnLhr515No/pqPnVqkZYPmxPi1QYE6UD2XcfCIgQ36ZxFyGlRq
QZn795efRjaY2USaNKmpAcWv4JRraoPGYoNxlfY1IH86fN3dwgbTP2fmiX0n
g+zO7iRBKxs802n69Pd1Msh8ElQZsbHBJFae7mAhMkidOt/91M4GXc73UFIH
SCDB8fnyUQfa/i5z5UxkkkC8kHU313EbdOes4NQJJoHoCdu8thM2OJc093Oa
5p9FWJ4TolxskNe4IteIppdC72d+mbjZoOWFtdQ/BBIIOKhHsHja4PvyY3od
tHZ+pnuHq8/YIA+rrw3ZhQT7X3XW3vS2wdEoDe0FPxLwEQU88bwNtvX09NyN
JgEvnc+mtQs2KCR7brX1PQl4XnzKKLpsg/m1azoK3STgIrDoXAqg7UfcM02S
gQy7/9iMylyzwZLy0jR9aTLsTE+7/jPIBudNXqfynCTDdpNf+3Jv2OBr/sE8
k8dk2LqgWup+ywbPvdHcm9REBjb9jpXhuzY4JVe3dMWgBoikmWzv+zb4ebdK
qO6tGkjVZz+6FmGDGpXnGZnLaedvoP2RK8YGP4SfV57VqgUXw3dXzJJtkOGY
kuQWuzooMX6wWvLeBpdCqAFrFQ2wsf5FrmGBDdbTCu8DXI1AMKl06Cq0QQ8b
tj9XzzTChMlqye9PNhgkvix/hq0Jdpp5XhMl2eBf7lkyZ1kTnLbQXY/ro703
2W9nAnVaoKD5xCvBQRvUL9x2kMu/BegI1xzfD9vgpcOf1B1ftkAsIa+0gWKD
P1/yblnkbIWvlvxBTDM2eCWVhSlmvhV4bNb/nmciorbngdVbbe3g2sH9hm4T
ESXd6Remd3TAGxs5pwcsRMwaX/MWtOoAXeKZshccRFw5xq++q7MDztv2BA9x
E3FPoNUjDWon1NgXbDCVIKJ1A+mZ5ZEecBvWS98uTURnqRDXL7d7gNG9W7fz
CBFJT2dijvX3AFxcveekRMTOGKqrdHgv5EVo7vbVJqK3mkf3x6U+eFLRIPrY
njb+tM2zzE1DoGzkVO9wjIhLt+9QiWpD0NU8433AiYinnqoUldPyz/bBnfnZ
rkTc6ywq0DU4BKHL9vDpHBHLNa/xqJQPwzkJquVIKBE1NwtvUn47Cuz5fgsZ
d4ho/ME/v292FLJVWOJPhxPxw1xfh6vcGIzpHx6YiyLi8FEfU4VPY3C9sTS4
6BER89N/Rd6iHwc+G/ODgXFE5PnIu79KfxzsTvq6b3xCxP4HnGuHusZh4Rsj
a10yEUPb4xQtD1Dg0bnYl5GpRFxgp4j6nKaA9KKwufVzIl5snGx7l0OBhmtF
s9xZRPyWHtGDvRQ4zWgUM5BNRBc5u0ebVmn6cq9PIe0lEV9E75v+xEGF59vO
9ri9IWKlYU31BCcVNB//vSr+noiWo3CTsosKg3xR+2byibjVQsZsmoUKV5/z
f80vJOKi+NHhLUsU4BHPcwn4SDvfWJ5tugMU+PBOZyOUElGg5PuidykFrJQ6
XzB8IaItn9V7y3gKzH52NyaV0+7ryq+AFG8KROiu/AivIiJFO2X/bw0KiNff
i7IgE7Hx/lhvz1YKkC33yu6uI+Jo9L65xr5xONXzqqOngYhVUUL0kDEOKdTm
PS5tRPT9GZq288g47KLnyrg0SFt/WhTjTrUxoHPys2cbIeL1tqxayoYxmPzU
tSV1jIiuUjtFnapGodQ//nL9NyLG6Pp9LjYdhVMzPAYCc0S8He/aWHl8BAqH
9k43b7JF6y8J07xRQ5CqHpjixmqLh0tXtX3thiA8acBqjd0WuYMuitnxD4GT
bfInkR222Mj5wLf09CBsbtofEbTXFvkaNBJFSf1g//mgzGEZWzR3e3Wz6WMP
aO8NoXyVtcXnx6VzvxzvAYkrYwm2CrbI4yVjP87YA/QKzxlCVG2x4CmTWgmh
G3JeCbX36NpilvlPj6OrtHryySG/sKO2GP3i1oPikHag/LkjzudoiyVh6RE3
lNuhyW5y6L2TLX4YVWAwmWmD9F05BoOutsg427O/7wSt3r0vvkf+nC0WSk6t
hZq2wtOrkqWjIbZ4x3bAXsWyGW58mfI/c9sWrwi75jRyNYMrc5bc/B1brBI3
3is+2ATikftfMkfYIoPGwmGZs01QnLYt6VC8LfKe/ilnLtoITyfqie8SbXE9
zqbW5UsDXD98d4fKU1vstGV5P2hH07cP9PeM02xRi1Yd/35QDx01v/29X9oi
R6/mrl2b66CY443c0mtb7P99Sagjm+a3rc7MBL+zRZXgzvBOE1q+HBhzf/jB
FiWMOYXuxdWA/sFnAnuKbTHW5scJOfUaEHM/NpRWQjv/lpEtHBQybHnJnST+
2RZPWc67SUWQYXamnZj/xRZv0P15PqVNhg75hzvUK2jxJu+yNrORoeiKaWNV
Fe0+Ix13vhkjQVIZyz0zsi1uvv26qqyGBMFM1bpdtbZ4OU076uwnEi1/36Q/
0WCLbTqUTsuPJNCLgNJvTba4Z5RFUqycpn9tf/zPt9qiEX/owe+tJNjCXSj3
p90WQ4UuRadOk2D22IWZm122+PngXY6rtPnbU6VesvXaosLyjZVSGTIUUqfd
Y/pt8QlMH65wJEOS+AsBviFbXJEzW1yk7SfYx3UoY8QWOYXdtQYryXCy4ECS
5LgtCkU+X91MVwOimLBDY5J2/3l3WPKCamDLLZtG8rQt+qmx5D2sqIEZ8vZ7
hJ+0/lU+N/zZaqHQ8h69y5wtWrC5q11KrwVdt6szoeu2WKEm/yXpVx2I5iq+
5Nhgh3ceDDqT//f/YTNz7o8Z7FBVqSSjLbUe2gK8hl5sssPCg7cO6Tg0gPMD
x8a67XYody3g8/7RRgjKx5fbhe0wmj//h9eTZsij8z3acsgOR/xffN3X2wyT
Rs83PxS3w7g5019vuVvAZmTzqW0ydnhN2l/rSnwLiHO08m1Vs0OxncH4Na0V
etxdI9kt7XApTZ05fawdtubFqddb22H3i07yVmma/vwlT4fb2uHmdqG+gMAO
eBsjYcDmaIc9XTyp5rydEPZ1cQOrhx2+2SWVaujSBfK8d303BdkhneeXL2XC
vXDGreQA6bod2u5NG1W41Qup73403g6xQ9atdj4do73AbmApvvGuHbJtfFP3
KL0Pxi7yjjPF2OGuQSWjk7IDENX4yoYhxw79pcguHdVDUMUzzFj+0g7tdN1j
feiGYdV1x/sbb+zwc/kBmwKlYXBfvcxBX2CHcGril8arYVA/pEGi+2KHzdNu
2aHJIzB9o1VpvcMO9UKMcifSxsD7edvyg2477I36piExOgaz1e1F+/rsULvE
S5n74DgssnUpaQzb4e2tdwVH08chQLJ7uXnUDte2tNJVUMZh1aKnyJlihwqt
J7eaHqJA0IVe/98Tdqgx3RHie4YC9HF9SiFTdvg8cYNkXgYFQor6l3f+sMPX
LAqBd1oosLFvoOj5Lzvkdc+xCpyhwN31QX/533Y4k0lImmGkAtuBYaXqeTv0
CvyetX8LFSK0RpaJS3ZI/7o1/jCNt58aLZpYscMP/UMfdjBT4VHYmL//mh2+
unp59+cFCnDmjCux0Nlj57W7+/4MUSChnrKcQG+Pt2/KxIRWUoD3F7VIjMke
v02fBdbnFEje/s2/ZKM9lmYvvzoQTAF+uUklExZ7vH+7ns2SSIF04tRyP5s9
yjPd2sQjRgHhgOmisxz2qOe5+dbEn3EQ//xDKXKnPUZ4nL29M3b8fxou82gq
9y+Mk1AqkRIiEinJEDJUZ28NKMpwCe8573sOTcpQSYaUeUj5FSlluk03VxqU
UknDwXl1jMmRKfNMQoMIXb/z53c9a+2912fvtZ7vA7mdo7/VlhMoW311UpnT
Cxvnfit4okjgV29RfujaXjDZ9cNMsJLAp8k7VBzye2CbYMJMfh2Bpvqjo/28
buCNT/7OWk/gjJj5j5tx3WClMFVgokvgKbGWVat2d4MtOWPmZkigh4WTe091
F7j0i5hnbCUwkzNQX9LUCd7T883VHQn8UmG/uFekA0ZVFkzlORH4fcOquasS
28EPF77a7kKg+klv6UzVdgiMkTY/yCKw5YbdzRXb2iBysZx59iECf9zY7pR9
tQWurVY21w0hMMXH+LxzUBN42yYPj58lcLnx1KznkibAU1I33oQTSOaos4ce
NsJQ6aTYnlgCV5d6iKwfbADG0U9VXkkETq07O2JzvB7kkm3DDa8Q6JUdEByw
rB4GCks2TqcQeH9zjdXPwk+QtCjv2vkMAldGZpk2L/wEPY8vut/7l8CNt0Ib
Ot8IoKBJfOmJHAKbos+7mvkI4OKcs6WmDwm0OBT+maciAFMnr/X8PALH97m1
Ho6shQsTVuN9b4T7sDrx3dvtI2xkiMZr1BF4e03kXI0A4X/5cNDm4XoCZe6E
Od2bqIKWS6NfnzYRWJmfyVEOqYLYzlbH7e0Ezl3yve9xXCUwpZzFF3QRuE30
thUtUwn6hpUvansIzNfWC3mQXgFN0a+UPYYIPGmdnNzwvBwePTT4sO4rga1f
mjWlrcohsj474tsogRRZl/GnsQxcZlWNCr4TGHusVeqwbxnorL3WFz5O4IOD
g2IS8mUg6iCdaj1JIGPTks6yGj7UB8fYyEwL+cfflt6RwYf7t2f+NPwR8ojq
UfEIEPpNxcnHN0SYuCUn/aYDyQfnn0Meh8WY6LO7OzbQTugvKh7L9CSYOOJz
9PEpGz7M7mx6/2seE5f1l1mtsOdDna/96bcLmKi1tV2dxeLDvWvvdWKlmbj4
Jr3e8RgfQrmM9j2yTFzk8yVQ5xwfHAfzk5YtZeLr/31YaJzFB60lG3a0yjPx
4xK5+Do+H2bM//n1jyITt5cm3o0Y5UPN/hX3vJWZyGhqli1TLIPT+fOlZ1Yx
scRvtOhiYBnYtYVzSzSYuPBSz1LfnDLQkJz0u6DFRG35QxaX28ug2rWvQWkD
E8/suxNdbVcOGZ4FSZ/0mHhUAtd5x5fD0aAEm8SNTBSmmb/DhX4leX3jO3FT
Jv7p3K50nlEB2BCaNbaNif/N7jMPh0rIc15+qtSViQ0uv2JCD1cL84z1Er9o
JgrYSufiEz/CAY8VlTpxTMzlO6bufCm8H7+RmP54JloIlu8z6fgIH5Ku/GZd
EvJ2J+e80q+FeR87OqzShPOrlq3bUFcLp+2Cc1UeC/Ukp05XjTogbXNsyz4z
sf9YwIhYXz0EGdoqOLcx0SBtUyBHpgGuKI10d3QwMYQ6q9tiLsw7AwYhk71M
9HC/26Wb2ACbYgruaY0x8ciJREp3SyPIvOVLxM5l4bjIa33Z1Cbg6fVzt21g
Ycr4yNaH7i2gLadh/DqUhc+WyaajaCdcF9nyIzSChRpRW3NcFTtBfOSvJxbR
LExb77TtoEEndPCjNryPZ+Gx0aoMN/dOuBrarVl7hYWOFwX9mdxOEBm6LT+Q
w8KPaibkojNdUM9dNSnXwMJb+eZZrl3dsOOR2fP6JhYKil9Nf5rohifpDv6p
LcJ+xcERRot6ICEgYmxlFwuvXrRtuWzSAxY6nQPrvrIwZlKBzzvfAw+u3WwC
MRJFw+Ubw7R7QSnm5bU5EiQeec5tr9zaC3F+Nc70PKEe22zz3b4XPPaI1O6W
JjFuuseKF9ALCmKccmdFEi0Xm10N4PZC7FjgOQVlEtWVY9KDanvhR+sly88r
Saz4vl/KrqcXql++K+ZokLgy5bpboGQfbM5qCF+tReI25og1X6EPspNHGX3r
SNSKVX3/Reh3Ub6qhV56JF6fLi/MtukDhqHEhVkDEuVFA3PWMvtgcmKYSDYi
UbJ/ldSio32Q91qgrWVCot8SdmWNMM94R7yaemVG4o07Lw86CPU1lrfK924h
8dG5vvgaog86pc6ldTFIdAqRa/Xd1gcZH3yPBlgI5xH8YmxU74N9V5zNpXaQ
aOCz1HyB0H9k3LZI/W1J4mC4/4byql4oV1ndbLCLxPC6qTcb03shumt+Dm1D
ou3Duouj+3sB/h0LdttLoqDn7o6/hX405dWw66u9kJ8DN6JysAee6b9VjPiL
xHlKqUtn/u2Bta8uFGS7knjiIiNKSaUHukL94rcwSdTWS62vquuGzO1ubjUk
ib+fJQ1JX+iGJVVrfk94kBhoHhRr97MLptuLTK18SHyd2rvJTng/1eKTL3oj
SLRIyPJIKW6Dc+VtccHRJOaOeUW56rfB9ku0y6I4ErtaE+e9vdEKLxWSJ4wS
SOxbtOFEdVQL3FqvaxKdQmLGmS8O4R7NwBpbKqmQSiKn2ThOsb0J5POn6++n
k1izs6TvBdkE5xllAYKbJNrEDL+ScW8Ef4cDz9XvC/udiVlgF14PuvI2sc8f
knj8cvVx40X1MNhssG/3YxI3bQhZr5bxCagDs+Mn8km8+1mu8Nu7OrAKTDMu
ekeiZoSdnriqAJQya56x60gMu8Rg9xjXQLW1XEJfvZDH929rz/A+QORP5/0+
TSROD7vokWofYNDms2xIG4mKNs2b/TurIGNCZVC0k8TdCcESSZZVYH+Hwz3X
TWL9mUT37EeV8HKq1zdlQLhvmXnOyXEV4J211lLlC4kP0owa90yWg5qjl8o/
X0mMVQicqPEqh7o/D39qj5G4j7jbtrirDOLujVU8+U7iHB+ff1isMjB3Nrxj
Ok7iTJHDie5uPoyIBJx+N0HiloZ7en1BfLj94KWD5RSJvK5dvwWKfNjnOr22
aobErHnZT93p9yA1lyHiNEvij4PbmYdOv4e3ueENzaIUeipW82tN3oMfs+SR
+1wKTZsCtJ7PlIKmpETsgASFZxX8d5jxS6Exz5o8Np/CnpiAxHuppZBAXTD6
tYDCFW6m+vuOlwJKVS84K03hFf9FKU9sSuFnvky3mCyFColGC43Xl0K2+1+v
zstRaF23LfOQdCmwFqUkycpTOBXP0m3+SYNMQaPndQUKK2WUTxi00VByYAWq
rqBQRUvviFI5DQEy1PIsFQqr97A41i9p0H59c0RHjULHwi79kGwa2g5300/V
KWzraUz0S6PhstyaTHNNCiNP7jT88z8aLN95+hdpUTh8+5jYWCQNU0fv21hr
U3g/ruHGymAaHsmPqH/QoTAm3HSu+3Ea3Iv1p5z1KHw36WKc6knDUt+TH1sM
KAzNLvS8504DX/F59n4jCgtO/zV9kknDGXoybGgThaniGbu6nWnQP7HZ5YQZ
hbn797K77WnoUQ7VndxM4anwb5/YtjRc53PFwxgUvuiMt7e2psHWX6xV3ILC
0edr3l/aQcOsquWzhO0UZgYbjq+1oCGv4twFOUsKT2t8HpVg0HAosMIjzZrC
IpOtPmqbaaiutpfN3iPkIUEXdRrTEHk6eUDXnsJtapGMYEMaNq2pf5fvSOGh
tgcBGwxoyDzL9C1xodDyb90dn3Ro8NY5VNHmTuFc/q+ttzVoUGvMvn3wAIWT
6z5rpKvTIIj6Ejx8iEKTOU4KSWo0mH8+vnbKSzjPQf81Xso0zD8fErMsgMK4
0ci4HDkapLcY2QmCKAyqqi/XkhXyGxlWSAqhcP8bh6FkaWF9R+rBwggKLVaX
zBrNp8FUyUIglkBhoIW9V9wfHjAqf2cUXaSQt27L0cNTPNgRmncoLInCZm2z
HIMJHth3rZ6aSqEwO2b4YdQYDzxzJFZ9v0WhlnaJhWoXD3xZ74Zy/6GwReWs
ol0bD/ylg575/EuhTpSq6pFmHoT7DVoNPhDq+ytGmbU8uGZe6dvxgsLLNz1q
LYp4UFqe9Lq6ikLdtMqSjek8qDyzOzahhsJrr+2CFVJ4UKsrZr9bQOEHZvHw
UCIP2i77d9ONFO5+XpfgEsuDX4SL1Jtu4TtJFV2P80Dzi7Lr/d8UCszPaJlY
8CB6QfaPOE02tpfPkbRvLIGGK3of5Ney8b6dTlXdxxLQXvki5642GzWrPvbb
V5RAjX6pe4keG/Mla5fqvy2BFft6PvxnxsZ0G45b4p0SyLup9uDUXjZmKJkv
m+9TAh3GqQf2B7JxYFPxGcOZYtjKOf+JUcZGb0/xOTLyxTD8VLJZsZKN33YP
79GULoYMyZi2n9VsvBR+uY4hUQxTj8L6c+rY6CW6vzDsVxG8/OP/W76DjS6q
s4stGorAKJ2tMvqLjaMvO579SC2CZV5peXZLOLhCRul2iGYRDC9tMnojx0H/
YwGH41YWAe/t8hfayzg4aOs5kbm8CPyXXC0UV+DgYo1vq4fnF0FtwSVeoQoH
2Y8bjsiOciFxXky91joOxj0p6rpVyAXPvBLXq9oc9EtN0/PJ5wKy5nyeoyOs
7yj1ZGcuF0Zzw9pbdTnoUZzbv/IOF/a6nB5INuKgU7tXdMAFLqwRLTgquomD
LR0v3uTGcOFPzsSwrwkHGbbXDk6EceHBf/7fdplzMGcwJiPPnwvR2U9PvtjM
QdsOu+A1x7jAcvw+rrGVg2Nl6px7R7hgNKMfdJnBwTtfDYM2H+DCgqxjU7PA
wWnBzHALxYX/A78ijGE=
       "]]},
     Annotation[#, "Charting`Private`Tag$82108#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Prevalence per 10K\"", TraditionalForm], 
     FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 5], 0.2], 
       FormBox["\"10.\"", TraditionalForm]}, {
       NCache[
        Rational[2, 5], 0.4], 
       FormBox["\"20.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 5], 0.6], 
       FormBox["\"30.\"", TraditionalForm]}, {
       NCache[
        Rational[4, 5], 0.8], 
       FormBox["\"40.\"", TraditionalForm]}, {1, 
       FormBox["\"50.\"", TraditionalForm]}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.2, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.2\"", 0.2`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.4\"", 0.4`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.6\"", 0.6`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.8, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.8\"", 0.8`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.0\"", 1.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.2, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.2\"", 1.2`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.05, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.15, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.25, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.35, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.45, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.55, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.65, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.75, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.85, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.95, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.05, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.15, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{0.8899999999999999, {
       GrayLevel[0], 
       Opacity[1]}}, {0.7000000000000001, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.2, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793709151185916*^9, 3.793709174491349*^9}, 
   3.7937176832629633`*^9, 3.793717852255567*^9, 3.793717911686911*^9, 
   3.793718183631056*^9, 3.7937182751019506`*^9, 3.793719547101345*^9, 
   3.793801399984601*^9, 3.793801480612418*^9, 3.793801576746934*^9, 
   3.793801644000451*^9, 3.793801748737666*^9, 3.794507035928727*^9, 
   3.794507503687416*^9, 3.7945075500395937`*^9, 3.7945076695763893`*^9, 
   3.794513119171998*^9, 3.7945131859645767`*^9, 3.794515039455679*^9, 
   3.794515323794306*^9, 3.794568658289297*^9, 3.794569023186124*^9, 
   3.794576702305551*^9, 3.794578159179213*^9, 3.7945784456306562`*^9, 
   3.794579376513176*^9, 3.7945795059605923`*^9, 3.79551385033735*^9, 
   3.79551389835623*^9, 3.795514554262725*^9, 3.7955157781102343`*^9, {
   3.795516180521628*^9, 3.795516188744482*^9}},
 CellLabel->
  "Out[1389]=",ExpressionUUID->"ac9f53c7-87bc-477d-99f2-ea2df9170e39"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fignpibps", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"10", "*", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"npi", "[", "t", "]"}]}], "/.", "sol60bpsprev"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "130"}], "}"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", 
        RowBox[{"Opacity", "[", "0", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.79344727493867*^9, 3.793447275672996*^9}, {
   3.7934625847549*^9, 3.793462585031742*^9}, {3.793463088769895*^9, 
   3.793463091558565*^9}, 3.793617656897922*^9},
 CellLabel->
  "In[1390]:=",ExpressionUUID->"594a9b9d-1b3a-4f05-bc43-e425766e2d9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpsnpi", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"figcritprevbps", ",", " ", "fignpibps"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"PlotRange", "[", "figcritprevbps", "]"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "ar"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "imsz"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793446704447353*^9, 3.793446711536757*^9}, {
  3.793446744118206*^9, 3.793446750009528*^9}, {3.793446976069807*^9, 
  3.793446978955377*^9}, {3.793447262748226*^9, 3.7934472636613283`*^9}, {
  3.793461917634132*^9, 3.793461928547559*^9}, {3.793463093975984*^9, 
  3.793463097176322*^9}, {3.793463150716834*^9, 3.793463154325522*^9}, {
  3.79363216851443*^9, 3.793632172538486*^9}, {3.7936331945653276`*^9, 
  3.7936331977712507`*^9}},
 CellLabel->
  "In[1391]:=",ExpressionUUID->"be195f5c-f1ce-46b2-9956-2602ec25a0cf"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJxEmnc41f8b/42i0CANo5LM7L3dt70ODkdLpITQIJHVEBIlFalIVjSMjEpI
QmYDWec49jrnJEqKSuj3/l3X7/f5+sf1vN6v171er/f7ftzXdXa4+zl6crCx
sR3nYmP7v/+HuJS7jxo1GrL9v791BfRpc98c+P+6iJ33mLDv8//0BfkHsit8
6//TTKNvq/74dP2n75GSQ374jP+n5xy8i2d8fv6ns7scSN98VuD/168H3QLK
zTb+p7m5f4bWpG7/Txs2ta8ze/s/feZyYW7Ll//p2ahn3j7bxP7Th1acuBXg
9z9tsHL4SzT/jv/0PFdj6pPd4v9pgaPPJ774/E8rNGUrK57/n/a4fKGx9OH/
dCe3zuyrX//TxasKrFpTdv6nP3in3lr/9H+a2Rw75Fj3P70tzjOIOvk/Hb96
e9awnsR/+rHPmilxsgRqxe7VD1TSNHzb8lfT00MC8xb/PFb9Umo4KDt58VGI
BMYVume3fRwzXIijffgcL4GlVtWNfTGcsGmycbN8lgSOd4sk5+QJg6r1C/eT
LyRQ5km+xouTCmCX96CwuEUChddfGHbX0AcfnsTfswMS6G/ET50KsoRN95Wp
Uz8k0PrEwU8O/k5Qr9T2grFaEg3XG83emXeDU3Unbg1vl8RD39N23688Ctt2
852ma0hi3vVjD65O+MN7Zp5Dl40kzrrOm20zCoaQMCvl1sOSKJd313pQ6AJI
rmGtbQ6WRK/HKd63rKKhIyNmuvaaJB4xWTQyHYuDC6qSH149kMRnHYyYwyo3
QL7hbd6LCkmU9Aubvs5Igt697nFFbZJ4ceWdOieBuxAzyeb9ZEISjZvktxc+
TwO1cxnmD/5K4j4uZqkzIxOG1xlK3ueXQoERy7UuBQ9AVyN89IaBFOY/1WiK
HXkCzCah2isUKZw3WvOu0rYQbjmXZ0T7SGEIpSOVL7gYvl6YcwlJlsJnNoYH
Vd2fwz2BW3oB+VLIXOmyc194GVjmqgofr5VCF6e2oqm8cnjwzo/qNi2FSVp1
JeVWr4HsurZsP6c0qiXq7Jd++QaWvxXcoghJY2Xqp5+VIrWwb+Okg4WZNGoe
P9lcXPYW+A55fFC8L42mHpIP00ktUDHLkS/zTBqzMzx2sde/A69LWXHiLdL4
kaREe2j0AWryBs03zUmjq6qHqrptGwTN7atdIslgUqhevlVzB4jH/sr45S6D
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
3LBq0F6an/FI2xGbVnQ9VHSuhtoNXw591HNEjaN+9oObquE/cm/NP2NHfMnJ
G21kV4Fbp8uzS6aO2Jcpv+i/kioocR6JVgNH7I3f/ePz0yo4HihqZrLTETUD
Qz+bBlfBy/samT7WjlggJkaxX1cF4trpMXPtHJFloPz6iHIVUHP1jlyzd8Qo
Rx/fIrEq+PfZTDWH6oiJx69mWrRXguV3h/ODhx2xSs+GX3StEnibbh09cpbY
L9TEOVa6Egzea+Bvf0fUjWjouztTAdEW6f+FBTli7Rf8r3ewAtYz8uvvhjmi
vNF+seGqCjgb2oQtFx0x+oNOueLVCpCtkFe3u++IepwvC5OWV8A2pwtNZl+J
/Pz74/4f+RsM5s5rWVLpiOlgsfSjxTdInhfVMVrtiIer3+WGb/0GU89DBBmN
jig3ljG9c/k3KPjrPanEc8QJ2s/G1z++guEdR/WhMUe0Mmcr1cZ+hcUut1/a
LHLCO4G7VKYqy2FQsdmwSMEJb70Xet0uLYdPxcr52oudMOvQK5k9eeXgvej6
W3EVJ9TKqz376V451L+5/OmtuhMeo+dcsPIqhyuSUey1Wk64YIeEVoxaOTi/
/Ei9ru2EA08kZXvkywEdRFtF1zthlYXMrb3zymHoRUhnu64TupVJXDX9XQbW
lID+a4ZOuPXx9YsvystgzZw3p+ZsdsKoeeT3p4rL4G/G+KDbFifscNcz139V
Bpn/vIctTQj7jPdp/r0yiEzP9crf6oSrb4ptabheBg4Hfv9Ztc0J8zp/x1Ve
LAPDmQ1+V82c8Ilxdnh9WBkseOw+NQtOOHYmldF3tgz+B1XdohA=
        "]]},
      Annotation[#, "Charting`Private`Tag$82108#1"]& ], 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
wWnBzHALxYX/A78ijGE=
        "]]},
      Annotation[#, "Charting`Private`Tag$82108#2"]& ]}, {}}, {
    GraphicsComplexBox[CompressedData["
1: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
+enWjPE0OWMeuC9H+h/Ig17yb1TsCvRxH0pwv1kYm4F5cLEzN3T6l5Uqzf/w
yq+CBBMuzIMRv0aqdz/8JdmsNajJgvykyCvumLXHecsC9Fvq6uD37BfRJ/x0
0Y+MNxi9u13R9xvfeZTTv8D56Otrj1duQP+52vd3XgvDfSDvVZZgSB30m+29
rvGZF3ot5y2On90PvcTUXksEGWB+U416yuxH8PpBpispQ2ToEZ4kK7x6B/zx
mhsKBCXB31pZ0tynXyN/Kf5qf0lPwM/rGgWJ6R2Yl+qz2jnqC7ivaWTWmDvp
gy9rSx+5Rg/kabezzUBmBfLzwXMux2QH+GtyrBXypCAvo+z+vZ/vg78VSlXX
bRv4bZLke/7VIvi5L5x4On47hcCM5ELuZ5fgp615MQ4egfCT1Ym+hoCn4EPy
pOen20eQJ8boL/szC+GnTv9Luhv/4n5RrCi8QckDfppsKvoedA73BUqV7hvy
DfhBPtg1SeoDvs+8Pcg8m3sN8yz3xi/yiCjOY208My94AHpvKOiZ0HC9T8x3
cn3rhkPVmO9b0iW7xmfx/e6fw5qiBbGY71bJXMP7dZBng+4Ns9Qk8H9Rv+HW
rt3oU9Os5AmBYAqB9UyOno8cQj7E8jN0d0+AX/MjOlc+74O/b7NF1p/oR18x
RmiPNcZh/tSP5haS1cD/inDk9V83wcdD8ZZF+Vv/fP4h9WzvUIb+Fm+n89yu
Qi+nQc377FLw81OS19GPosiDW1b7n2ufgNOcy+I6JNCPt0jKs0GhmFfkffTR
q1LQg1VZxqDND30//oShh6sR853d6enwTxd+Ahc+D15V2YP5vqE2/mvLBOa7
T63s8/xBzPcjpd+YjpxFX940t+04Lwn/6zfVRTRJg//JgJBzerGYD1UNbAfT
f4DfHZx6qlI3/vk+OmPX5atj4PPZh+MPhfrB3/oSv4XsyH+eF9l4T4d1o+9O
O1XwvQ0Ff+oPFZ51fgJfGq+cvV8L/8PPpk8yLzn+eT5dz/U6ygT9cr7c5I9b
AJ4/84vMy7JOwJ9n1nR/eNUIPy4EXjje0kUhcNrxhttVPZjv6blSaaUy6B+v
kKWF/a44P2m3+mcJR/SRoq5dk7UNzsu0lkwyXYXedRbnXgqNYp6rn5k+OLMB
/WQaFf11VBzvR06Cor0rEno1Lk81cN9EPgwd3Nb3DkIvhxyNlPEY5EPsuOXT
9uPQo457cG11Ifg2mxuzd1oDv3JfKk2ipf/n+6HiastEsX+eX0kLNb7IxDyv
tLu8PjMV/M4HajDfYwZfGZuvX6A1Qr5OZ4tobP/5z/cP7KdyhF7BnyJhS4a0
aynE+sgbw+ut1ji/68pI+glXPA+Z/zr3rTAHeihyzb7+pYv5vfBjLXPjHejx
sFCqRXQCzycMbVifHVmDvuUoc6FatGM++Wx9x15Pj3wcauPZ02qD83XKxXOQ
a+Bnjx9ZMm6q6L+y+nMDlXbQNyJ135oLJf887+k+aZnFhH5Lp7QbvA3B/Pb2
9vKtqv7n+crUuSucPNBnF02ZK40c9CFp+KotauPnnZf49OfDV7yeKehuvFs6
+AptqQwpSwA/qewJSp75yFN9Wd/S1xzw0c4s/r56M56/RCq/766ewryePpDj
oK4NfrQE7gluK8d8TrvL6q+zCfwEpcjEW8qDn2PDiruM7oAf47s/dnMdhX8U
zfZlys/j/JX0B1N8OCkE5ln5KaMSgnwYk+4ba/lhPg9oa+8ff4zzS78UUhoy
Rz5ojFiTtX5jHtPlXpFUOwp/PDQSH8huwPv78Jp0eiga80UpuytEQBjvLzz3
iddzJeiTZzDg8IMMfbzHOv0f9UGf4oo2MeH9yAefItfSgzjwT03eSHKhAf8c
Le+V3gyDf0v3aWklV/SRFJWyTX5FgVhvXy6cE5vCz5+puT2vxEoh1ilBLi5G
PuBvbMsO1qYC8CV3KmbF2Qj5kloUNjTLwn3GYnWHTNkM+Mu/qOt1WAL8/Uq3
YNvijPuM+bFkhhlv3GdSFoo84qrA7/6LYzZmEciDqTILL50Z7qfB3p/9Z0fx
PKniy2AtJeWfvAdqJvCK4X7JWsiVJv4KeeWRMi+L1oP/8oZvhgnawW9fTHx8
Uy6iTzsueNkxPwcftk21EzKX8f9/3hTk6ld04j62JZRhOVccfpChSvrFk+GH
/wPFHOpF
     "], {{{}, 
       {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{474, 400, 526, 97, 166, 7, 54, 6, 132, 53, 629}}], 
          PolygonBox[{{596, 605, 404, 530, 105, 172, 18, 65, 17, 64, 16, 630, 
           477}}], PolygonBox[{{567, 429, 554, 199, 280, 62, 103, 14, 61, 13, 
           476, 348, 617, 443}, {628, 351, 619, 446, 570, 241, 317, 149, 207, 
           76, 114, 28, 240, 148}}], 
          PolygonBox[{{440, 431, 556, 202, 283, 69, 107, 21, 68, 20, 142, 67, 
           475, 344, 616}, {580, 607, 411, 536, 136, 196, 58, 100, 10, 135, 
           57, 342, 220, 623, 457}}], 
          PolygonBox[{{451, 614, 436, 560, 214, 294, 87, 124, 41, 157, 86, 
           230, 123, 328, 186, 621}}], 
          PolygonBox[{{559, 624, 461, 583, 308, 409, 121, 184, 38, 83, 37, 
           243, 154, 472, 338, 613, 435}}], 
          PolygonBox[{{504, 330, 608, 427, 552, 190, 272, 46, 160, 90, 231, 
           127, 329, 189, 452, 271, 602, 378}}], 
          PolygonBox[{{574, 627, 469, 591, 335, 432, 204, 285, 72, 110, 24, 
           145, 71, 225, 109, 326, 175, 620, 450}}], 
          PolygonBox[{{626, 337, 612, 434, 558, 209, 289, 80, 118, 34, 151, 
           79, 345, 227, 460, 306, 606, 407, 533, 117}}]}]}, {}, {}}, {{}, {}, 
       TagBox[
        {Opacity[0], LineBox[CompressedData["
1:eJwl1nf8T2UYxvGfvUVCJLKyZ8iKEsrMyMgmNAhll6zKHpWMbMqKBlqyR1kZ
lRFZRdlERkX0vl/++Liu674fz/me59znkLtD90bdEiUkJPRLnJAQ+qs/nsXf
/Adog4egnZAESfGbfkf8w3+ItiiDG2qvIxPWy28gGY7LnfAvPw/5bLZAfhzt
5HTyeL4wqvGb6UH1UvwX/HP0adqYHqS9aVn9N5Ec5ZAC89Ee6fXftq4lLRLX
oVvoL3ql+S/5JnhYvkkH4h5skN9CSpyQO+MGvwAdUB7/qQ1CZmyUhyEVfo/f
iZv8QuR3nYVy9ThP+S75Hb4VLRp1upV2p4f0m/IV6HCkRkdUxCaMwL3WTbOm
LS1Hn6Q76em4f/6buF+kkf+gz+M/fhE6oRJuqQ1GFnwrj0RanJRfwC3+I3RG
Bnu+q1YMh+XKuM0PQVZ8JxeyZglfB6PkbPL0OFfU4nfRl+kZvYfpyrgObUUP
IZ36I/G88ByqxH2qb6aFrfuYb0/r0nr0JzpaLzs/gy+Ps3G2OMW/iNv8YjyP
jNZNUCuOI3LVhDuDPFTOhi1iEfmT2B9j5PvkmfEsUJvfTc/Fs+dXxTVoa/o0
PUz70Az6j8b18BjuxhK8EF7/Peta0xK0Bt1Gj8Z7xX/FN4u5lxPJb/DZsVUe
i0w4LXeJlxMfkwetWxR7xe+JNfJEviRq8tvpsXgn+a9jFmjzmP94F9TH4R5U
R2Z0QY24d/1ttKj1n/IdaH1an+6h4/Vy8LP4ijgvZ8EZvisS4RO5K2rGUVv7
ploObJffxv1qs+VKuCBXkFfzbWKu5LP0JTRXT0yr0A2xf/ym2Df68Z3CE3gn
Zgbd8GTsr/89/Yw+Ffh7e2nPmGf1nHSOXBkXY2Zxjo+PYBJ8JndHrZgznI93
FEmxVO6B2khin7fUcmKHPCHODxfkHkiGZfLLcdbWTpJL4Te5DpKqDZNz4VH+
W7pTvRi/NL4ZtAFtQPfRXjFH+n/GM8ArqItdmBjvkTWX4pth3ZqYF9qWNqFH
6P16F+N9RHIsl3uiXpwJcuGB2F/vFaTA53Iv1Ecy+wxXewC75UnIjUtxtkiJ
L+QC1n3EPxHfBf6H2I/2jlmjk+NZ09LxnHBc/Zl4TnQy8qAPGsT+6j/Q4tYv
4zvShrQh3U+nxO/m58ac4LKcF5fjvJAKX8p90RDJrR2hlgc/yu8jH/6SeyM1
vpL7xVxbO0V+CCfkRkihNlLOi8f472Ju4rukV4IulzvRRvRnTI29kR+N473F
1+gf19YvE+dk/Y6YGfq7elm6Qm4R3xg5pTyKz4c98rQ4Y1yJbw/SYIX8Kpog
lfWj1fJjrzw9nqvaB3JVXJEryWv5digoX6V98Yx62lhHN8Z7Fv+uxHvFv0b/
QFPMQCEMQLO4L/19tKT1n/OdaWPaiB6gM+NZ8h/GrOOqXBjX+H5Ih5Xy62iO
IvENwnX1/kiPVfLAmBWkttcYtQLYL8+KuVGbF88F1+TK8jq+PZryR+MeaTG9
v/lX44zlu+gmrI53ng6iJ9ECs2P2kEF9DS1o/eI4N1qb1qU/0sF6WfmpfFmc
klsijdrYOOOYB3lOzAn+ifNERqyVh6BVnB9K4V/1Abgb6+ShaI209hunVggH
5Lkx72rz5Wq4Ht8BeT3fAc34Y4nu/N+utN7/O9Ifiw==
          "]]},
        Annotation[#, "Charting`Private`Tag$82253#1"]& ]}}], {}}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Prevalence per 10K\"", TraditionalForm], 
     FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 5], 0.2], 
       FormBox["\"10.\"", TraditionalForm]}, {
       NCache[
        Rational[2, 5], 0.4], 
       FormBox["\"20.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 5], 0.6], 
       FormBox["\"30.\"", TraditionalForm]}, {
       NCache[
        Rational[4, 5], 0.8], 
       FormBox["\"40.\"", TraditionalForm]}, {1, 
       FormBox["\"50.\"", TraditionalForm]}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.2, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.2\"", 0.2`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.4\"", 0.4`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.6\"", 0.6`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.8, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.8\"", 0.8`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.0\"", 1.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.2, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.2\"", 1.2`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.05, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.15, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.25, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.35, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.45, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.55, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.65, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.75, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.85, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.95, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.05, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.15, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{0.8899999999999999, {
       GrayLevel[0], 
       Opacity[1]}}, {0.7000000000000001, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.2, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0., 1.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793446723677157*^9, 3.793446785087015*^9}, 
   3.7934469801090403`*^9, 3.793447227208099*^9, {3.793447264011318*^9, 
   3.793447277456396*^9}, 3.793447311102808*^9, {3.793447516154393*^9, 
   3.793447528874736*^9}, {3.7934619226037683`*^9, 3.7934619288630877`*^9}, 
   3.793461961164349*^9, 3.7934622036035557`*^9, 3.793462451229333*^9, {
   3.793462489491652*^9, 3.793462608413128*^9}, 3.7934626961006603`*^9, 
   3.793463101949006*^9, 3.793463162163579*^9, 3.793469063784091*^9, 
   3.79352928181706*^9, 3.793529765743968*^9, {3.793529807095574*^9, 
   3.793529926214718*^9}, {3.793530274258504*^9, 3.7935302895109863`*^9}, 
   3.793532176390874*^9, 3.793538247675445*^9, 3.793538621743272*^9, 
   3.7936176670134687`*^9, 3.793617740073183*^9, 3.7936286885906897`*^9, 
   3.793631368536269*^9, 3.7936321728943987`*^9, 3.793632436201429*^9, 
   3.793632616516098*^9, 3.793632897848282*^9, 3.793633151320738*^9, {
   3.79363319811522*^9, 3.793633213245633*^9}, 3.793634385413712*^9, 
   3.79363484039583*^9, 3.793635142278419*^9, 3.793640118982139*^9, 
   3.793640224661243*^9, 3.7937091795920973`*^9, 3.7937176834133244`*^9, 
   3.79371785385695*^9, 3.7937179119530373`*^9, 3.793718183805469*^9, 
   3.793718275270541*^9, 3.79371954723167*^9, 3.793801400086944*^9, 
   3.793801480757762*^9, 3.793801576909615*^9, 3.7938016441479063`*^9, 
   3.7938017488942947`*^9, 3.794507036141409*^9, 3.7945075038858843`*^9, 
   3.794507550173286*^9, 3.794507669740239*^9, 3.7945131193645687`*^9, 
   3.794513186110403*^9, 3.794515039594195*^9, 3.794515323921063*^9, 
   3.794568658387549*^9, 3.794569023357252*^9, 3.794576702515628*^9, 
   3.794578159351513*^9, 3.79457844600253*^9, 3.794579376600594*^9, 
   3.7945795060590763`*^9, 3.795513850509769*^9, 3.79551389846629*^9, 
   3.795514554489006*^9, 3.7955157782198973`*^9, {3.795516180656596*^9, 
   3.7955161888781967`*^9}},
 CellLabel->
  "Out[1391]=",ExpressionUUID->"f3472466-a7ce-414a-aea6-2016e07aaafd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpsnpiimm", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60bpsprev"}], "]"}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"yearticks", ",", " ", "None"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "22"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1.5"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"baseline", "+", "amplitude"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.793469988806632*^9, {3.793470075413954*^9, 3.793470081093424*^9}, {
   3.793470211112308*^9, 3.7934702152043467`*^9}, {3.793470333200201*^9, 
   3.793470334099934*^9}, {3.793470537368553*^9, 3.793470539306753*^9}, {
   3.793538635282527*^9, 3.7935386648543167`*^9}, {3.793538718000548*^9, 
   3.793538728081834*^9}, {3.793633190196765*^9, 3.793633190971692*^9}, {
   3.7936348114620523`*^9, 3.793634816964944*^9}, {3.79370907905031*^9, 
   3.7937090831893*^9}},
 CellLabel->
  "In[1392]:=",ExpressionUUID->"43930179-0943-453a-b5db-bb5744eb0bb3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
Zw==
       "]]},
     Annotation[#, "Charting`Private`Tag$82399#1"]& ]}, {}},
  AspectRatio->1.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 22),
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
    None, None}},
  FrameTicks->{{Automatic, {}}, {{{0, 
       FormBox[
        RotationBox["\"2020\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"2021\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"2022\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox["\"\"", TraditionalForm]}}, {}}},
  GridLines->{{}, {{0.5, {
       GrayLevel[0], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7934699894726562`*^9, {3.793470075830908*^9, 3.793470081965844*^9}, 
   3.793470216425116*^9, 3.793470334682704*^9, 3.793470539599276*^9, 
   3.7935292820531263`*^9, 3.7935297659296017`*^9, {3.7935298072783747`*^9, 
   3.7935299264119387`*^9}, {3.793530274436921*^9, 3.793530289692074*^9}, 
   3.793532178261346*^9, 3.793538248176729*^9, {3.793538635776616*^9, 
   3.793538665169251*^9}, {3.793538718266941*^9, 3.793538728341588*^9}, 
   3.7936176722288923`*^9, 3.793617740484042*^9, 3.79362868895872*^9, 
   3.793631369181305*^9, 3.793632436452693*^9, 3.7936326170747547`*^9, 
   3.793632898155519*^9, 3.79363315158302*^9, {3.793633191290484*^9, 
   3.793633213479291*^9}, 3.793634385668785*^9, {3.793634817238412*^9, 
   3.7936348406421328`*^9}, 3.793635142583169*^9, 3.793640119259891*^9, 
   3.793640224892289*^9, 3.7937091822357492`*^9, 3.7937176837078543`*^9, 
   3.79371791231691*^9, 3.793718184254736*^9, 3.793718275663245*^9, 
   3.793719547591016*^9, 3.793801400401219*^9, 3.793801481111108*^9, 
   3.793801577284792*^9, 3.793801644505484*^9, 3.7938017492594423`*^9, 
   3.794507036708665*^9, 3.794507504357739*^9, 3.794507550542511*^9, 
   3.7945076701024313`*^9, 3.794513119743074*^9, 3.794513186485004*^9, 
   3.794515039975915*^9, 3.7945153243038692`*^9, 3.794568658659904*^9, 
   3.794569023759548*^9, 3.794576702938386*^9, 3.7945781597119513`*^9, 
   3.794578446523521*^9, 3.7945793769726353`*^9, 3.794579506403648*^9, 
   3.795513850656657*^9, 3.795513898549714*^9, 3.795514554638089*^9, 
   3.7955157783080387`*^9, {3.795516180762393*^9, 3.795516188981518*^9}},
 CellLabel->
  "Out[1392]=",ExpressionUUID->"f1686dfa-36dc-4ce2-b703-4aef52819d84"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Plot break-pump strategy, with seasonality, and double the ICU capacity: \
\>", "Subtitle",
 CellChangeTimes->{{3.793445775253668*^9, 3.793445791735546*^9}, {
   3.793461803106874*^9, 3.79346180437956*^9}, {3.79346302353588*^9, 
   3.79346303274085*^9}, {3.7934635851245403`*^9, 3.7934635913014708`*^9}, 
   3.795516448936762*^9},ExpressionUUID->"d47a6526-1f94-4b8b-a84d-\
dda18ae3abc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "0.02"}], ";"}]], "Input",
 CellChangeTimes->{{3.793446122258461*^9, 3.793446135642728*^9}, {
  3.7934618271568108`*^9, 3.79346186369106*^9}, {3.793462009540318*^9, 
  3.793462018321295*^9}},
 CellLabel->
  "In[1393]:=",ExpressionUUID->"a56ee9a7-d402-419d-a7b5-1c92bb4108a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpsmoreICUtemp", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpsprevmoreICU"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", "sf", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpsprevmoreICU"}], 
        "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
           " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
             ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+",
               "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", " ", 
           "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"52", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}]}], ",", 
           " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"52", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
              ")"}], "/", "7"}]}], ",", " ", "\"\<July\>\""}], "}"}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"52", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
               "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}]}], ",", 
           " ", "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"52", "*", "2"}], ",", " ", "\"\<Jan\\n2022\>\""}], "}"}], 
         ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"52", "*", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}]}], ",", 
           " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"52", "*", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
              ")"}], "/", "7"}]}], ",", " ", "\"\<July\>\""}], "}"}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"52", "*", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", 
               "+", "31", "+", "31", "+", "30"}], ")"}], "/", "7"}]}], ",", 
           " ", "\"\<Oct\>\""}], "}"}]}], "}"}], ",", "Automatic"}], "}"}]}], 
    ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Critical\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "imsz"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793440555957224*^9, 3.793440562287552*^9}, {
   3.7934406031532516`*^9, 3.7934406035891333`*^9}, {3.7934406435598097`*^9, 
   3.79344064625572*^9}, 3.79344092383211*^9, 3.793441084303793*^9, {
   3.793441245349256*^9, 3.793441270066451*^9}, 3.7934414366245537`*^9, 
   3.793441467463295*^9, {3.793446097780415*^9, 3.793446128296608*^9}, {
   3.793446947620717*^9, 3.7934469478618402`*^9}, {3.793447057506488*^9, 
   3.7934470620245113`*^9}, {3.7934471042355547`*^9, 
   3.7934471058731747`*^9}, {3.793447135977392*^9, 3.7934471395087557`*^9}, {
   3.793461810968658*^9, 3.793461812420525*^9}, {3.79346187541588*^9, 
   3.793461875705258*^9}, 3.79346199728846*^9, {3.793462345482862*^9, 
   3.793462347731813*^9}, {3.793463036835421*^9, 3.793463065940053*^9}, {
   3.7934635956391993`*^9, 3.793463604800393*^9}, {3.7934636625210752`*^9, 
   3.793463664042399*^9}, {3.7935384448266687`*^9, 3.7935384451409073`*^9}, 
   3.7935384791837387`*^9},
 CellLabel->
  "In[1394]:=",ExpressionUUID->"e7752dae-944e-4795-90f5-12da7452a853"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEl3k8lO8X96WSLBWpkJKtbCH7fo5tMLaxDCUthBBRESVLm9AiEmUpSRKS
hKRNoWTPngpRM2PfZ2zpuZ/X63m+v/lnXp/XOffZruu+r/cl5uZv58HOxsbG
t5qN7f/+93IotR81+KTP9v9+6/O7R0k+WfD/9bMV3MeEfYr/0xHyD2VW+VT9
p+kG45zz3m3/6VTL2yHT3r//07O2XoUT3jP/6cw2W8tx71X4//XbnkMny0w2
/afXrJk5U5Ei+p/W/9y83qTyf/r0laePvgz/T09dfOHlvX3Hf/rwKr/Ek/7/
03qr+4Yv8Yn9p5kcn1KeUMX/0/xHi/8Me/9P7/6cqaQQ/j/tfiXiU1H2/3Tr
Gq2p16z/6ULOfPPGuxL/6XqvlMQNBf/T9JroXruP/9PbYzyCOof+p6+tFX3Q
pyP5n87x5h0Rp0iiRrSTbqCiun7ll0V1D3dJzF2az1EeLtLvkRk6/zhEEmOe
umU2NQzoL8R01Q9ek8Qi83efvkethM1Dn7bIP5DE3+1bb2flCoMyucTteIkk
Sj/JUys5vhuscx8+LfwiicIbIvrc1HTBmythbuqnJAYY8HWOBJnB5nSlzpFp
SST7HfxqG+AAVYpNJbS1Uqi/wWAqmXkITnz0S+wTlcLDk2nU9PKjsJ3Kc6pb
TQpz4449vPonAOroubZtFlI4dYBpst0gGELOmis1ukqhXO4dco9QBEjxMtbV
BEuhZ85dr0TzS9ByP2r0w3UpPGK0ZGA8EAMRylL1rx9K4YsWWpTrnpsgX12Z
W/JKCqX8z47G0W7BNye3mGdNUnh+dfJHB/47EDXE5vXkjxQafpYXfVqcBiph
90kPF6VwLwe9yJmWAX3r9aXS+XYi/y+zdS75D0FbLbT/pt5OzCtQ+xz96wnQ
Pwt9iLXfiUwD3tpyq6eQ6Fx2/5L3Tgyxb0nhCS6EsYhZl5DbO/GFhf5BZbdi
SOVP1DmZtxPpq10k9oaWgtkjZWHfDzvRxaHp2UhuGTys9e88NLoTb2l8fF5m
/hYoB9aV7lu5C1UStPbtevkelsfzE+2FdmF5yteZ8q0fYO+mIVtTk12o7nu8
prC0EngOu9crpO9C5xG2jkzLL/Bqij1P+sUudNGWqZaoqgXPyw9ixL/sQgtf
t5VgWA8VuT2kzbO7sJkrKVzRtgmCZvd++GspjQnL/XkfvrVAT6xVaf2SNHpb
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
Kfwf4d5rUg==
       "]]},
     Annotation[#, "Charting`Private`Tag$82520#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEl3c81e8b/6WMjDJKEpUiyczKvi57HePYHCQhSklDVCJJUYmGkJRRhFRW
FFJ2Zhkde++RdY4R+p3f4/H7fT/+8Xg+7vN+3/f1el33+7ouQRdvczd6Ojq6
c1vo6P7v/15G6dZTGpXqdP/vb3tmx7Tu6RT4//x+E+sZvtO5/+NA8WTRLafL
/8ejGn+YVzxb/sfPCU/9FjyH/scUoseHWc/F/3FSC5Hwx3ML/n8u7jl+oUBn
5//YSerGIzbv/5guKD7bOeY/1hRsn2ee/I8rT5pftIvk+R83jWlfWu3Y9T8e
mBf1VT3P9z++paUfHRn7Hws9cc8f+v4fu8snU+/v3PM/nrzCf6X783+8uLbN
7waDwP+YiWnRvzRu3/9Yvappu07Zf+x7593rmsn/eP5Wjofn3v3/Y+ctZ59c
8P6P1Rj6JkM4Bf/Htm4NClXC//GliqKbW5X/48zbsbsiXP5jPkYLrWc5/zGV
sTLurdWB/zHXqdzhSc//WKIqSVryxn/seiewMvvNf9zMpDT/Zek/njklorbB
evB/zFK98y7u/481784LVOj/xx+YMw0aYv/jOo+4JxxZ//Fo9d1e8+//8d4w
t8u/J/5j5XGL0t3//mMrA01WB26h//H9rfsS+1T+4zRP9qkDZkJomyi/y4Qk
A2U1fxXcXIXQTX9cZ6zmPPSITtxM9RPCU2u1TpPRd2E1jFw3fl8It1x70+lw
MAZ4Jip3iScKocvTL2/dMpJBxjDP5VyeEN5cnrNercoEk/Tkdx9qhHDztL/a
8Ksc8GR5tDzfLYTl+oSl1WuFwPNC+vfUghB+mP0bt1+1FMqlGvNGtgojb2uR
yhRjOey1YrvYIS+M3PT0Zaun6qB2NJ3YYiSMnaaOthz+TeB31UC64YQwTu9o
3VSU/AuE2ce2VV8Rxj77SS2NmBb49TJ0+tsDYdQwqOE/6NQGgTLCdV+ShfGo
U5fkn7+/QbyiLD2vUBhbvoTw6Vxph3Ybl7D3jcKIrw7/3traAaETdB5vh4Vx
87aOxqu7u0A24KVu8l9hrOi62EvQ74a+7erCLzgPoTrTobYPrj2gLH9tIFLt
EB53+nXKT7EPRqt2fwu3OIQU5Ra9hOw+eGJf8DLE8xDGbJ3L4jncDzOBFAe/
p4eQUE3cx848AMk/vH8fnz6E1ZunfrhlDgKbs2ud5AsR9AreS/rYNgKF8/QZ
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
jmHmtTOvVfGgD4taNT8Zsvzr5wreq+LHN+Nb/PaQgfftzCnGzzQ9dttxd+4n
w03y9h6LclX0Th52OiZOhgmmo5aJDaro8TJLZVyVDBbHzH/MkFVxqOjm2Alz
MhS5X0TVQVWU/nTm70EvMghHP8kPm1bFCVJSeUkYGSIq8sR/L6liguypjuZ0
MiwttiUJ0athd9aCPXsjGZyFlnkvsKnha3r66/uoZJC9pczALqiG62l7mH8Y
tUOwSW3MITE19DzZFrvFvx2adjuIo7waLskf+Cia1g7nPgRYXDRQQ1K0UeQr
1g5I6y5NbPdRwy0NgXsJQx2wlEaUX7imhhMlnSEZAp2ge2mgmi1UDVd0s3jl
bDthkGXLLMSpIeW69EZkUyfsVdRTf/NdDYcETFfv1nfB2c3kn1/r1FB+6JKK
FK0+FTV4uLW3qWHSM7fFMmI32LmF32ebVMMDubfTMtq74cmj+o4L3OoYfLyi
iLDYAyzTFlfAVR2ltMNPnUnvA7uCIRa7c+roNfr1WuivPki7dTnhgp863qxS
9eL72wc6fM8qXt9XR9lBH55sWr0K0uvgZstTx/EjFb3flvuBkuj8gcwAyBjs
E5V5ahC0z85pzW8HTP/GILr2bBAeKQb/ZuUDjLgnHNNVPQjSjckb6pKAFyMa
S63Fh+D02gjhtTUgYcPP0G11CPqsz477pAK2pN66+Cp3BPxU2nRPZQMaZOXX
9CyMwPb9kOJQDOiqmWk3LTsK6uMcx/WaAXXlK3hD80ch/lpuC/8/oNX3I9wr
FWMg3rTee1IMEea9XZ5yTIKfZnZEjzTiXE1THjpNQnmuu5qdAiLBWY40kzkJ
pNjGOBMNxOtMVdJOxlMQ7pJopWSDqDTzfWE+bhrGFrVrt91CDNQSCNqlMAty
p1b8w+4ivo/RTGp3m4Wg9neHt0Qg0v+RWFKOnoVdJTyhKzGIp38mag8uz4Lu
nTEcykLcm1kqyVA5Bym77+cXdiAmlAkl+91cgNl76CbXh+hzycdLqohW/zYW
ud8PIw6SNhelLS1A84CjT8osjV/Emk+dX6TN21z791Fp590bSPiStQinqyob
Yv8injskpmk9vQj0mVLiDxk1MNJQa2PFiwIme4c6trJpoNXsVA5TFgViI2PC
Qjg1cGIjQGvyDwWG6I0V//FooLDKU6FUGSpIX9406s+vgX+4P90pukyF66N5
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
/5z7GTQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$82520#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Critical\"", TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {{{0, 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39, 
        FormBox["\"Oct\"", TraditionalForm]}, {52, 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}, {64.85714285714286, 
        FormBox["\"Apr\"", TraditionalForm]}, {77.85714285714286, 
        FormBox["\"July\"", TraditionalForm]}, {91, 
        FormBox["\"Oct\"", TraditionalForm]}, {104, 
        FormBox["\"Jan\\n2022\"", TraditionalForm]}, {116.85714285714286`, 
        FormBox["\"Apr\"", TraditionalForm]}, {129.85714285714286`, 
        FormBox["\"July\"", TraditionalForm]}, {143, 
        FormBox["\"Oct\"", TraditionalForm]}}, {{0, 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39, 
        FormBox["\"Oct\"", TraditionalForm]}, {52, 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}, {64.85714285714286, 
        FormBox["\"Apr\"", TraditionalForm]}, {77.85714285714286, 
        FormBox["\"July\"", TraditionalForm]}, {91, 
        FormBox["\"Oct\"", TraditionalForm]}, {104, 
        FormBox["\"Jan\\n2022\"", TraditionalForm]}, {116.85714285714286`, 
        FormBox["\"Apr\"", TraditionalForm]}, {129.85714285714286`, 
        FormBox["\"July\"", TraditionalForm]}, {143, 
        FormBox["\"Oct\"", TraditionalForm]}}}}, {{Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{{0., 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39., 
        FormBox["\"Oct\"", TraditionalForm]}, {52., 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}, {64.85714285714286, 
        FormBox["\"Apr\"", TraditionalForm]}, {77.85714285714286, 
        FormBox["\"July\"", TraditionalForm]}, {91., 
        FormBox["\"Oct\"", TraditionalForm]}, {104., 
        FormBox["\"Jan\\n2022\"", TraditionalForm]}, {116.85714285714286`, 
        FormBox["\"Apr\"", TraditionalForm]}, {129.85714285714286`, 
        FormBox["\"July\"", TraditionalForm]}, {143., 
        FormBox["\"Oct\"", TraditionalForm]}}, {{0., 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39., 
        FormBox["\"Oct\"", TraditionalForm]}, {52., 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}, {64.85714285714286, 
        FormBox["\"Apr\"", TraditionalForm]}, {77.85714285714286, 
        FormBox["\"July\"", TraditionalForm]}, {91., 
        FormBox["\"Oct\"", TraditionalForm]}, {104., 
        FormBox["\"Jan\\n2022\"", TraditionalForm]}, {116.85714285714286`, 
        FormBox["\"Apr\"", TraditionalForm]}, {129.85714285714286`, 
        FormBox["\"July\"", TraditionalForm]}, {143., 
        FormBox["\"Oct\"", TraditionalForm]}}}}],
  GridLines->{{}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7934460980332727`*^9, 3.793446136522884*^9}, 
   3.793446410789082*^9, 3.793446948533244*^9, 3.793447062548545*^9, 
   3.793447106173595*^9, 3.793447139888754*^9, {3.7934618171374197`*^9, 
   3.793461876052273*^9}, 3.793461948906311*^9, {3.793461998856566*^9, 
   3.7934620191467113`*^9}, 3.7934623480706882`*^9, {3.7934624057905407`*^9, 
   3.7934624191384983`*^9}, {3.7934624892715187`*^9, 3.793462572784232*^9}, 
   3.7934626081882143`*^9, {3.79346304116936*^9, 3.79346306769261*^9}, {
   3.793463605972706*^9, 3.793463608244369*^9}, 3.7934636643824368`*^9, 
   3.793463767910952*^9, 3.7934638054439707`*^9, 3.793468774389982*^9, 
   3.793469064030712*^9, 3.793529282362859*^9, 3.7935297660945263`*^9, {
   3.7935298074838047`*^9, 3.793529926612197*^9}, {3.7935302746120367`*^9, 
   3.793530289932653*^9}, 3.793532186190876*^9, 3.793538248652816*^9, {
   3.793538445494155*^9, 3.7935384796400547`*^9}, 3.793617740840426*^9, 
   3.7936286893536797`*^9, 3.7936313697406054`*^9, 3.793632436750717*^9, 
   3.7936326177729893`*^9, 3.7936328984880667`*^9, 3.793633151815061*^9, 
   3.7936332137213182`*^9, 3.793634385920115*^9, 3.793634840871047*^9, 
   3.7936351428344*^9, 3.793640119504282*^9, 3.793640225145472*^9, {
   3.793706330976768*^9, 3.7937063500629463`*^9}, 3.79370924224517*^9, 
   3.793717683943074*^9, 3.7937179125367403`*^9, 3.793718184578155*^9, 
   3.7937182759918203`*^9, 3.793719547874339*^9, 3.793801400611341*^9, 
   3.793801481411813*^9, 3.7938015776137877`*^9, 3.793801644814419*^9, 
   3.793801749569581*^9, 3.794507037046299*^9, 3.7945075047894278`*^9, 
   3.79450755085378*^9, 3.794507670348328*^9, 3.794513120185192*^9, 
   3.794513186799005*^9, 3.794515040399192*^9, 3.794515324560109*^9, 
   3.794568658843322*^9, 3.794569024107383*^9, 3.794576703322918*^9, 
   3.794578160019128*^9, 3.794578446937036*^9, 3.79457937719837*^9, 
   3.7945795066026583`*^9, 3.7955138508317738`*^9, 3.795513898674163*^9, 
   3.7955145549100027`*^9, 3.795515778413903*^9, {3.7955161808762712`*^9, 
   3.7955161890892687`*^9}},
 CellLabel->
  "Out[1394]=",ExpressionUUID->"adea0244-b772-44e2-a0a0-ba392674daea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpsmoreICU", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpsprevmoreICU"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", "sf", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpsprevmoreICU"}], 
        "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "2.4"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "sf"}], ")"}], "*", "#"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"PlotRange", "[", "figcritprevbpsmoreICUtemp", "]"}], 
             "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            "5"}], "]"}]}], ",", " ", "All"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dateticks", ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", 
    " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", " ", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", " ", "Black"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", ".000089", "*", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", "  ", 
         
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevonmoreICU"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevoffmoreICU"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7934461917708607`*^9, 3.7934462838598347`*^9}, {
   3.793446322446604*^9, 3.7934463225391617`*^9}, {3.793446417493855*^9, 
   3.793446493716259*^9}, {3.793446527768334*^9, 3.79344668076748*^9}, {
   3.793446762278329*^9, 3.7934467828855133`*^9}, {3.793446951803142*^9, 
   3.793446955141111*^9}, {3.79344707334725*^9, 3.793447099371722*^9}, {
   3.793447159075315*^9, 3.7934471754116783`*^9}, {3.7934472158450813`*^9, 
   3.793447223477141*^9}, {3.79344729650998*^9, 3.793447304161545*^9}, {
   3.793447499123787*^9, 3.7934475264506483`*^9}, {3.7934618795755053`*^9, 
   3.793461889980399*^9}, 3.793462004628837*^9, {3.7934620364212713`*^9, 
   3.79346203990898*^9}, {3.7934624225659227`*^9, 3.7934624372262497`*^9}, {
   3.79346305953295*^9, 3.793463072999475*^9}, {3.793463614556497*^9, 
   3.793463639026314*^9}, {3.793463688190838*^9, 3.793463699529416*^9}, {
   3.793469043599822*^9, 3.7934690446542673`*^9}, {3.7935384674227543`*^9, 
   3.7935384923379917`*^9}, {3.7936321932785273`*^9, 3.793632194119083*^9}, {
   3.7937063246374207`*^9, 3.793706337665127*^9}, {3.7937092488406467`*^9, 
   3.793709262902858*^9}, {3.793717894896758*^9, 3.793717894962476*^9}},
 CellLabel->
  "In[1395]:=",ExpressionUUID->"45c50cc2-107f-4554-8dd0-f35e91269e4a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEl3k8lO8X96WSLBWpkJKtbCH7fo5tMLaxDCUthBBRESVLm9AiEmUpSRKS
hKRNoWTPngpRM2PfZ2zpuZ/X63m+v/lnXp/XOffZruu+r/cl5uZv58HOxsbG
t5qN7f/+93IotR81+KTP9v9+6/O7R0k+WfD/9bMV3MeEfYr/0xHyD2VW+VT9
p+kG45zz3m3/6VTL2yHT3r//07O2XoUT3jP/6cw2W8tx71X4//XbnkMny0w2
/afXrJk5U5Ei+p/W/9y83qTyf/r0laePvgz/T09dfOHlvX3Hf/rwKr/Ek/7/
03qr+4Yv8Yn9p5kcn1KeUMX/0/xHi/8Me/9P7/6cqaQQ/j/tfiXiU1H2/3Tr
Gq2p16z/6ULOfPPGuxL/6XqvlMQNBf/T9JroXruP/9PbYzyCOof+p6+tFX3Q
pyP5n87x5h0Rp0iiRrSTbqCiun7ll0V1D3dJzF2az1EeLtLvkRk6/zhEEmOe
umU2NQzoL8R01Q9ek8Qi83efvkethM1Dn7bIP5DE3+1bb2flCoMyucTteIkk
Sj/JUys5vhuscx8+LfwiicIbIvrc1HTBmythbuqnJAYY8HWOBJnB5nSlzpFp
SST7HfxqG+AAVYpNJbS1Uqi/wWAqmXkITnz0S+wTlcLDk2nU9PKjsJ3Kc6pb
TQpz4449vPonAOroubZtFlI4dYBpst0gGELOmis1ukqhXO4dco9QBEjxMtbV
BEuhZ85dr0TzS9ByP2r0w3UpPGK0ZGA8EAMRylL1rx9K4YsWWpTrnpsgX12Z
W/JKCqX8z47G0W7BNye3mGdNUnh+dfJHB/47EDXE5vXkjxQafpYXfVqcBiph
90kPF6VwLwe9yJmWAX3r9aXS+XYi/y+zdS75D0FbLbT/pt5OzCtQ+xz96wnQ
Pwt9iLXfiUwD3tpyq6eQ6Fx2/5L3Tgyxb0nhCS6EsYhZl5DbO/GFhf5BZbdi
SOVP1DmZtxPpq10k9oaWgtkjZWHfDzvRxaHp2UhuGTys9e88NLoTb2l8fF5m
/hYoB9aV7lu5C1UStPbtevkelsfzE+2FdmF5yteZ8q0fYO+mIVtTk12o7nu8
prC0EngOu9crpO9C5xG2jkzLL/Bqij1P+sUudNGWqZaoqgXPyw9ixL/sQgtf
t5VgWA8VuT2kzbO7sJkrKVzRtgmCZvd++GspjQnL/XkfvrVAT6xVaf2SNHpb
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
Kfwf4d5rUg==
       "]]},
     Annotation[#, "Charting`Private`Tag$82624#1"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxEl3c81e8b/6WMjDJKEpUiyczKvi57HePYHCQhSklDVCJJUYmGkJRRhFRW
FFJ2Zhkde++RdY4R+p3f4/H7fT/+8Xg+7vN+3/f1el33+7ouQRdvczd6Ojq6
c1vo6P7v/15G6dZTGpXqdP/vb3tmx7Tu6RT4//x+E+sZvtO5/+NA8WTRLafL
/8ejGn+YVzxb/sfPCU/9FjyH/scUoseHWc/F/3FSC5Hwx3ML/n8u7jl+oUBn
5//YSerGIzbv/5guKD7bOeY/1hRsn2ee/I8rT5pftIvk+R83jWlfWu3Y9T8e
mBf1VT3P9z++paUfHRn7Hws9cc8f+v4fu8snU+/v3PM/nrzCf6X783+8uLbN
7waDwP+YiWnRvzRu3/9Yvappu07Zf+x7593rmsn/eP5Wjofn3v3/Y+ctZ59c
8P6P1Rj6JkM4Bf/Htm4NClXC//GliqKbW5X/48zbsbsiXP5jPkYLrWc5/zGV
sTLurdWB/zHXqdzhSc//WKIqSVryxn/seiewMvvNf9zMpDT/Zek/njklorbB
evB/zFK98y7u/481784LVOj/xx+YMw0aYv/jOo+4JxxZ//Fo9d1e8+//8d4w
t8u/J/5j5XGL0t3//mMrA01WB26h//H9rfsS+1T+4zRP9qkDZkJomyi/y4Qk
A2U1fxXcXIXQTX9cZ6zmPPSITtxM9RPCU2u1TpPRd2E1jFw3fl8It1x70+lw
MAZ4Jip3iScKocvTL2/dMpJBxjDP5VyeEN5cnrNercoEk/Tkdx9qhHDztL/a
8Ksc8GR5tDzfLYTl+oSl1WuFwPNC+vfUghB+mP0bt1+1FMqlGvNGtgojb2uR
yhRjOey1YrvYIS+M3PT0Zaun6qB2NJ3YYiSMnaaOthz+TeB31UC64YQwTu9o
3VSU/AuE2ce2VV8Rxj77SS2NmBb49TJ0+tsDYdQwqOE/6NQGgTLCdV+ShfGo
U5fkn7+/QbyiLD2vUBhbvoTw6Vxph3Ybl7D3jcKIrw7/3traAaETdB5vh4Vx
87aOxqu7u0A24KVu8l9hrOi62EvQ74a+7erCLzgPoTrTobYPrj2gLH9tIFLt
EB53+nXKT7EPRqt2fwu3OIQU5Ra9hOw+eGJf8DLE8xDGbJ3L4jncDzOBFAe/
p4eQUE3cx848AMk/vH8fnz6E1ZunfrhlDgKbs2ud5AsR9AreS/rYNgKF8/QZ
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
jmHmtTOvVfGgD4taNT8Zsvzr5wreq+LHN+Nb/PaQgfftzCnGzzQ9dttxd+4n
w03y9h6LclX0Th52OiZOhgmmo5aJDaro8TJLZVyVDBbHzH/MkFVxqOjm2Alz
MhS5X0TVQVWU/nTm70EvMghHP8kPm1bFCVJSeUkYGSIq8sR/L6liguypjuZ0
MiwttiUJ0athd9aCPXsjGZyFlnkvsKnha3r66/uoZJC9pczALqiG62l7mH8Y
tUOwSW3MITE19DzZFrvFvx2adjuIo7waLskf+Cia1g7nPgRYXDRQQ1K0UeQr
1g5I6y5NbPdRwy0NgXsJQx2wlEaUX7imhhMlnSEZAp2ge2mgmi1UDVd0s3jl
bDthkGXLLMSpIeW69EZkUyfsVdRTf/NdDYcETFfv1nfB2c3kn1/r1FB+6JKK
FK0+FTV4uLW3qWHSM7fFMmI32LmF32ebVMMDubfTMtq74cmj+o4L3OoYfLyi
iLDYAyzTFlfAVR2ltMNPnUnvA7uCIRa7c+roNfr1WuivPki7dTnhgp863qxS
9eL72wc6fM8qXt9XR9lBH55sWr0K0uvgZstTx/EjFb3flvuBkuj8gcwAyBjs
E5V5ahC0z85pzW8HTP/GILr2bBAeKQb/ZuUDjLgnHNNVPQjSjckb6pKAFyMa
S63Fh+D02gjhtTUgYcPP0G11CPqsz477pAK2pN66+Cp3BPxU2nRPZQMaZOXX
9CyMwPb9kOJQDOiqmWk3LTsK6uMcx/WaAXXlK3hD80ch/lpuC/8/oNX3I9wr
FWMg3rTee1IMEea9XZ5yTIKfZnZEjzTiXE1THjpNQnmuu5qdAiLBWY40kzkJ
pNjGOBMNxOtMVdJOxlMQ7pJopWSDqDTzfWE+bhrGFrVrt91CDNQSCNqlMAty
p1b8w+4ivo/RTGp3m4Wg9neHt0Qg0v+RWFKOnoVdJTyhKzGIp38mag8uz4Lu
nTEcykLcm1kqyVA5Bym77+cXdiAmlAkl+91cgNl76CbXh+hzycdLqohW/zYW
ud8PIw6SNhelLS1A84CjT8osjV/Emk+dX6TN21z791Fp590bSPiStQinqyob
Yv8injskpmk9vQj0mVLiDxk1MNJQa2PFiwIme4c6trJpoNXsVA5TFgViI2PC
Qjg1cGIjQGvyDwWG6I0V//FooLDKU6FUGSpIX9406s+vgX+4P90pukyF66N5
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
/5z7GTQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$82624#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Prevalence per 10K\"", TraditionalForm], 
     FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 2], 0.5], 
       FormBox["\"25.\"", TraditionalForm]}, {1, 
       FormBox["\"50.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 2], 1.5], 
       FormBox["\"75.\"", TraditionalForm]}, {2, 
       FormBox["\"100.\"", TraditionalForm]}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.5, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.5\"", 0.5`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.0\"", 1.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.5, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.5\"", 1.5`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"2.0\"", 2.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{1.7799999999999998`, {
       GrayLevel[0], 
       Opacity[1]}}, {1.4000000000000001`, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.4, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 2.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7934462183922*^9, 3.793446262635705*^9}, 
   3.793446322861353*^9, {3.793446417955284*^9, 3.793446493969702*^9}, {
   3.793446528220602*^9, 3.7934466811191187`*^9}, {3.793446762960642*^9, 
   3.793446783185998*^9}, 3.7934469583619823`*^9, {3.793447077418531*^9, 
   3.7934471077778254`*^9}, {3.7934471626694593`*^9, 3.793447176249228*^9}, {
   3.793447220612138*^9, 3.793447223788662*^9}, 3.7934473045057087`*^9, {
   3.7934475125474377`*^9, 3.793447526798827*^9}, 3.793461894648978*^9, 
   3.793461954811411*^9, {3.793462025917428*^9, 3.793462051362706*^9}, {
   3.7934624165193977`*^9, 3.793462437537854*^9}, {3.793462489379582*^9, 
   3.793462572943308*^9}, 3.793462608295115*^9, 3.793463073451934*^9, {
   3.7934636214960127`*^9, 3.793463699918407*^9}, {3.79346376440827*^9, 
   3.79346376988308*^9}, 3.793463805573547*^9, 3.793468776167488*^9, 
   3.793469064134989*^9, 3.7935292824597*^9, 3.793529766160926*^9, {
   3.793529807574965*^9, 3.793529926719837*^9}, {3.793530274687523*^9, 
   3.793530290049543*^9}, 3.7935321877990627`*^9, 3.793538248783348*^9, {
   3.793538468238106*^9, 3.793538492643279*^9}, 3.793617740986946*^9, 
   3.793628689537457*^9, 3.793631369930167*^9, 3.793632194756431*^9, 
   3.7936324368787403`*^9, 3.7936326178996077`*^9, 3.793632898644896*^9, 
   3.79363315193443*^9, 3.793633213827849*^9, 3.793634386041009*^9, 
   3.793634840987155*^9, 3.793635142962036*^9, 3.793640119639208*^9, 
   3.793640225245536*^9, {3.793706325887813*^9, 3.793706351722612*^9}, {
   3.7937092535948*^9, 3.793709263558992*^9}, 3.7937176840903788`*^9, {
   3.793717895726021*^9, 3.793717912666235*^9}, 3.793718184737295*^9, 
   3.793718276136427*^9, 3.793719547998176*^9, 3.7938014007323217`*^9, 
   3.793801481542742*^9, 3.793801577763555*^9, 3.793801644958044*^9, 
   3.7938017497031813`*^9, 3.7945070372581387`*^9, 3.7945075048658257`*^9, 
   3.794507550952498*^9, 3.7945076704242897`*^9, 3.794513120371544*^9, 
   3.794513186950197*^9, 3.794515040529749*^9, 3.794515324684389*^9, 
   3.7945686589362183`*^9, 3.79456902426402*^9, 3.794576703541501*^9, 
   3.794578160154456*^9, 3.794578447211854*^9, 3.794579377346352*^9, 
   3.7945795067006207`*^9, 3.7955138509517803`*^9, 3.7955138987882013`*^9, 
   3.795514555060783*^9, 3.7955157785252657`*^9, {3.795516181002338*^9, 
   3.7955161892221327`*^9}},
 CellLabel->
  "Out[1395]=",ExpressionUUID->"9bb7b8cc-d963-4f6b-8213-e9068f3ce22a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fignpibpsmoreICU", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"10", "*", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"npi", "[", "t", "]"}]}], "/.", "sol60bpsprevmoreICU"}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", 
        RowBox[{"Opacity", "[", "0", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.79344727493867*^9, 3.793447275672996*^9}, {
  3.7934625847549*^9, 3.793462585031742*^9}, {3.793463088769895*^9, 
  3.793463091558565*^9}, {3.793463731240335*^9, 3.7934637317780437`*^9}, {
  3.793463834924958*^9, 3.793463837569601*^9}},
 CellLabel->
  "In[1396]:=",ExpressionUUID->"88b779d0-70a2-4c9d-be0f-fc36223e7b24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpsnpimoreICU", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"figcritprevbpsmoreICU", ",", " ", "fignpibpsmoreICU"}], "}"}], 
    ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"PlotRange", "[", "figcritprevbpsmoreICU", "]"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "ar"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "imsz"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793446704447353*^9, 3.793446711536757*^9}, {
  3.793446744118206*^9, 3.793446750009528*^9}, {3.793446976069807*^9, 
  3.793446978955377*^9}, {3.793447262748226*^9, 3.7934472636613283`*^9}, {
  3.793461917634132*^9, 3.793461928547559*^9}, {3.793463093975984*^9, 
  3.793463097176322*^9}, {3.793463150716834*^9, 3.793463154325522*^9}, {
  3.793463735931305*^9, 3.793463762176955*^9}, {3.793632199378549*^9, 
  3.7936322023504744`*^9}, {3.793633179748782*^9, 3.793633182218555*^9}},
 CellLabel->
  "In[1397]:=",ExpressionUUID->"7fcad488-1f61-458c-acff-b3c831b1ac1f"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJxEl3k8lO8X96WSLBWpkJKtbCH7fo5tMLaxDCUthBBRESVLm9AiEmUpSRKS
hKRNoWTPngpRM2PfZ2zpuZ/X63m+v/lnXp/XOffZruu+r/cl5uZv58HOxsbG
t5qN7f/+93IotR81+KTP9v9+6/O7R0k+WfD/9bMV3MeEfYr/0xHyD2VW+VT9
p+kG45zz3m3/6VTL2yHT3r//07O2XoUT3jP/6cw2W8tx71X4//XbnkMny0w2
/afXrJk5U5Ei+p/W/9y83qTyf/r0laePvgz/T09dfOHlvX3Hf/rwKr/Ek/7/
03qr+4Yv8Yn9p5kcn1KeUMX/0/xHi/8Me/9P7/6cqaQQ/j/tfiXiU1H2/3Tr
Gq2p16z/6ULOfPPGuxL/6XqvlMQNBf/T9JroXruP/9PbYzyCOof+p6+tFX3Q
pyP5n87x5h0Rp0iiRrSTbqCiun7ll0V1D3dJzF2az1EeLtLvkRk6/zhEEmOe
umU2NQzoL8R01Q9ek8Qi83efvkethM1Dn7bIP5DE3+1bb2flCoMyucTteIkk
Sj/JUys5vhuscx8+LfwiicIbIvrc1HTBmythbuqnJAYY8HWOBJnB5nSlzpFp
SST7HfxqG+AAVYpNJbS1Uqi/wWAqmXkITnz0S+wTlcLDk2nU9PKjsJ3Kc6pb
TQpz4449vPonAOroubZtFlI4dYBpst0gGELOmis1ukqhXO4dco9QBEjxMtbV
BEuhZ85dr0TzS9ByP2r0w3UpPGK0ZGA8EAMRylL1rx9K4YsWWpTrnpsgX12Z
W/JKCqX8z47G0W7BNye3mGdNUnh+dfJHB/47EDXE5vXkjxQafpYXfVqcBiph
90kPF6VwLwe9yJmWAX3r9aXS+XYi/y+zdS75D0FbLbT/pt5OzCtQ+xz96wnQ
Pwt9iLXfiUwD3tpyq6eQ6Fx2/5L3Tgyxb0nhCS6EsYhZl5DbO/GFhf5BZbdi
SOVP1DmZtxPpq10k9oaWgtkjZWHfDzvRxaHp2UhuGTys9e88NLoTb2l8fF5m
/hYoB9aV7lu5C1UStPbtevkelsfzE+2FdmF5yteZ8q0fYO+mIVtTk12o7nu8
prC0EngOu9crpO9C5xG2jkzLL/Bqij1P+sUudNGWqZaoqgXPyw9ixL/sQgtf
t5VgWA8VuT2kzbO7sJkrKVzRtgmCZvd++GspjQnL/XkfvrVAT6xVaf2SNHpb
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
Kfwf4d5rUg==
        "]]},
      Annotation[#, "Charting`Private`Tag$82624#1"]& ], 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJxEl3c81e8b/6WMjDJKEpUiyczKvi57HePYHCQhSklDVCJJUYmGkJRRhFRW
FFJ2Zhkde++RdY4R+p3f4/H7fT/+8Xg+7vN+3/f1el33+7ouQRdvczd6Ojq6
c1vo6P7v/15G6dZTGpXqdP/vb3tmx7Tu6RT4//x+E+sZvtO5/+NA8WTRLafL
/8ejGn+YVzxb/sfPCU/9FjyH/scUoseHWc/F/3FSC5Hwx3ML/n8u7jl+oUBn
5//YSerGIzbv/5guKD7bOeY/1hRsn2ee/I8rT5pftIvk+R83jWlfWu3Y9T8e
mBf1VT3P9z++paUfHRn7Hws9cc8f+v4fu8snU+/v3PM/nrzCf6X783+8uLbN
7waDwP+YiWnRvzRu3/9Yvappu07Zf+x7593rmsn/eP5Wjofn3v3/Y+ctZ59c
8P6P1Rj6JkM4Bf/Htm4NClXC//GliqKbW5X/48zbsbsiXP5jPkYLrWc5/zGV
sTLurdWB/zHXqdzhSc//WKIqSVryxn/seiewMvvNf9zMpDT/Zek/njklorbB
evB/zFK98y7u/481784LVOj/xx+YMw0aYv/jOo+4JxxZ//Fo9d1e8+//8d4w
t8u/J/5j5XGL0t3//mMrA01WB26h//H9rfsS+1T+4zRP9qkDZkJomyi/y4Qk
A2U1fxXcXIXQTX9cZ6zmPPSITtxM9RPCU2u1TpPRd2E1jFw3fl8It1x70+lw
MAZ4Jip3iScKocvTL2/dMpJBxjDP5VyeEN5cnrNercoEk/Tkdx9qhHDztL/a
8Ksc8GR5tDzfLYTl+oSl1WuFwPNC+vfUghB+mP0bt1+1FMqlGvNGtgojb2uR
yhRjOey1YrvYIS+M3PT0Zaun6qB2NJ3YYiSMnaaOthz+TeB31UC64YQwTu9o
3VSU/AuE2ce2VV8Rxj77SS2NmBb49TJ0+tsDYdQwqOE/6NQGgTLCdV+ShfGo
U5fkn7+/QbyiLD2vUBhbvoTw6Vxph3Ybl7D3jcKIrw7/3traAaETdB5vh4Vx
87aOxqu7u0A24KVu8l9hrOi62EvQ74a+7erCLzgPoTrTobYPrj2gLH9tIFLt
EB53+nXKT7EPRqt2fwu3OIQU5Ra9hOw+eGJf8DLE8xDGbJ3L4jncDzOBFAe/
p4eQUE3cx848AMk/vH8fnz6E1ZunfrhlDgKbs2ud5AsR9AreS/rYNgKF8/QZ
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
jmHmtTOvVfGgD4taNT8Zsvzr5wreq+LHN+Nb/PaQgfftzCnGzzQ9dttxd+4n
w03y9h6LclX0Th52OiZOhgmmo5aJDaro8TJLZVyVDBbHzH/MkFVxqOjm2Alz
MhS5X0TVQVWU/nTm70EvMghHP8kPm1bFCVJSeUkYGSIq8sR/L6liguypjuZ0
MiwttiUJ0athd9aCPXsjGZyFlnkvsKnha3r66/uoZJC9pczALqiG62l7mH8Y
tUOwSW3MITE19DzZFrvFvx2adjuIo7waLskf+Cia1g7nPgRYXDRQQ1K0UeQr
1g5I6y5NbPdRwy0NgXsJQx2wlEaUX7imhhMlnSEZAp2ge2mgmi1UDVd0s3jl
bDthkGXLLMSpIeW69EZkUyfsVdRTf/NdDYcETFfv1nfB2c3kn1/r1FB+6JKK
FK0+FTV4uLW3qWHSM7fFMmI32LmF32ebVMMDubfTMtq74cmj+o4L3OoYfLyi
iLDYAyzTFlfAVR2ltMNPnUnvA7uCIRa7c+roNfr1WuivPki7dTnhgp863qxS
9eL72wc6fM8qXt9XR9lBH55sWr0K0uvgZstTx/EjFb3flvuBkuj8gcwAyBjs
E5V5ahC0z85pzW8HTP/GILr2bBAeKQb/ZuUDjLgnHNNVPQjSjckb6pKAFyMa
S63Fh+D02gjhtTUgYcPP0G11CPqsz477pAK2pN66+Cp3BPxU2nRPZQMaZOXX
9CyMwPb9kOJQDOiqmWk3LTsK6uMcx/WaAXXlK3hD80ch/lpuC/8/oNX3I9wr
FWMg3rTee1IMEea9XZ5yTIKfZnZEjzTiXE1THjpNQnmuu5qdAiLBWY40kzkJ
pNjGOBMNxOtMVdJOxlMQ7pJopWSDqDTzfWE+bhrGFrVrt91CDNQSCNqlMAty
p1b8w+4ivo/RTGp3m4Wg9neHt0Qg0v+RWFKOnoVdJTyhKzGIp38mag8uz4Lu
nTEcykLcm1kqyVA5Bym77+cXdiAmlAkl+91cgNl76CbXh+hzycdLqohW/zYW
ud8PIw6SNhelLS1A84CjT8osjV/Emk+dX6TN21z791Fp590bSPiStQinqyob
Yv8injskpmk9vQj0mVLiDxk1MNJQa2PFiwIme4c6trJpoNXsVA5TFgViI2PC
Qjg1cGIjQGvyDwWG6I0V//FooLDKU6FUGSpIX9406s+vgX+4P90pukyF66N5
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
/5z7GTQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$82624#2"]& ]}, {}}, {
    GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, 
       {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{308, 376, 214, 275, 106, 145, 55, 83, 9, 54, 8, 167, 
           105, 397}}], 
          PolygonBox[{{360, 206, 384, 268, 345, 77, 101, 34, 120, 76, 166, 
           100, 307, 225, 388, 284}}], 
          PolygonBox[{{386, 382, 236, 294, 172, 218, 112, 150, 64, 91, 19, 63,
            18, 235, 171, 304, 217}, {173, 211, 385, 273, 350, 94, 134, 24, 
           68, 23, 67, 22, 314, 237, 391, 295, 368}}], 
          PolygonBox[{{358, 381, 234, 293, 170, 216, 109, 147, 59, 87, 14, 
           108, 58, 160, 86, 306, 223, 387, 282}}], 
          PolygonBox[{{164, 398, 311, 380, 232, 291, 165, 213, 97, 137, 28, 
           72, 27, 117, 71, 310, 231, 390, 290, 366}}]}]}, {}, {}}, {{}, {}, 
       TagBox[
        {Opacity[0], LineBox[CompressedData["
1:eJwl1Xecz3UcB/CznU3JHnfo3NmbtOxITtRlVfbmUiqJZN5ZpzJDAw3tUChR
GaWhlFlWi/agQYU834/+eP5e7/fn+73f/b6f9+d3l9Q/s9voXAkJCQ96ibzc
y69yDffSlUbkJg95yUd+rnDvb3ItE7iexnSJ92Kbeh5DKcCV1k7KdUykG72t
FWO3+jGakK7PzXb1WFmLB9TDZCWm85V+vGzMXIbpn6YgTUmkO83i2RjORe7b
L8fJesxmtT5TVud7dSGuUp+Sr3AfN9CcwhThatd/l68yiRtpEXtlPQ871A8x
gr76izmgfoaitNL/IddzuzqVbO7XD5blmcoxfUOZIR/nMkZSjJtoyXxGcZBn
qeH+H2J/ZXPmUVzfWv4pNzCZHjFrStDGtb/kRqbQM2Yb87Sel3fUCxhNSdpa
Oy1fYyq96BO/h0/UK2LWMV99Pt5VL4wZqCvzdZwt2YRMdT9Zmil8pq8vn5M/
UirmEbOLsxJ7zyJu43Oe51L3/xSzki3irMSe69vJM/J1psVnjL2Pc2E9PzvV
ixlDadpb+1tuYjo3B2sl+FS9MvYxzoO+AO+pl8Sc1VX4JuZJf/UlHFLfIxsw
hxfic8sUsvg5Zhr3xgwoE3tLWWZwS3C9JJPZo79L1mFVzF0mcSKeNc6huiDv
qx/mDsrRwdo/8g2yuDWelQzriXygXspYynONtX/lZrIZoq/AF3Ge4+fVpdir
vlvWZRZPxBmRyczgW31T2UHeSYV4byoyM+bOPp6kmvu+kxNkM3LoGOdcFuJD
9bJ4firR0dpZuYVZsed0ojJVqBq9e87JN5nNAK6Ns2+9MLvUy+MZ4pq+DIfV
L5IU9+rPy7diL9VpzIxZ6ofKikzjS30jOVA+RWfGkcwgrqOn60XiO85HsR+y
No+oR8qqHI/zwkB1WY6oX4q9iffU/yffZi6D6UJ1asR3gBRqkkoatahNHepS
j/o0iM/k/eIP/laREzMmnV7WivKx+lHGxzPoy3FU/TJj1DX5RT1Jtsz1//+P
hvoLPbqrsQ==
          "]]},
        Annotation[#, "Charting`Private`Tag$82766#1"]& ]}}], {}}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Prevalence per 10K\"", TraditionalForm], 
     FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 2], 0.5], 
       FormBox["\"25.\"", TraditionalForm]}, {1, 
       FormBox["\"50.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 2], 1.5], 
       FormBox["\"75.\"", TraditionalForm]}, {2, 
       FormBox["\"100.\"", TraditionalForm]}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.5, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.5\"", 0.5`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.0\"", 1.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.5, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.5\"", 1.5`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"2.0\"", 2.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{1.7799999999999998`, {
       GrayLevel[0], 
       Opacity[1]}}, {1.4000000000000001`, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.4, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0., 2.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793446723677157*^9, 3.793446785087015*^9}, 
   3.7934469801090403`*^9, 3.793447227208099*^9, {3.793447264011318*^9, 
   3.793447277456396*^9}, 3.793447311102808*^9, {3.793447516154393*^9, 
   3.793447528874736*^9}, {3.7934619226037683`*^9, 3.7934619288630877`*^9}, 
   3.793461961164349*^9, 3.7934622036035557`*^9, 3.793462451229333*^9, {
   3.793462489491652*^9, 3.793462608413128*^9}, 3.7934626961006603`*^9, 
   3.793463101949006*^9, 3.793463162163579*^9, 3.793463772110477*^9, 
   3.79346380569412*^9, 3.793463838724552*^9, 3.79346877873803*^9, 
   3.7934690642088823`*^9, 3.7935292825425787`*^9, 3.793529766232078*^9, {
   3.793529807644423*^9, 3.793529926797653*^9}, {3.793530274772929*^9, 
   3.793530290118945*^9}, 3.793532190475625*^9, 3.793538248937784*^9, 
   3.7935384964154997`*^9, 3.793617741130563*^9, 3.793628689680678*^9, 
   3.793631370071877*^9, 3.793632202645069*^9, 3.7936324369778*^9, 
   3.7936326180329*^9, 3.793632898809112*^9, 3.793633152046958*^9, 
   3.7936331825457897`*^9, 3.793633213913981*^9, 3.793634386173511*^9, 
   3.793634841074868*^9, 3.793635143070656*^9, 3.793640119693592*^9, 
   3.793640225319536*^9, {3.793706340549452*^9, 3.7937063536703987`*^9}, 
   3.7937092665764837`*^9, 3.793717684229246*^9, {3.7937178980447607`*^9, 
   3.793717912785774*^9}, 3.793718184939293*^9, 3.793718276303259*^9, 
   3.793719548121491*^9, 3.7938014008285*^9, 3.7938014816923018`*^9, 
   3.793801577927144*^9, 3.7938016451029663`*^9, 3.793801749868079*^9, 
   3.794507037378613*^9, 3.794507504918057*^9, 3.7945075510037117`*^9, 
   3.794507670477558*^9, 3.794513120541926*^9, 3.794513187168954*^9, 
   3.794515040690503*^9, 3.794515324813582*^9, 3.7945686590006323`*^9, 
   3.794569024417222*^9, 3.79457670375518*^9, 3.7945781603354397`*^9, 
   3.79457844739612*^9, 3.794579377446313*^9, 3.794579506760495*^9, 
   3.795513851142826*^9, 3.795513898912198*^9, 3.795514555221827*^9, 
   3.795515778659041*^9, {3.795516181122192*^9, 3.7955161893529673`*^9}},
 CellLabel->
  "Out[1397]=",ExpressionUUID->"e242e18b-d3c1-43d0-bce8-fb56d3aa8166"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpsnpimoreICUimm", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60bpsprevmoreICU"}], "]"}],
      "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"yearticks", ",", " ", "None"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "22"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1.5"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"baseline", "+", "amplitude"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793469988806632*^9, 3.7934700082683477`*^9}, {
   3.793470070376527*^9, 3.7934700910573807`*^9}, {3.793470165412545*^9, 
   3.7934701921635637`*^9}, {3.793470350690662*^9, 3.793470351572834*^9}, {
   3.793470547872568*^9, 3.793470549769924*^9}, {3.79353851898458*^9, 
   3.79353854157791*^9}, 3.793538580993394*^9, {3.793633175269741*^9, 
   3.793633176040575*^9}, {3.793634776414893*^9, 3.7936347926643343`*^9}, {
   3.793709091581172*^9, 3.793709096409807*^9}},
 CellLabel->
  "In[1398]:=",ExpressionUUID->"d578bce6-46c9-47a5-a0e4-abe3b4cc03b1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxF13k0ld8XMHARlVRIhUpUKjJnDnubZ655HkNUSpJERSWZkopCKYQkZZYx
yjzENVyuIS5JMiVkSnqfd633/f7uP3d91t5nn33OPc9d5+FzvmDsSk9HRyfN
QEf3f7+HmMQop5XrlOj+32dHVt+0xplU+P/O3rD1LPeZgv8cKPRSYOOZmv/8
Xfnn5hWPrv/8VC/Wb95j9D//NnLPmfVY+M8pXUZ6Pz024v93xaCDd7H6rv+8
adPC1aqEA/9ZqZ68Q736f/a9+zatcfJ/nrud7+7Bw/ufHTd6xnhf+J8VGWmT
wWx8/3mRqS7htdnB/8x+uuDbpMf/LFyfIiZy4392uRtYl5f+P3dukpsrW/qf
czZnabfGH/rPLe4JMazv/ufvDaFDxp/+Z54w18s9E/9z5JYDybSTh/9zhse2
qYMkwjTO2hvf+aC68Y+0qwth94Sb677KMCgwcfOVH2EWq5WEMANYDaO2/Igk
7HXktBrNDHZP1O0RSiZcnGwWFmMLEjqFzucL/2888vmHfCfwYH64PPeFcNXJ
KqZKd9idKNYzNU9YhWqTVngOakTbCse28CPdrMTFBBcvuPjJM4Z2gB+D6nIl
lq57A48Zy6U+KSL+y4lt/JUPNH/PNOrSJeI9JvrxWb7g568t1upExHkZE/Xk
rwD/tvHtDVcId/bPnKVegY4XIdMf7xH536bCre74QaAEf0vZS8KphxrfwVUQ
qq3OLCwhbHXNWZ7JH0Im6NxffyNcxPRoLT8A5KUCRqIVj2AQ+cD9q9cD4Xs9
18dwkyPEfJ7drcpBEGNd/CLY4whWbbvccLEhCGYCf9v6xRL56sp6g0M34WXT
hR6HacIvr79/IRkMLI4uLSKJRxG7zO+9PBsGJXP0b47lH8WqQ1sD7hwIB7c7
yWEHG49ikAXNgdQdDlWZgxq7fx9FurXR2hy9SLj82/LjX71jSPfa5ouo3X0Y
DNcvalk7hlVnmK2vbHkEEfunYurYBZDuiS5117VHIJsTfqnqmADiee8h+9lH
8JBSL1ZgSrgKjDcMxoAmr8qbp1mE866c+vf5MeQUSiedsRXEqnUOruyNT6GW
Xm/btJcgYius2oQ/hT5DJ/8Ld4h4gWNOMdsz2DgRYerzThBpZ8S/3+dPBC6Z
5I+LnwSRrsUnnC0vEUSCi0Su9hA+M6RohM/Bgmd48w264xjkYMbE5fwCzp1d
vEy36zii8lHxjN8vIKh469dbAseRt1Gp8qZ6EsQy8pEYlY6j4yEb2T0PkiDT
WLrirvFxnB1eynUaSILKF7qCzKePI82j84z5nyTomnJ8EhlwHOma+zNiuZNh
PSTi4oNUYr6qV3SvrJJhZ1fS4M6S40hKuddgcTUZjvEV6T7+TIzn0FJkjU8G
4zIa/9NFIr6aPHuamgxpP6X6UrWEUKzPXuqVWQroWdJUiqeEkHU5XptJ/SU4
pf3Olt8gjGLsI4PPnV6C7xzz/opdwhi9lV/s2/WXkBQptfRRSRjJB1UMfAtf
wnxV+JvmaGGin8t8j3lTIUFAimNIUgTpNDlNCsZSIdtX56aTtgjOWuh9Xv2b
CjXVDjNf7USQV13HbYYjDabtwhvGQ0RQTOJn+5ByGuDDoWtzVBHMWbjeQxeX
Bt9Xw74xXhdF8krr1iWpdIjyNxyDR6I4OyF0Y1k7HSRXOb5ffS2KXtjnnmGX
DkErL8anKaJYdfbdEc7gdNi21vf7zB4x5H3dFGr+OR1oZYqLdw+KIWvrBMPk
YDoUBCQtpgqLYZU1tUt6Nh2s/7guDaqKIUnLoGCZ7RW8Wp1dNvYSQ5zmalQx
fgX+pSYrFwIIqx9WyXZ6BQb+RSuRIWIYdHbauN/rFSysBKzWPRPDpD0c+3yj
XgGuMK3JNxLzKb1eJNe9gr6lff8OHhTHIKaV2u9CGfD2feA/EBZH2t53D8pl
MyDoysg/W1lxjJavl3JQy4CjS6/onhiII8qe0GOzyQCfRQn6rQHiSBcKuYoh
GaBZFEt/LISImy3OP47OAG7fZXr1B0S9ObMDNQkZUPW7giHwlTiSam+PPXuX
AY8KeTc+yxPH2YvRX7SLM8Dt8u2NJRXiWDVbeenzxwzY9luLcb5THJOix2Rt
ujKAVvCGkXWIyC888t7tSwYU+GxnEp4QR7KY/AXdsQy4K3mRSee3OOZM137N
ns8A64VOptN0EshaxTIvueU1CBdIbwreKoFBnhdKLvG8Bjqf+E3JuyXQi5u7
KuDEa0ift9/cLySBOSOuKvvsXsPV/I+bl2UkkM7Kd1vzxdegd+nwll2qxPgv
Mwe8Ql7D/NyPLYZWEpgk3ZhXlv0acM5na/UdCaKfMgt6hkxY0dcUyIqWwOjG
X/K5ezIh7zWXZuxTCRSLGnweKJQJh5w+3DqdS+SHqPXfMc8EJvKm1a1fiH5k
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
x6hF2ijZaPDlhEMbBJe+iFn9qI2zm/SHuO60wXWh12cj6rWJ+916kGdcG/g+
z1PZ91kbQ69+MafPagOPW7WzilRt5G0Np/3qbAPnhdb61i/aGClG+6g/3ga2
btTnDl+1MXX5s3vzchuYUYcvz45rI3czm8pDOjIY6Ezq3ZzRxlXHep+GjWTQ
Kl84xL6gjZmt9U6MW8igLLK+mrKijZvN3b00tpFBkp3tdc1GHdx9doK3ZRcZ
RIK5g8yYddDX9N1fFm4yHF08ZDG2QwcTkh456/CQgbtPmnHzXh18d8Xfr/AI
GehSbJ10xXVwO5+Kl5gMGVZ3uskOSOugcdyWSpmTZJi/c2GHp4IO0uWuR0sC
GcY8blVEaerg3NeBWRZNMrSIZ3B12OlgsVuGoLg5GZ58nG+3DNdB6syoznFv
MgRvKHzfdl8HW+2Tsk9dJoOXsm+iRqwOHlbO14/2I9b3cdldMkkHOUYHI+pu
kGG56u+/HUU6GDfTVvI6nAyjdJXfQsp0kJPxTHjIPTKQMaj5b5UO+scfcLWM
JsPrKvonk806+GGcv7A/lgzWVZtE6od10LlOQtUliQwadI07lb7roOm5K8NT
KWSQwPCVgikdzPS5FXk2jQxbq1hqU5Z00MtY7J5uJhnKK9lsb2zTRevjVR3x
+WTYX7k3XEpOF6OlnTIjasjA/G/gQpaSLjJ5HtAKriPDotJzs0Nqusj5rGXG
p4EMrR94+dgMddE0q6VFqYUMNz7wF0+56KLjkszPK51kOLM+lnjqDDG+P3r1
BIUM5koZt/su6CL7vYuz491kEP0gaNjgr4tzaLlZqY8MtArRsZfRuihtQq18
QiP2++9sM/djXQy6lfx3/wgZihXzch881cWDbswLiV/J8KBC8npgui6O9FBc
IsbIoFIhx2FTTszPLPSLZ4o4H39XV9o/6mLqmQMBl6eJ86BYPqRVr4vhqj4+
dTNkmCtXeiPdoYtCwvXbLX+R4WW5qgr7OJFPf+eAwiIZBN+k6B6f1sUCubmL
pktkyInfYKY2p4szmXf93ZfJIB3qaG+3pIsaf1W0/VaI/fStPO27potau5mn
b68S/bjyXLy/QQ95FSp9Iv6QocHkun8GE2En/70pa8T5Vxm4/XGrHtbM2O/n
+0eGLrGT9/pY9RAF2GeebGgH6wMJj+d36WG4+wPxzRvbgbZt5QXLXiL/iibp
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
WP0HjpglwPtQhvD/Ab4AyRg=
       "]]},
     Annotation[#, "Charting`Private`Tag$82908#1"]& ]}, {}},
  AspectRatio->1.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 22),
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
    None, None}},
  FrameTicks->{{Automatic, {}}, {{{0, 
       FormBox[
        RotationBox["\"2020\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"2021\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"2022\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox["\"\"", TraditionalForm]}}, {}}},
  GridLines->{{}, {{0.5, {
       GrayLevel[0], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.793470009367878*^9, {3.7934700711592827`*^9, 3.79347009137438*^9}, {
   3.7934701769400053`*^9, 3.79347019249289*^9}, 3.793470351817913*^9, 
   3.7934705500653753`*^9, 3.793529282773035*^9, 3.7935297664115343`*^9, {
   3.793529807826633*^9, 3.793529927005988*^9}, {3.793530274953706*^9, 
   3.79353029030054*^9}, 3.793532192517605*^9, 3.793538249239847*^9, {
   3.793538525988431*^9, 3.793538541851001*^9}, 3.79353858152817*^9, 
   3.793617741415947*^9, 3.793628690048635*^9, 3.793631370541898*^9, 
   3.793632437225952*^9, 3.793632618513098*^9, 3.793632899134734*^9, {
   3.793633152301569*^9, 3.7936331767562304`*^9}, 3.7936332141557302`*^9, 
   3.793634386427669*^9, {3.7936347790261183`*^9, 3.7936347929702597`*^9}, 
   3.7936348413333063`*^9, 3.793635143354506*^9, 3.793640119993409*^9, 
   3.793640225647064*^9, 3.793709275555098*^9, 3.793717684605297*^9, 
   3.793717913129421*^9, 3.793718185327454*^9, 3.7937182767078667`*^9, 
   3.7937195484620533`*^9, 3.793801401114151*^9, 3.7938014820449343`*^9, 
   3.7938015782987757`*^9, 3.7938016454567223`*^9, 3.793801750321369*^9, 
   3.7945070377107477`*^9, 3.7945075051737337`*^9, 3.794507551266214*^9, 
   3.794507670778119*^9, 3.794513121074642*^9, 3.7945131876139917`*^9, 
   3.7945150412367697`*^9, 3.794515325140779*^9, 3.794568659264061*^9, 
   3.794569024805434*^9, 3.7945767041579742`*^9, 3.794578160686804*^9, 
   3.794578447811783*^9, 3.7945793778475924`*^9, 3.794579507074839*^9, 
   3.79551385124924*^9, 3.795513898995265*^9, 3.795514555349874*^9, 
   3.795515778768252*^9, {3.795516181227989*^9, 3.795516189456833*^9}},
 CellLabel->
  "Out[1398]=",ExpressionUUID->"8684d4d0-5062-47af-b4c8-78d1a40a1274"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Plot break-pump strategy, without seasonality, and double the ICU capacity: \
\>", "Subtitle",
 CellChangeTimes->{{3.793445775253668*^9, 3.793445791735546*^9}, {
   3.793461803106874*^9, 3.79346180437956*^9}, {3.79346302353588*^9, 
   3.79346303274085*^9}, {3.7934635851245403`*^9, 3.7934635913014708`*^9}, {
   3.793468488723399*^9, 3.79346848882721*^9}, 
   3.7955164564968987`*^9},ExpressionUUID->"7c18f829-e1fd-4396-91ab-\
eac6eed125b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sf", " ", "=", " ", "0.02"}], ";"}]], "Input",
 CellChangeTimes->{{3.793446122258461*^9, 3.793446135642728*^9}, {
  3.7934618271568108`*^9, 3.79346186369106*^9}, {3.793462009540318*^9, 
  3.793462018321295*^9}},
 CellLabel->
  "In[1399]:=",ExpressionUUID->"991a87e4-6c35-4a77-8d03-bf342fa19f2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpnsmoreICUtemp", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpnsprevmoreICU"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", "sf", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpnsprevmoreICU"}], 
        "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "\"\<Jan\\n2020\>\""}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"31", "+", "28", "+", "31"}], ")"}], "/", "7"}], ",", 
           " ", "\"\<Apr\>\""}], "}"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30"}], 
             ")"}], "/", "7"}], ",", " ", "\"\<July\>\""}], "}"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
             "31", "+", "28", "+", "31", "+", "30", "+", "31", "+", "30", "+",
               "31", "+", "31", "+", "30"}], ")"}], "/", "7"}], ",", " ", 
           "\"\<Oct\>\""}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"52", ",", " ", "\"\<Jan\\n2021\>\""}], "}"}]}], "}"}], ",",
        "Automatic"}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Critical\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "imsz"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "line1char", ",", " ", "line2char", ",", " ", "line3char", ",", " ", 
       "line4char"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793440555957224*^9, 3.793440562287552*^9}, {
   3.7934406031532516`*^9, 3.7934406035891333`*^9}, {3.7934406435598097`*^9, 
   3.79344064625572*^9}, 3.79344092383211*^9, 3.793441084303793*^9, {
   3.793441245349256*^9, 3.793441270066451*^9}, 3.7934414366245537`*^9, 
   3.793441467463295*^9, {3.793446097780415*^9, 3.793446128296608*^9}, {
   3.793446947620717*^9, 3.7934469478618402`*^9}, {3.793447057506488*^9, 
   3.7934470620245113`*^9}, {3.7934471042355547`*^9, 
   3.7934471058731747`*^9}, {3.793447135977392*^9, 3.7934471395087557`*^9}, {
   3.793461810968658*^9, 3.793461812420525*^9}, {3.79346187541588*^9, 
   3.793461875705258*^9}, 3.79346199728846*^9, {3.793462345482862*^9, 
   3.793462347731813*^9}, {3.793463036835421*^9, 3.793463065940053*^9}, {
   3.7934635956391993`*^9, 3.793463604800393*^9}, {3.7934636625210752`*^9, 
   3.793463664042399*^9}, {3.793468494355913*^9, 3.793468500554759*^9}, {
   3.793529941446969*^9, 3.7935299417330112`*^9}},
 CellLabel->
  "In[1400]:=",ExpressionUUID->"88eac4b8-e830-4e3e-b137-a27439758ad9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
iyw4Gmlqbv/TEm3C1z/2I/hl/6vlys2/ifqciUh9S2hTjtb1BjRL5D56eeDs
JRaoYdzfilFL/Hfob050FAu2Rlr1Kkxb4nG9Yy2j4SxY+WpV412WJbb1Ka95
SfR/9tL7IpEFS9QROeXHHUTEA9eSkrissCFv+v1rLyKeCPvg5XxWWPIiY+cy
FyKel2tdzgtY4VJ1wlinHQsKlz6TGOuskH1f66mBIQvSIE02QNgK29y0Tc12
ETwXsUfgzxYrPOf2SndOggUBLzfN7JO0wu74z8KH17LAeelbV7ucFa5Mr35x
aZEJxpBZZ6Zshf9ShwVODDNhy8vNcRraVmjMP9TWUscE/qWfxx4aWOGNg7JX
TIn6Mw1u7pE0tsL0TvOe8kSCF+rEt6+1s8Lnd4dnwvcz4Xyd9LNRDyv0PP/X
b4DKAL9Fau4RPyuMzR4d7GlmwF6DwujuY1aoMR+ssK6QASp18nYtZ62Qo+fH
FjMvBvTVqlDzkqyw/KnR6KfuWXi3MNkmet0KV8UNql2omoVn+uWPk7Ot8MGO
+11FybOQXKseHnGfWGfs0Usg+MOwVnvDgRdWmJ920NWxeAbyXhgZrqMTerPF
lyde0yBffNdKYYzIz7mPJ5fjNJRlcu4xnrZCipzkjIHINLwIfukdPG+FHz6+
uOrTNgUdqrpXu9dYo1ZV03lBlSngvafWdVfbGgfV6Te/TUxAQmry7+cG1vhd
fP5SPPG9WRc1OdxhZI0TNeOML04TsNWtZGGZrTXOPePnCHo9Dpoi8pL+7taY
v2lPyfc7Y/BieaziRW9rTNfrXaPlMgaGTJpGboA1xuYHrXgqNAa2X+6Zfwy2
xuN9Eq22KaPgfXX70V3x1ujUybGVlDEC42GRZ6yTrPGQnOEuXpcROOXXG+mZ
bo0XqKJNxhIjEGmWm5pxyxpTFy9MOz4ZhmWa8zll+YQ/8s/5d50fhgSpA/db
H1ijeoxMX4HlMNzgFKn+98QaFwvKknzpQ7B18szrDdXWKDyQ+Liuegjyezrb
lOqsccXIYfrzhCEoe57W49ZijfYr7OKf7R4CzaIZWsh7axSL8nZ8QcyrL26Q
p5I/W+PnNNWh//s9o/X0Gp6Gn9ZodUShaOIOHew9jgn8+m2NY7ZmJs8j6dBJ
/rCJSbXGgr+fRrQPE/M1SUl89ag1St7KVvc3okO/SsIOuSlr9E8YeGYrSwef
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
       "]]},
     Annotation[#, "Charting`Private`Tag$83029#1"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
xy9DgVlnvOfB5tIdy6OJ5vhCNEm7OH0etu8JOHo71RyNYm5WHm+fh/afzmde
ZZgj11oY211uGqSdNwrpyDbHGwk1geJEP++6W/4+Y545cqZuTbYLoYFk9Y6c
fa/M8YO7VMH6FzSY9F9XSnljjnrPVwPP/qBBgeB49bVyc3x4pn+au4MG5741
dOV8MMfd61jlZPtooH6mbLr+izmyn524NNZF1HOBzHWr1eZ4vaSjwrqB8FOf
I7n31JvjbNjpUHIlDUJPnROzaDbHw1TV29X/+/vXTmfVgA5z/PlJ4N6lWzTg
+Gho8rCXiOfEQAKHCw0aT8od+jZkjmnCDR4yajRI2r7DZ3acGM/IounwZhqI
HB+7q7dgjoVjn3wncuZhmLsh4+Qfc7xpmR8kdHYenr0rLbpHb4EBzh9BUGMe
lDgjW0dYLHAyrnjx7ec5WC71H+fYaoHuz623zIbNwTs3pzW1bRZYJPRUm8ts
DgxLZIUjBS2wztU2t71mFuyP1HvKK1pgYEnZXdXqGRBgKb3oeMACO30UG4PC
Z6D3VUZEMFjgn5sD3X0mM+C10T+/0cgCH6harTvwfRou5W1funDYAi2njupw
10xB2uqhWx9uWqCmaehyQtsEuDzRTxwPt0DZ+hwPB88JkLDal8t91wJXgjvi
Ly2OQ0EGXa17sgXuWc12ntkxDlUm6Tys+RYY+0cysdZ3FIYShjNtWi0w0S2B
Y8xpCB5sDf18rMsCdyl8Yq7aMATkUInh0/0W2LMxY9tA7iBUBXhJRE9a4Get
58PTawNQK0WjutFb4qKV78fm/H7Iddd3m1xniR6D6R4xR/rhZno87SyjJerc
uXXpAkc/aO5U5rnBYomNyuE3353rg2fMAZR0bkvsk2t4UmbRC7f0vwxLbrfE
eUPD/Wc39oLL9e3nC3ZYosQXuiK19z3At1ycULnLEtk+v3cdUumBsJGl1i4J
SyRzCNPbyHeD+5eLh/g0LdHzXt/lsYx20F7/YyIdiU6zqHh5QqEdBJDvipSO
JbYeeu6Q9qkNGl+XPjhgaIm5v2rNVol6WTDLuu+9sSW2bLlnmXSjFSL2HXpn
ZGaJhwQfPajlbwUP72cWvyws0YEUsO3e6xbQfbLaRSFZ4u24FgceuxYQ7DPz
7baxRLvIs2nuTC2wIvCAzsPOEnk+PMlQ+dwMjQ6TUb/tiXgtUkS/xTZDQbym
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
       "]]},
     Annotation[#, "Charting`Private`Tag$83029#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Critical\"", TraditionalForm], None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {{{0, 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39, 
        FormBox["\"Oct\"", TraditionalForm]}, {52, 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0, 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39, 
        FormBox["\"Oct\"", TraditionalForm]}, {52, 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}}}, {{Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {{{0., 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39., 
        FormBox["\"Oct\"", TraditionalForm]}, {52., 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}, {{0., 
        FormBox["\"Jan\\n2020\"", TraditionalForm]}, {12.857142857142858`, 
        FormBox["\"Apr\"", TraditionalForm]}, {25.857142857142858`, 
        FormBox["\"July\"", TraditionalForm]}, {39., 
        FormBox["\"Oct\"", TraditionalForm]}, {52., 
        FormBox["\"Jan\\n2021\"", TraditionalForm]}}}}],
  GridLines->{{}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7934460980332727`*^9, 3.793446136522884*^9}, 
   3.793446410789082*^9, 3.793446948533244*^9, 3.793447062548545*^9, 
   3.793447106173595*^9, 3.793447139888754*^9, {3.7934618171374197`*^9, 
   3.793461876052273*^9}, 3.793461948906311*^9, {3.793461998856566*^9, 
   3.7934620191467113`*^9}, 3.7934623480706882`*^9, {3.7934624057905407`*^9, 
   3.7934624191384983`*^9}, {3.7934624892715187`*^9, 3.793462572784232*^9}, 
   3.7934626081882143`*^9, {3.79346304116936*^9, 3.79346306769261*^9}, {
   3.793463605972706*^9, 3.793463608244369*^9}, 3.7934636643824368`*^9, 
   3.793463767910952*^9, 3.7934638054439707`*^9, 3.793468501054042*^9, {
   3.793468620502207*^9, 3.793468649683608*^9}, 3.793468764148728*^9, {
   3.7934688184911137`*^9, 3.793468824976618*^9}, 3.793469064483392*^9, 
   3.793529283224814*^9, 3.79352976660352*^9, {3.793529808064931*^9, 
   3.7935299423135157`*^9}, {3.793530275129277*^9, 3.7935302905404873`*^9}, 
   3.79353219772922*^9, {3.7935382497864513`*^9, 3.793538270647333*^9}, 
   3.7936177418045073`*^9, 3.793628690380476*^9, 3.793631370827993*^9, 
   3.7936324375436974`*^9, 3.793632619118083*^9, 3.793632899431884*^9, 
   3.793633152520237*^9, 3.793633214401867*^9, 3.793634386681821*^9, 
   3.793634841531983*^9, 3.79363514358226*^9, 3.793640120212351*^9, 
   3.7936402258547163`*^9, 3.793706389733778*^9, 3.793709340969892*^9, 
   3.793717684920456*^9, 3.793717913356843*^9, 3.793718185643073*^9, 
   3.793718277042473*^9, 3.7937195487728767`*^9, 3.7938014013480473`*^9, 
   3.793801482368095*^9, 3.79380157862766*^9, 3.793801645761726*^9, 
   3.793801750805458*^9, 3.794507038023286*^9, 3.794507505337178*^9, 
   3.7945075515763187`*^9, 3.794507670998404*^9, 3.794513121391416*^9, 
   3.794513188001883*^9, 3.794515041605945*^9, 3.794515325395565*^9, 
   3.794568659461896*^9, 3.794569025134241*^9, 3.794576704468235*^9, 
   3.794578160970941*^9, 3.7945784483634043`*^9, 3.794579378150769*^9, 
   3.794579507343731*^9, 3.795513851359559*^9, 3.795513899088735*^9, 
   3.7955145555199842`*^9, 3.795515778938057*^9, {3.795516181338719*^9, 
   3.795516189598895*^9}},
 CellLabel->
  "Out[1400]=",ExpressionUUID->"a63eaaba-9598-463f-bd2d-fab0315ea87c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpnsmoreICU", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"10000", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"CCq", "[", "t", "]"}], "/.", "sol60bpnsprevmoreICU"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"10000", "*", "sf", "*", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ISq", "[", "t", "]"}], "+", 
          RowBox[{"IHq", "[", "t", "]"}], " ", "+", " ", 
          RowBox[{"ICq", "[", "t", "]"}]}], "/.", "sol60bpnsprevmoreICU"}], 
        "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "2.4"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "sf"}], ")"}], "*", "#"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"FindDivisions", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"PlotRange", "[", "figcritprevbpnsmoreICUtemp", "]"}], 
             "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            "5"}], "]"}]}], ",", " ", "All"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dateticks", ",", " ", "Automatic"}], "}"}]}], "}"}]}], ",", 
    " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]}], ",", 
    " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "fs"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "None", ",", "\"\<Prevalence per 10K\>\"", ",", "None", ",", " ", 
       "\"\<Critical cases per 10K\>\""}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", " ", "Black"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", ".000089", "*", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", "  ", 
         
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevonmoreICU"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"10000", "*", "sf", "*", "thresholdprevoffmoreICU"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"Black", ",", " ", "Dashed", ",", " ", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7934461917708607`*^9, 3.7934462838598347`*^9}, {
   3.793446322446604*^9, 3.7934463225391617`*^9}, {3.793446417493855*^9, 
   3.793446493716259*^9}, {3.793446527768334*^9, 3.79344668076748*^9}, {
   3.793446762278329*^9, 3.7934467828855133`*^9}, {3.793446951803142*^9, 
   3.793446955141111*^9}, {3.79344707334725*^9, 3.793447099371722*^9}, {
   3.793447159075315*^9, 3.7934471754116783`*^9}, {3.7934472158450813`*^9, 
   3.793447223477141*^9}, {3.79344729650998*^9, 3.793447304161545*^9}, {
   3.793447499123787*^9, 3.7934475264506483`*^9}, {3.7934618795755053`*^9, 
   3.793461889980399*^9}, 3.793462004628837*^9, {3.7934620364212713`*^9, 
   3.79346203990898*^9}, {3.7934624225659227`*^9, 3.7934624372262497`*^9}, {
   3.79346305953295*^9, 3.793463072999475*^9}, {3.793463614556497*^9, 
   3.793463639026314*^9}, {3.793463688190838*^9, 3.793463699529416*^9}, {
   3.793468506492344*^9, 3.793468512241255*^9}, {3.7934690521791267`*^9, 
   3.7934690528079863`*^9}, {3.793529951989105*^9, 3.79352995227308*^9}, {
   3.793538296607723*^9, 3.793538349702276*^9}, {3.793632211990872*^9, 
   3.793632213131914*^9}, 3.793706396683765*^9, {3.793709344977947*^9, 
   3.793709358141308*^9}, {3.793717875513443*^9, 3.7937178862232656`*^9}},
 CellLabel->
  "In[1401]:=",ExpressionUUID->"e31fcd2a-6d44-4a21-98fc-aca5abfddb4a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
iyw4Gmlqbv/TEm3C1z/2I/hl/6vlys2/ifqciUh9S2hTjtb1BjRL5D56eeDs
JRaoYdzfilFL/Hfob050FAu2Rlr1Kkxb4nG9Yy2j4SxY+WpV412WJbb1Ka95
SfR/9tL7IpEFS9QROeXHHUTEA9eSkrissCFv+v1rLyKeCPvg5XxWWPIiY+cy
FyKel2tdzgtY4VJ1wlinHQsKlz6TGOuskH1f66mBIQvSIE02QNgK29y0Tc12
ETwXsUfgzxYrPOf2SndOggUBLzfN7JO0wu74z8KH17LAeelbV7ucFa5Mr35x
aZEJxpBZZ6Zshf9ShwVODDNhy8vNcRraVmjMP9TWUscE/qWfxx4aWOGNg7JX
TIn6Mw1u7pE0tsL0TvOe8kSCF+rEt6+1s8Lnd4dnwvcz4Xyd9LNRDyv0PP/X
b4DKAL9Fau4RPyuMzR4d7GlmwF6DwujuY1aoMR+ssK6QASp18nYtZ62Qo+fH
FjMvBvTVqlDzkqyw/KnR6KfuWXi3MNkmet0KV8UNql2omoVn+uWPk7Ot8MGO
+11FybOQXKseHnGfWGfs0Usg+MOwVnvDgRdWmJ920NWxeAbyXhgZrqMTerPF
lyde0yBffNdKYYzIz7mPJ5fjNJRlcu4xnrZCipzkjIHINLwIfukdPG+FHz6+
uOrTNgUdqrpXu9dYo1ZV03lBlSngvafWdVfbGgfV6Te/TUxAQmry7+cG1vhd
fP5SPPG9WRc1OdxhZI0TNeOML04TsNWtZGGZrTXOPePnCHo9Dpoi8pL+7taY
v2lPyfc7Y/BieaziRW9rTNfrXaPlMgaGTJpGboA1xuYHrXgqNAa2X+6Zfwy2
xuN9Eq22KaPgfXX70V3x1ujUybGVlDEC42GRZ6yTrPGQnOEuXpcROOXXG+mZ
bo0XqKJNxhIjEGmWm5pxyxpTFy9MOz4ZhmWa8zll+YQ/8s/5d50fhgSpA/db
H1ijeoxMX4HlMNzgFKn+98QaFwvKknzpQ7B18szrDdXWKDyQ+Liuegjyezrb
lOqsccXIYfrzhCEoe57W49ZijfYr7OKf7R4CzaIZWsh7axSL8nZ8QcyrL26Q
p5I/W+PnNNWh//s9o/X0Gp6Gn9ZodUShaOIOHew9jgn8+m2NY7ZmJs8j6dBJ
/rCJSbXGgr+fRrQPE/M1SUl89ag1St7KVvc3okO/SsIOuSlr9E8YeGYrSwef
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
       "]]},
     Annotation[#, "Charting`Private`Tag$83105#1"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
xy9DgVlnvOfB5tIdy6OJ5vhCNEm7OH0etu8JOHo71RyNYm5WHm+fh/afzmde
ZZgj11oY211uGqSdNwrpyDbHGwk1geJEP++6W/4+Y545cqZuTbYLoYFk9Y6c
fa/M8YO7VMH6FzSY9F9XSnljjnrPVwPP/qBBgeB49bVyc3x4pn+au4MG5741
dOV8MMfd61jlZPtooH6mbLr+izmyn524NNZF1HOBzHWr1eZ4vaSjwrqB8FOf
I7n31JvjbNjpUHIlDUJPnROzaDbHw1TV29X/+/vXTmfVgA5z/PlJ4N6lWzTg
+Gho8rCXiOfEQAKHCw0aT8od+jZkjmnCDR4yajRI2r7DZ3acGM/IounwZhqI
HB+7q7dgjoVjn3wncuZhmLsh4+Qfc7xpmR8kdHYenr0rLbpHb4EBzh9BUGMe
lDgjW0dYLHAyrnjx7ec5WC71H+fYaoHuz623zIbNwTs3pzW1bRZYJPRUm8ts
DgxLZIUjBS2wztU2t71mFuyP1HvKK1pgYEnZXdXqGRBgKb3oeMACO30UG4PC
Z6D3VUZEMFjgn5sD3X0mM+C10T+/0cgCH6harTvwfRou5W1funDYAi2njupw
10xB2uqhWx9uWqCmaehyQtsEuDzRTxwPt0DZ+hwPB88JkLDal8t91wJXgjvi
Ly2OQ0EGXa17sgXuWc12ntkxDlUm6Tys+RYY+0cysdZ3FIYShjNtWi0w0S2B
Y8xpCB5sDf18rMsCdyl8Yq7aMATkUInh0/0W2LMxY9tA7iBUBXhJRE9a4Get
58PTawNQK0WjutFb4qKV78fm/H7Iddd3m1xniR6D6R4xR/rhZno87SyjJerc
uXXpAkc/aO5U5rnBYomNyuE3353rg2fMAZR0bkvsk2t4UmbRC7f0vwxLbrfE
eUPD/Wc39oLL9e3nC3ZYosQXuiK19z3At1ycULnLEtk+v3cdUumBsJGl1i4J
SyRzCNPbyHeD+5eLh/g0LdHzXt/lsYx20F7/YyIdiU6zqHh5QqEdBJDvipSO
JbYeeu6Q9qkNGl+XPjhgaIm5v2rNVol6WTDLuu+9sSW2bLlnmXSjFSL2HXpn
ZGaJhwQfPajlbwUP72cWvyws0YEUsO3e6xbQfbLaRSFZ4u24FgceuxYQ7DPz
7baxRLvIs2nuTC2wIvCAzsPOEnk+PMlQ+dwMjQ6TUb/tiXgtUkS/xTZDQbym
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
       "]]},
     Annotation[#, "Charting`Private`Tag$83105#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Prevalence per 10K\"", TraditionalForm], 
     FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 2], 0.5], 
       FormBox["\"25.\"", TraditionalForm]}, {1, 
       FormBox["\"50.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 2], 1.5], 
       FormBox["\"75.\"", TraditionalForm]}, {2, 
       FormBox["\"100.\"", TraditionalForm]}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.5, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.5\"", 0.5`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.0\"", 1.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.5, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.5\"", 1.5`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"2.0\"", 2.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{1.7799999999999998`, {
       GrayLevel[0], 
       Opacity[1]}}, {1.4000000000000001`, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.4, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 2.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7934462183922*^9, 3.793446262635705*^9}, 
   3.793446322861353*^9, {3.793446417955284*^9, 3.793446493969702*^9}, {
   3.793446528220602*^9, 3.7934466811191187`*^9}, {3.793446762960642*^9, 
   3.793446783185998*^9}, 3.7934469583619823`*^9, {3.793447077418531*^9, 
   3.7934471077778254`*^9}, {3.7934471626694593`*^9, 3.793447176249228*^9}, {
   3.793447220612138*^9, 3.793447223788662*^9}, 3.7934473045057087`*^9, {
   3.7934475125474377`*^9, 3.793447526798827*^9}, 3.793461894648978*^9, 
   3.793461954811411*^9, {3.793462025917428*^9, 3.793462051362706*^9}, {
   3.7934624165193977`*^9, 3.793462437537854*^9}, {3.793462489379582*^9, 
   3.793462572943308*^9}, 3.793462608295115*^9, 3.793463073451934*^9, {
   3.7934636214960127`*^9, 3.793463699918407*^9}, {3.79346376440827*^9, 
   3.79346376988308*^9}, 3.793463805573547*^9, 3.79346851319989*^9, {
   3.79346862065024*^9, 3.793468649807746*^9}, 3.793468764258175*^9, 
   3.793468826592022*^9, 3.793469064588636*^9, 3.7935292834068537`*^9, 
   3.79352976668906*^9, {3.7935298081718893`*^9, 3.7935299525646677`*^9}, {
   3.793530275214665*^9, 3.793530290660701*^9}, 3.7935321998961363`*^9, {
   3.7935382500095463`*^9, 3.793538270776973*^9}, {3.7935383186980743`*^9, 
   3.793538350088092*^9}, 3.793617741944303*^9, 3.793628690509836*^9, 
   3.793631370955662*^9, 3.793632213465222*^9, 3.793632437655604*^9, 
   3.793632619354067*^9, 3.793632899566637*^9, 3.793633152650743*^9, 
   3.793633214507358*^9, 3.793634386804269*^9, 3.793634841640366*^9, 
   3.79363514371541*^9, 3.793640120294117*^9, 3.7936402259345703`*^9, {
   3.7937063915804853`*^9, 3.793706397254778*^9}, 3.793709358562379*^9, 
   3.793717685077854*^9, {3.793717876127532*^9, 3.7937179134764*^9}, 
   3.7937181857979097`*^9, 3.7937182772014914`*^9, 3.793719548895088*^9, 
   3.793801401508336*^9, 3.793801482507049*^9, 3.7938015787801037`*^9, 
   3.793801645890503*^9, 3.793801750964737*^9, 3.7945070381585903`*^9, 
   3.794507505414393*^9, 3.79450755165725*^9, 3.794507671079335*^9, 
   3.794513121533935*^9, 3.794513188179587*^9, 3.7945150418469143`*^9, 
   3.7945153255093317`*^9, 3.7945686595558577`*^9, 3.794569025303363*^9, 
   3.7945767046424017`*^9, 3.79457816110443*^9, 3.7945784485594473`*^9, 
   3.7945793783490953`*^9, 3.7945795074729767`*^9, 3.7955138515299253`*^9, 
   3.795513899194481*^9, 3.795514555768981*^9, 3.795515779057891*^9, {
   3.7955161814613113`*^9, 3.795516189750452*^9}},
 CellLabel->
  "Out[1401]=",ExpressionUUID->"fb31aad5-7ebf-418a-a768-d477477869cd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fignpibpnsmoreICU", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"10", "*", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"npi", "[", "t", "]"}]}], "/.", "sol60bpnsprevmoreICU"}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", " ", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", 
        RowBox[{"Opacity", "[", "0", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.79344727493867*^9, 3.793447275672996*^9}, {
  3.7934625847549*^9, 3.793462585031742*^9}, {3.793463088769895*^9, 
  3.793463091558565*^9}, {3.793463731240335*^9, 3.7934637317780437`*^9}, {
  3.793463834924958*^9, 3.793463837569601*^9}, {3.793468518598464*^9, 
  3.793468521174193*^9}},
 CellLabel->
  "In[1402]:=",ExpressionUUID->"5d641761-cd73-415a-90c0-a034d1d805f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpnsnpimoreICU", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"figcritprevbpnsmoreICU", ",", " ", "fignpibpnsmoreICU"}], "}"}],
     ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"PlotRange", "[", "figcritprevbpnsmoreICU", "]"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "ar"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "imsz"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793446704447353*^9, 3.793446711536757*^9}, {
  3.793446744118206*^9, 3.793446750009528*^9}, {3.793446976069807*^9, 
  3.793446978955377*^9}, {3.793447262748226*^9, 3.7934472636613283`*^9}, {
  3.793461917634132*^9, 3.793461928547559*^9}, {3.793463093975984*^9, 
  3.793463097176322*^9}, {3.793463150716834*^9, 3.793463154325522*^9}, {
  3.793463735931305*^9, 3.793463762176955*^9}, {3.7934685250249233`*^9, 
  3.793468532220965*^9}, {3.793632220984662*^9, 3.793632224737013*^9}, {
  3.793633166344995*^9, 3.7936331685680523`*^9}},
 CellLabel->
  "In[1403]:=",ExpressionUUID->"ad113f68-b1ad-4eaa-8ace-4cbd1aa53894"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
iyw4Gmlqbv/TEm3C1z/2I/hl/6vlys2/ifqciUh9S2hTjtb1BjRL5D56eeDs
JRaoYdzfilFL/Hfob050FAu2Rlr1Kkxb4nG9Yy2j4SxY+WpV412WJbb1Ka95
SfR/9tL7IpEFS9QROeXHHUTEA9eSkrissCFv+v1rLyKeCPvg5XxWWPIiY+cy
FyKel2tdzgtY4VJ1wlinHQsKlz6TGOuskH1f66mBIQvSIE02QNgK29y0Tc12
ETwXsUfgzxYrPOf2SndOggUBLzfN7JO0wu74z8KH17LAeelbV7ucFa5Mr35x
aZEJxpBZZ6Zshf9ShwVODDNhy8vNcRraVmjMP9TWUscE/qWfxx4aWOGNg7JX
TIn6Mw1u7pE0tsL0TvOe8kSCF+rEt6+1s8Lnd4dnwvcz4Xyd9LNRDyv0PP/X
b4DKAL9Fau4RPyuMzR4d7GlmwF6DwujuY1aoMR+ssK6QASp18nYtZ62Qo+fH
FjMvBvTVqlDzkqyw/KnR6KfuWXi3MNkmet0KV8UNql2omoVn+uWPk7Ot8MGO
+11FybOQXKseHnGfWGfs0Usg+MOwVnvDgRdWmJ920NWxeAbyXhgZrqMTerPF
lyde0yBffNdKYYzIz7mPJ5fjNJRlcu4xnrZCipzkjIHINLwIfukdPG+FHz6+
uOrTNgUdqrpXu9dYo1ZV03lBlSngvafWdVfbGgfV6Te/TUxAQmry7+cG1vhd
fP5SPPG9WRc1OdxhZI0TNeOML04TsNWtZGGZrTXOPePnCHo9Dpoi8pL+7taY
v2lPyfc7Y/BieaziRW9rTNfrXaPlMgaGTJpGboA1xuYHrXgqNAa2X+6Zfwy2
xuN9Eq22KaPgfXX70V3x1ujUybGVlDEC42GRZ6yTrPGQnOEuXpcROOXXG+mZ
bo0XqKJNxhIjEGmWm5pxyxpTFy9MOz4ZhmWa8zll+YQ/8s/5d50fhgSpA/db
H1ijeoxMX4HlMNzgFKn+98QaFwvKknzpQ7B18szrDdXWKDyQ+Liuegjyezrb
lOqsccXIYfrzhCEoe57W49ZijfYr7OKf7R4CzaIZWsh7axSL8nZ8QcyrL26Q
p5I/W+PnNNWh//s9o/X0Gp6Gn9ZodUShaOIOHew9jgn8+m2NY7ZmJs8j6dBJ
/rCJSbXGgr+fRrQPE/M1SUl89ag1St7KVvc3okO/SsIOuSlr9E8YeGYrSwef
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
        "]]},
      Annotation[#, "Charting`Private`Tag$83105#1"]& ], 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
xy9DgVlnvOfB5tIdy6OJ5vhCNEm7OH0etu8JOHo71RyNYm5WHm+fh/afzmde
ZZgj11oY211uGqSdNwrpyDbHGwk1geJEP++6W/4+Y545cqZuTbYLoYFk9Y6c
fa/M8YO7VMH6FzSY9F9XSnljjnrPVwPP/qBBgeB49bVyc3x4pn+au4MG5741
dOV8MMfd61jlZPtooH6mbLr+izmyn524NNZF1HOBzHWr1eZ4vaSjwrqB8FOf
I7n31JvjbNjpUHIlDUJPnROzaDbHw1TV29X/+/vXTmfVgA5z/PlJ4N6lWzTg
+Gho8rCXiOfEQAKHCw0aT8od+jZkjmnCDR4yajRI2r7DZ3acGM/IounwZhqI
HB+7q7dgjoVjn3wncuZhmLsh4+Qfc7xpmR8kdHYenr0rLbpHb4EBzh9BUGMe
lDgjW0dYLHAyrnjx7ec5WC71H+fYaoHuz623zIbNwTs3pzW1bRZYJPRUm8ts
DgxLZIUjBS2wztU2t71mFuyP1HvKK1pgYEnZXdXqGRBgKb3oeMACO30UG4PC
Z6D3VUZEMFjgn5sD3X0mM+C10T+/0cgCH6harTvwfRou5W1funDYAi2njupw
10xB2uqhWx9uWqCmaehyQtsEuDzRTxwPt0DZ+hwPB88JkLDal8t91wJXgjvi
Ly2OQ0EGXa17sgXuWc12ntkxDlUm6Tys+RYY+0cysdZ3FIYShjNtWi0w0S2B
Y8xpCB5sDf18rMsCdyl8Yq7aMATkUInh0/0W2LMxY9tA7iBUBXhJRE9a4Get
58PTawNQK0WjutFb4qKV78fm/H7Iddd3m1xniR6D6R4xR/rhZno87SyjJerc
uXXpAkc/aO5U5rnBYomNyuE3353rg2fMAZR0bkvsk2t4UmbRC7f0vwxLbrfE
eUPD/Wc39oLL9e3nC3ZYosQXuiK19z3At1ycULnLEtk+v3cdUumBsJGl1i4J
SyRzCNPbyHeD+5eLh/g0LdHzXt/lsYx20F7/YyIdiU6zqHh5QqEdBJDvipSO
JbYeeu6Q9qkNGl+XPjhgaIm5v2rNVol6WTDLuu+9sSW2bLlnmXSjFSL2HXpn
ZGaJhwQfPajlbwUP72cWvyws0YEUsO3e6xbQfbLaRSFZ4u24FgceuxYQ7DPz
7baxRLvIs2nuTC2wIvCAzsPOEnk+PMlQ+dwMjQ6TUb/tiXgtUkS/xTZDQbym
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
        "]]},
      Annotation[#, "Charting`Private`Tag$83105#2"]& ]}, {}}, {
    GraphicsComplexBox[CompressedData["
1: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
JqfrD/T8H0mA6NA=
     "], {{{}, 
       {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{481, 410, 73, 103, 28, 72, 27, 129, 71, 281, 191}}], 
          PolygonBox[{{282, 349, 441, 159, 223, 38, 81, 37, 135, 80, 486, 380,
            464}}], 
          PolygonBox[{{472, 360, 450, 212, 294, 20, 64, 19, 63, 18, 124, 62, 
           280, 187, 365, 248}}], 
          PolygonBox[{{337, 374, 458, 268, 346, 150, 214, 24, 68, 23, 67, 22, 
           284, 199, 369, 258, 475}, {434, 484, 376, 460, 273, 350, 163, 227, 
           46, 86, 45, 287, 203, 370, 262, 476, 340}}], 
          PolygonBox[{{469, 336, 430, 122, 168, 60, 95, 15, 59, 14, 58, 13, 
           197, 121, 274, 167, 362, 231}}], 
          PolygonBox[{{468, 487, 382, 466, 286, 358, 202, 261, 133, 176, 77, 
           107, 32, 132, 76, 192, 106, 270, 155, 361, 219}}], 
          PolygonBox[{{91, 436, 144, 208, 11, 55, 10, 9, 54, 8, 119, 53, 184, 
           92, 482, 371, 455, 264, 342, 143, 207, 7, 118, 52, 278, 183, 364, 
           245, 471, 324, 418}}]}]}, {}, {}}, {{}, {}, 
       TagBox[
        {Opacity[0], LineBox[CompressedData["
1:eJwl1Xe8j2UYB+Bj72yKjGOv7JWRvfexs8nIyB7Zu5KdijSNNBWZUVJUZJXS
ImWlaBEt5Lo//rjO977v9zfe9/c8z+ck9h2e9ECyhISE8/5ETvcnkYPqBdxL
JZKTgpSkIjUzvK4Qh9QL6cYqfUO+5Ip+qNwqc8nKchxpOMwiOpmn5SNGc4ru
5tuownjSUpV0pKcaGTjCYjZ5T2dOkI6PGUMP11bLRlxVb6c6j+mrcE79IhPI
yEyzwnyqXkJP1ugb85f6bd5R9yU3h5nE3ebLZFW+4Ef9YLlOZpMPyr1koga3
UZPM9KIWLzGR9V7flm9iPfiQEZGu7ZL3kZcs+lmyCJ+pl9Kb2jxuVo3z6peZ
RFZmmxXlaPwGbFZ3IT37GEsf87WyCV/xt36Y3CFvl/fIyfFc1CE7dclBMdc/
l+/LQXzPMv0W2ZUM8dvFby6b8o96J/V4Ql+dn9SvMIWczDErHr9rPBf9WKdv
xr+xHtTnyVgHfla/Gmul7kX22MuxBkw1f0O241uSMzL2nvmdMpdsQG4axvNy
LO4tzoHrGdnPOE7HWsS6yeb8p36XRizX1+CC+jWmcQdzzUrE2Yj7pT+NWWFW
k4vq1+MMkoeHzErGOsRnslXdjUwMiLWVLfiaa/o9Mg7zD+yK74x1jHNKXprG
czKQZjzlei2O8Yv+AzmE9eodsjc5mKl/UyaRIs6XPh8Pq0vF98czMIjm5OcR
89Kxj+N7uJ8WrDSrza+xFrGH2aBvT8rYh/r3ZH/yxVlkCgXM58kyscdi/eIz
5co4T3JwvI+Wsc8pyBBaxb3HPiJVrJ8cIPPHuYk9EeeVRPNH5V0cVz/NUFpT
iMLMd60sJ9TPxLmgTbw2zgW/xbPEOlOEBWbl+E79LNvU3ckc6xT7XLbkunqv
HM7u2EeyHyfJwxEmc462sS8oSrs4c5zkOba73iO+jyx8wvj43DgTshU34nyS
FM+gr8Pv6o2xnhRnoVn5OL/q5xlBe0pQklKUZpHXVIj9pn6BkXSIZzWryx/q
t2IvUIbFZhU5pV7FqDgf+tb8H/uPjvEs+npcUm9ip7oPOTnERM4yL+5bdog1
IzWj4rnNC8Rayk6U5TSr6WmelQNM4Ayj49zJNsQ/wT2iczy7uj6X1Ztjf1CO
JWaV4r3qNYyhC+WpwFLXKsc9qtcylq7xG5k14E/1lthP8fvoO5Im7km/Ww6k
IEeZluzW/+aKrt0ESqPsmg==
          "]]},
        Annotation[#, "Charting`Private`Tag$83246#1"]& ]}}], {}}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 18),
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, False}},
  FrameLabel->{{
     FormBox["\"Prevalence per 10K\"", TraditionalForm], 
     FormBox["\"Critical cases per 10K\"", TraditionalForm]}, {None, None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.\"", TraditionalForm]}, {
       NCache[
        Rational[1, 2], 0.5], 
       FormBox["\"25.\"", TraditionalForm]}, {1, 
       FormBox["\"50.\"", TraditionalForm]}, {
       NCache[
        Rational[3, 2], 1.5], 
       FormBox["\"75.\"", TraditionalForm]}, {2, 
       FormBox["\"100.\"", TraditionalForm]}}, {{0., 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.5, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"0.5\"", 0.5`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.0\"", 1.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.5, 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"1.5\"", 1.5`15.954589770191003, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2., 
       FormBox[
        TagBox[
         InterpretationBox[
         "\"2.0\"", 2.`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.7, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.8, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.2, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.3, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.4, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}, {{{0, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {0, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2020\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2020", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2021\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2021", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"Jan\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104, 
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\\n\\n2022\"", FontSize -> 14, StripOnInput -> False],
             TextForm]], "InlineText"], 
         Text[
          Style["\n\n2022", FontSize -> 14]]], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        RotationBox["\"Apr\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        RotationBox["\"July\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox[
        RotationBox["\"Oct\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {0, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {39, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {52, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {91, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {104, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}, {143, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm]}}}},
  GridLines->{{}, {{1.7799999999999998`, {
       GrayLevel[0], 
       Opacity[1]}}, {1.4000000000000001`, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}, {0.4, {
       GrayLevel[0], 
       Dashing[{Small, Small}], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->700,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0., 2.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.793446723677157*^9, 3.793446785087015*^9}, 
   3.7934469801090403`*^9, 3.793447227208099*^9, {3.793447264011318*^9, 
   3.793447277456396*^9}, 3.793447311102808*^9, {3.793447516154393*^9, 
   3.793447528874736*^9}, {3.7934619226037683`*^9, 3.7934619288630877`*^9}, 
   3.793461961164349*^9, 3.7934622036035557`*^9, 3.793462451229333*^9, {
   3.793462489491652*^9, 3.793462608413128*^9}, 3.7934626961006603`*^9, 
   3.793463101949006*^9, 3.793463162163579*^9, 3.793463772110477*^9, 
   3.79346380569412*^9, 3.793463838724552*^9, {3.793468532925724*^9, 
   3.793468536657257*^9}, {3.7934686207695312`*^9, 3.7934686499304*^9}, 
   3.7934687644040728`*^9, 3.7934688300004253`*^9, 3.793469064699635*^9, 
   3.793529283558605*^9, 3.7935297668038816`*^9, {3.793529808291574*^9, 
   3.793529927462143*^9}, 3.7935299681095943`*^9, {3.79353027535737*^9, 
   3.793530290780676*^9}, 3.793532202960617*^9, {3.793538250157241*^9, 
   3.7935382709019947`*^9}, 3.7935383645120783`*^9, 3.793617742161929*^9, 
   3.793628690649108*^9, 3.793631371132779*^9, 3.7936322250533257`*^9, 
   3.79363243775622*^9, 3.79363261969636*^9, 3.793632899709095*^9, {
   3.793633152752654*^9, 3.793633168896945*^9}, 3.7936332145956163`*^9, 
   3.793634386902039*^9, 3.79363484173254*^9, 3.793635143854876*^9, 
   3.7936401203591623`*^9, 3.793640225990679*^9, 3.79370639960987*^9, 
   3.793709362996584*^9, 3.793717685299515*^9, {3.7937178783831863`*^9, 
   3.793717913593142*^9}, 3.793718185952609*^9, 3.7937182773569517`*^9, 
   3.7937195490203867`*^9, 3.793801401636013*^9, 3.79380148268859*^9, 
   3.7938015789407997`*^9, 3.793801646044918*^9, 3.793801751141594*^9, 
   3.794507038319764*^9, 3.7945075054674797`*^9, 3.794507551717298*^9, 
   3.794507671133346*^9, 3.7945131216944647`*^9, 3.7945131883299303`*^9, 
   3.7945150421018553`*^9, 3.7945153256390543`*^9, 3.794568659613101*^9, 
   3.794569025467752*^9, 3.794576704840392*^9, 3.794578161248749*^9, 
   3.794578448772991*^9, 3.7945793785216084`*^9, 3.794579507544088*^9, 
   3.795513851709888*^9, 3.795513899301412*^9, 3.795514555950512*^9, 
   3.795515779192789*^9, {3.795516181583489*^9, 3.795516189864335*^9}},
 CellLabel->
  "Out[1403]=",ExpressionUUID->"23268703-9108-4693-832f-56e4460279e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"figcritprevbpnsnpimoreICUimm", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{"Sq", "[", "t", "]"}]}], "/.", "sol60bpnsprevmoreICU"}], 
      "]"}], "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "plotwindowlong"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"yearticks", ",", " ", "None"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",",
     " ", 
    RowBox[{"PlotRangePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "None"}], "}"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"FontSize", "\[Rule]", "22"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", "\"\<Cumulative infections\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"ImageSize", "\[Rule]", "200"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1.5"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", " ", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"baseline", "+", "amplitude"}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", 
            RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], "}"}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.793469988806632*^9, 3.7934700082683477`*^9}, {
   3.793470038526507*^9, 3.793470056914083*^9}, {3.793470274444605*^9, 
   3.7934702829037123`*^9}, {3.79347036974651*^9, 3.7934703704895077`*^9}, {
   3.793470556186792*^9, 3.7934705581514893`*^9}, {3.793529386153145*^9, 
   3.7935293878629503`*^9}, 3.7935322327817307`*^9, 3.793538393765749*^9, 
   3.793538571167437*^9, {3.793633159180678*^9, 3.7936331599583187`*^9}, {
   3.793633265520977*^9, 3.793633286211862*^9}, {3.7936344923070993`*^9, 
   3.7936345144074707`*^9}, {3.79363460462407*^9, 3.7936346233944397`*^9}, {
   3.7936346932563057`*^9, 3.793634705953627*^9}, 3.793634927183379*^9, {
   3.79363535310824*^9, 3.793635428876202*^9}, {3.793709108374894*^9, 
   3.7937091233922853`*^9}},
 CellLabel->
  "In[1404]:=",ExpressionUUID->"71e40fd0-327a-450a-9ba9-a46ef86bf4a5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
clolLHPJRZ16g+h9i/NvfW4l6N4Zx6+ZiLbbDhdeKq6EqKX4nw55iKnlaq8U
aith4LT5856PiHymWTLr2yvhErnwb0sVolK193zl10pI5gnP/9iLmOX5IFiT
owpm7qKb3BDi0N4Pa1t3VoHa2vz2d6NInBfoEV17q6Bz5Ni55BnEQF6+AcXD
VcCUIS35gFUDT9YcfSB/pAocSZ0vXGU1sCDZ4/WZF1Wg7Sh68YaiBsbf/Bbn
/6YKJAKv6D5X00A+O7VZ3+wqWCzf/b1bVwP70CxBpbwKwnVc5YyOaiDz69qt
LYNVUGi8UHMoSAPHJ6anLXiqIdFT76lpqAZukZhMlRaohtv3n54+fV8DXbO/
z/zZVw3kNvUtr55ooFNEUpmlXDV8swg+wv1WA20XZpLlTauB6+iuqTUaoS9o
uVgaUA3LfqdKdn/WQLbwUOk7QdUwFP8pQmlIA/P8RK6RwqohfcBR/vykBto7
ys75P6oGTZfUgNE1DQx8LlqknV4NXqeUtzbt18Qna5V7uajVYBl298u4pCae
bFYV/kmvBpX0/vcsspq4ciU+pai/Glh/3LADNU0Uu0Apkf5WDfHeDUk5ZE2k
f0gV8l2qhoYrRxWeXtVE/V7uT8W7a8Dy1dMfwtc1MXlrt5SYQA0MdHQnZwZp
otp5usZtkRqYlbLcXvWAYPGJ6V1SNcD71Xhm+pUmMrhGZiWp18BpMilNu0MT
7YfamC/Z18Ci/zXn1m5NDLc3Iu92qoHA9EJuu35N9Al+EJp/vAaiWRXveI1r
4h+OMmjyqIGiImnX2DVN5OoZ1fDxqQEOcUH+GQkt5P7kvfQjsgZirB1pvjJa
uGXng5xf0TUgEPQsnEVBC+m0raSpxzUgN8jzl1dDC7l0XmjUPKuBEg7bnFe6
RP3Rh9OvEmtAXyXmlIyxFpLd1HqvJdWA/aNtdB0bIv/yrc4tb2pgrIL8oM1e
C8PDN3C1pNeA98x93aMuWsjwYefSzcwaWN7TvDp6QgtdV/njpbNrIMho43tv
Ty1MPhGzk5pbA5uvGpz5e14Lx5+qHW8oqIEnKXeEg320MGiMqqZRWgMZjMxR
cbe0ULIp5D1XUw0oSGsa7AvVwkDjAla/jhoosw9kyL6vhcw2Bs+/0muA+mHl
bM1TLVTiHZVoHa2BFc8Fo1/viPX+e15pwlALJr1jLHp9Wmg7Nf4nQrkWGmh9
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
       "]]},
     Annotation[#, "Charting`Private`Tag$83388#1"]& ]}, {}},
  AspectRatio->1.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->(FontSize -> 22),
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"Cumulative infections\"", TraditionalForm], None}, {
    None, None}},
  FrameTicks->{{Automatic, {}}, {{{0, 
       FormBox[
        RotationBox["\"2020\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[31, 7], 4.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[59, 7], 8.428571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[90, 7], 12.857142857142858`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[120, 7], 17.142857142857142`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[151, 7], 21.571428571428573`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[181, 7], 25.857142857142858`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[212, 7], 30.285714285714285`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[243, 7], 34.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {39, 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[304, 7], 43.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[334, 7], 47.714285714285715`], 
       FormBox["\"\"", TraditionalForm]}, {52, 
       FormBox[
        RotationBox["\"2021\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[395, 7], 56.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[423, 7], 60.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[454, 7], 64.85714285714286], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[484, 7], 69.14285714285714], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[515, 7], 73.57142857142857], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[545, 7], 77.85714285714286], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[576, 7], 82.28571428571429], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[607, 7], 86.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {91, 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[668, 7], 95.42857142857143], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[698, 7], 99.71428571428571], 
       FormBox["\"\"", TraditionalForm]}, {104, 
       FormBox[
        RotationBox["\"2022\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {
       NCache[
        Rational[759, 7], 108.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[787, 7], 112.42857142857143`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[818, 7], 116.85714285714286`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[848, 7], 121.14285714285714`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[879, 7], 125.57142857142857`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[909, 7], 129.85714285714286`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[940, 7], 134.28571428571428`], 
       FormBox["\"\"", TraditionalForm]}, {
       NCache[
        Rational[971, 7], 138.71428571428572`], 
       FormBox["\"\"", TraditionalForm]}, {143, 
       FormBox["\"\"", TraditionalForm]}}, {}}},
  GridLines->{{}, {{0.5, {
       GrayLevel[0], 
       Opacity[1]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.99999734693878`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, None}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.793470009367878*^9, {3.7934700400693808`*^9, 3.793470057179406*^9}, 
   3.7934702833255377`*^9, 3.793470370726521*^9, 3.7934705585448427`*^9, 
   3.79352928379874*^9, 3.793529388383419*^9, 3.793529767026054*^9, {
   3.793529808539554*^9, 3.793529927720668*^9}, 3.793530244969163*^9, {
   3.793530275586074*^9, 3.793530291027587*^9}, {3.793532205628861*^9, 
   3.793532233091138*^9}, {3.793538250434671*^9, 3.793538271178636*^9}, 
   3.793538394509164*^9, 3.7935385714961557`*^9, 3.793617742565181*^9, 
   3.7936286909945917`*^9, 3.793631371582651*^9, 3.7936324380237703`*^9, 
   3.793632620281435*^9, 3.7936329000387*^9, {3.793633153015909*^9, 
   3.793633160274107*^9}, 3.7936332148388767`*^9, {3.793633269750188*^9, 
   3.7936332865265903`*^9}, 3.793634387169797*^9, {3.7936344926945744`*^9, 
   3.7936345146909037`*^9}, {3.793634605648184*^9, 3.793634623693284*^9}, {
   3.793634693595882*^9, 3.7936347062551727`*^9}, 3.793634841984968*^9, 
   3.793634927521706*^9, 3.7936351441781187`*^9, {3.7936353617426643`*^9, 
   3.793635429448123*^9}, 3.793640120735701*^9, 3.793640226212624*^9, 
   3.793709365139903*^9, 3.793717685780158*^9, 3.7937179139231873`*^9, 
   3.7937181863315573`*^9, 3.793718277744611*^9, 3.7937195493837557`*^9, 
   3.793801401949926*^9, 3.793801483046771*^9, 3.7938015793183317`*^9, 
   3.7938016463965673`*^9, 3.793801751513597*^9, 3.7945070386473017`*^9, 
   3.7945075057444553`*^9, 3.794507551981391*^9, 3.794507671442021*^9, 
   3.794513122068602*^9, 3.794513188770434*^9, 3.7945150428050127`*^9, 
   3.794515325984376*^9, 3.7945686598679237`*^9, 3.7945690260337353`*^9, 
   3.794576705260112*^9, 3.794578161613551*^9, 3.794578449223859*^9, 
   3.794579378855773*^9, 3.794579507806683*^9, 3.795513851819688*^9, 
   3.7955138993865023`*^9, 3.795514556076435*^9, 3.795515779298134*^9, {
   3.795516181737708*^9, 3.795516189963592*^9}},
 CellLabel->
  "Out[1404]=",ExpressionUUID->"d0c65b81-d81b-4ba8-ab20-2b1078637192"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1237, 851},
WindowMargins->{{4, Automatic}, {0, Automatic}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 191, 3, 53, "Subtitle",ExpressionUUID->"09369701-a40a-4536-80c3-b53fcc12cca7"],
Cell[774, 27, 7818, 175, 661, "Input",ExpressionUUID->"5a1edbe4-0fa7-421d-901f-96114b9ddb7a"],
Cell[8595, 204, 1004, 23, 115, "Input",ExpressionUUID->"94b2cc6b-ab47-4d00-a524-1fc506297f14"],
Cell[CellGroupData[{
Cell[9624, 231, 532, 14, 30, "Input",ExpressionUUID->"0f087dca-103a-46c3-87a7-8d25c808c657"],
Cell[10159, 247, 10050, 184, 256, "Output",ExpressionUUID->"b31c4cd5-8bef-483e-9ebc-3bb0a3dd5a3b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[20258, 437, 339, 5, 53, "Subtitle",ExpressionUUID->"a4f7508f-523d-4045-82a5-318b8ae8136a"],
Cell[20600, 444, 7914, 186, 493, "Input",ExpressionUUID->"ba6fb5f4-d3a0-46d3-8a1e-63954e17221f"]
}, Closed]],
Cell[CellGroupData[{
Cell[28551, 635, 339, 5, 53, "Subtitle",ExpressionUUID->"ea5ca911-5e82-4a81-92af-30b9d9768014"],
Cell[28893, 642, 7831, 185, 430, "Input",ExpressionUUID->"88064f36-9f9d-46d9-ad37-7457a57111be"]
}, Closed]],
Cell[CellGroupData[{
Cell[36761, 832, 224, 4, 53, "Subtitle",ExpressionUUID->"024317b3-0a26-4198-968a-6d33998fd1ea"],
Cell[CellGroupData[{
Cell[37010, 840, 249, 4, 54, "Subsection",ExpressionUUID->"05ef75bf-e366-441d-81aa-fd19fa802da3"],
Cell[37262, 846, 8390, 205, 556, "Input",ExpressionUUID->"81c1dc04-ab28-4ea8-bcd0-7941138ef694"]
}, Closed]],
Cell[CellGroupData[{
Cell[45689, 1056, 275, 4, 38, "Subsection",ExpressionUUID->"c85512a9-75ea-4418-bba8-d87efddbae4d"],
Cell[45967, 1062, 8418, 206, 556, "Input",ExpressionUUID->"4bcf1f91-9925-489b-b63a-9307e43f42a2"]
}, Closed]],
Cell[CellGroupData[{
Cell[54422, 1273, 272, 4, 38, "Subsection",ExpressionUUID->"2e5c5d69-9724-44e1-82d1-b132c9c01de5"],
Cell[54697, 1279, 8416, 206, 556, "Input",ExpressionUUID->"ee82f780-97c3-4c01-ae85-40c010630f90"]
}, Closed]],
Cell[CellGroupData[{
Cell[63150, 1490, 273, 4, 38, "Subsection",ExpressionUUID->"04c16f93-b29f-4d43-9c6e-dc8b760aefd1"],
Cell[63426, 1496, 8416, 206, 556, "Input",ExpressionUUID->"b1ef5604-6e55-42c5-9b9d-cb93c6d44b73"]
}, Closed]],
Cell[CellGroupData[{
Cell[71879, 1707, 275, 4, 38, "Subsection",ExpressionUUID->"6e5527e8-ffd5-4b16-b468-244d31af06a8"],
Cell[72157, 1713, 8417, 206, 556, "Input",ExpressionUUID->"fd1d0547-3dd7-4337-a8b8-0b9931250d1f"]
}, Closed]],
Cell[CellGroupData[{
Cell[80611, 1924, 273, 4, 38, "Subsection",ExpressionUUID->"6ccaf0a7-f884-4658-9642-fb889c6993f9"],
Cell[80887, 1930, 8412, 206, 556, "Input",ExpressionUUID->"6980337d-3146-45d3-93ee-f080f5712622"]
}, Closed]],
Cell[CellGroupData[{
Cell[89336, 2141, 302, 5, 38, "Subsection",ExpressionUUID->"ded59da8-cc4e-4041-88b5-db4d32a8880f"],
Cell[89641, 2148, 8419, 207, 556, "Input",ExpressionUUID->"04de3360-ba55-42a0-bc98-dbc47a297052"]
}, Closed]],
Cell[CellGroupData[{
Cell[98097, 2360, 276, 4, 38, "Subsection",ExpressionUUID->"8efd6efa-f4ce-4410-90ec-bcbd5d9e2898"],
Cell[98376, 2366, 8420, 207, 556, "Input",ExpressionUUID->"9794c8ee-4159-4fd6-872c-71463863521f"]
}, Closed]],
Cell[CellGroupData[{
Cell[106833, 2578, 301, 5, 38, "Subsection",ExpressionUUID->"df1a1acd-af92-4dbf-8f85-c0043deb7189"],
Cell[107137, 2585, 8420, 207, 556, "Input",ExpressionUUID->"478a289f-1414-4ac5-aa34-e04a7a97d04c"]
}, Closed]],
Cell[CellGroupData[{
Cell[115594, 2797, 302, 5, 38, "Subsection",ExpressionUUID->"d0f8cafb-2f38-4f37-877e-21307b91535d"],
Cell[115899, 2804, 8471, 207, 556, "Input",ExpressionUUID->"2f6f88ed-7b95-49c9-9ec6-72caedaffcea"]
}, Closed]],
Cell[CellGroupData[{
Cell[124407, 3016, 300, 5, 38, "Subsection",ExpressionUUID->"204117f0-e4f0-42a4-a90b-350ce69ba988"],
Cell[124710, 3023, 8467, 207, 556, "Input",ExpressionUUID->"a165d29f-86f9-4a29-9763-4e8d9274704e"]
}, Closed]],
Cell[CellGroupData[{
Cell[133214, 3235, 300, 5, 38, "Subsection",ExpressionUUID->"e42c4072-d7c6-4743-85d9-cda42d137711"],
Cell[133517, 3242, 8468, 207, 556, "Input",ExpressionUUID->"94cc99de-7c55-4fe3-9748-4713a8f63f4b"]
}, Closed]],
Cell[CellGroupData[{
Cell[142022, 3454, 351, 6, 38, "Subsection",ExpressionUUID->"509a499f-f5c1-45ab-b507-a9d9be8925dd"],
Cell[142376, 3462, 8580, 209, 556, "Input",ExpressionUUID->"02a6e6ae-a453-4721-acec-24f84ed522eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[150993, 3676, 319, 5, 38, "Subsection",ExpressionUUID->"7ca84a9c-07ca-40c5-8990-1b691ae25b40"],
Cell[151315, 3683, 8524, 208, 556, "Input",ExpressionUUID->"ce3a11cf-1b0c-45ab-9424-ab89094c8831"]
}, Closed]],
Cell[CellGroupData[{
Cell[159876, 3896, 321, 5, 38, "Subsection",ExpressionUUID->"b2f4e040-e7f2-4a72-bd54-3db2212ea766"],
Cell[160200, 3903, 8524, 208, 556, "Input",ExpressionUUID->"67eeafb5-1e95-4496-8f51-f8de08e09fbb"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[168773, 4117, 225, 4, 53, "Subtitle",ExpressionUUID->"3e535a7d-e664-4981-aaeb-fd3f10f12722"],
Cell[CellGroupData[{
Cell[169023, 4125, 303, 6, 54, "Subsection",ExpressionUUID->"63eaead7-b211-4524-a5a4-a2b04cb438cc"],
Cell[169329, 4133, 8415, 206, 577, "Input",ExpressionUUID->"969a0574-148c-4c12-a754-5707fd4b2132"]
}, Closed]],
Cell[CellGroupData[{
Cell[177781, 4344, 330, 6, 38, "Subsection",ExpressionUUID->"6308fb80-8f71-40c2-8b0a-8a08207d77fc"],
Cell[178114, 4352, 8465, 206, 556, "Input",ExpressionUUID->"53cfedf5-a5c1-4c7e-be2f-976514796433"]
}, Closed]],
Cell[CellGroupData[{
Cell[186616, 4563, 329, 6, 38, "Subsection",ExpressionUUID->"dd7901e3-ae40-42b6-a2ed-f46d5b5403d7"],
Cell[186948, 4571, 8492, 207, 556, "Input",ExpressionUUID->"d46b915b-9bdb-444d-a584-36186f3fbd95"]
}, Closed]],
Cell[CellGroupData[{
Cell[195477, 4783, 301, 5, 38, "Subsection",ExpressionUUID->"a41136ac-a441-465d-ab5b-8941f66569ad"],
Cell[195781, 4790, 8463, 206, 556, "Input",ExpressionUUID->"e0593f63-0363-4c9e-a95b-54eca7a055cc"]
}, Closed]],
Cell[CellGroupData[{
Cell[204281, 5001, 306, 5, 38, "Subsection",ExpressionUUID->"55de51f9-40a0-4f0e-846c-0b3e0d3a0241"],
Cell[204590, 5008, 8466, 206, 556, "Input",ExpressionUUID->"7bdadf65-b798-4a61-8bd4-cb159234d166"]
}, Closed]],
Cell[CellGroupData[{
Cell[213093, 5219, 302, 5, 38, "Subsection",ExpressionUUID->"db3ac752-069e-44b6-bbe1-9bd2b07b6ea1"],
Cell[213398, 5226, 8460, 206, 556, "Input",ExpressionUUID->"288bc563-3896-4f3d-b6de-08b7031f7146"]
}, Closed]],
Cell[CellGroupData[{
Cell[221895, 5437, 330, 6, 38, "Subsection",ExpressionUUID->"bf92baa9-f836-4a88-bb7d-6caf0aa4db7d"],
Cell[222228, 5445, 8468, 207, 556, "Input",ExpressionUUID->"1665882a-4c99-4a86-8b6c-589772cd9dee"]
}, Closed]],
Cell[CellGroupData[{
Cell[230733, 5657, 305, 5, 38, "Subsection",ExpressionUUID->"2c08ad03-8a4f-4462-b4ab-7f75d016dea2"],
Cell[231041, 5664, 8467, 207, 556, "Input",ExpressionUUID->"05bbd0d5-a145-4b0f-9929-a7b3a01a85fc"]
}, Closed]],
Cell[CellGroupData[{
Cell[239545, 5876, 331, 6, 38, "Subsection",ExpressionUUID->"f2b2cf96-e44c-4b83-a8ae-08d8ae329509"],
Cell[239879, 5884, 8467, 207, 556, "Input",ExpressionUUID->"cd6b1e53-d5c7-449a-970f-a8cbe364b27a"]
}, Closed]],
Cell[CellGroupData[{
Cell[248383, 6096, 330, 6, 38, "Subsection",ExpressionUUID->"c7bbfab6-d2f8-4b94-b82e-1f1427d808b7"],
Cell[248716, 6104, 8470, 207, 556, "Input",ExpressionUUID->"93945525-de21-4008-977e-25436e1cb19a"]
}, Closed]],
Cell[CellGroupData[{
Cell[257223, 6316, 328, 6, 38, "Subsection",ExpressionUUID->"a978eabe-32e8-42b4-b1b5-d34ffa2ae7ed"],
Cell[257554, 6324, 8468, 207, 556, "Input",ExpressionUUID->"e779c737-9acd-424a-af4b-b82b1ca78e3f"]
}, Closed]],
Cell[CellGroupData[{
Cell[266059, 6536, 328, 6, 38, "Subsection",ExpressionUUID->"43fe1cf5-ff02-4f05-aca2-34af01ceccef"],
Cell[266390, 6544, 8468, 207, 556, "Input",ExpressionUUID->"13b19e4c-60d2-474d-b0c6-361922fa2557"]
}, Closed]],
Cell[CellGroupData[{
Cell[274895, 6756, 374, 6, 38, "Subsection",ExpressionUUID->"7bb3930c-d7cf-4365-adc1-b44c655b92fa"],
Cell[275272, 6764, 8528, 208, 556, "Input",ExpressionUUID->"5f76aa0e-e647-4741-86f7-16a39279a752"]
}, Closed]],
Cell[CellGroupData[{
Cell[283837, 6977, 348, 6, 38, "Subsection",ExpressionUUID->"93535e75-de2d-49fe-b084-93e5e8afcba1"],
Cell[284188, 6985, 8525, 208, 556, "Input",ExpressionUUID->"8f7a4077-3946-40c4-84c4-6fbf782192df"]
}, Closed]],
Cell[CellGroupData[{
Cell[292750, 7198, 349, 6, 38, "Subsection",ExpressionUUID->"270b7dc3-f8f4-4eb9-8956-2d028bbaf592"],
Cell[293102, 7206, 8524, 208, 556, "Input",ExpressionUUID->"0fd67d0f-b031-488c-838d-659f8f33ec05"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[301675, 7420, 270, 4, 53, "Subtitle",ExpressionUUID->"2d6bdb1d-206c-410f-a512-f824a5f77f31"],
Cell[CellGroupData[{
Cell[301970, 7428, 292, 6, 54, "Subsection",ExpressionUUID->"f11a4143-2cc7-4361-9e69-a56df4613883"],
Cell[302265, 7436, 9091, 217, 514, "Input",ExpressionUUID->"5912de60-ccfb-4aca-928a-507dc0c01502"]
}, Closed]],
Cell[CellGroupData[{
Cell[311393, 7658, 264, 5, 38, "Subsection",ExpressionUUID->"5f3408e4-77e7-46d3-87f2-a55e567d97d4"],
Cell[311660, 7665, 9062, 217, 514, "Input",ExpressionUUID->"ae5e6d7c-444f-4553-a759-7b318b9ea6fd"]
}, Closed]],
Cell[CellGroupData[{
Cell[320759, 7887, 292, 6, 38, "Subsection",ExpressionUUID->"7dc97490-353a-44ce-947d-e70684c21072"],
Cell[321054, 7895, 9113, 217, 514, "Input",ExpressionUUID->"10cca3f5-d542-4b7f-be6a-dd69a2c966fe"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[330216, 8118, 319, 5, 53, "Subtitle",ExpressionUUID->"45878dea-1187-4aaa-b1fb-f2ae8c6234f1"],
Cell[CellGroupData[{
Cell[330560, 8127, 292, 6, 54, "Subsection",ExpressionUUID->"8ac052f6-1b06-4dd6-a5db-73c47999ba0f"],
Cell[330855, 8135, 9112, 217, 535, "Input",ExpressionUUID->"f3e9a1bc-b77b-4e4d-aed8-aed74fa5942e"]
}, Closed]],
Cell[CellGroupData[{
Cell[340004, 8357, 264, 5, 38, "Subsection",ExpressionUUID->"62dcaaad-349e-4d8f-82e1-6013f8cf4c29"],
Cell[340271, 8364, 9111, 217, 514, "Input",ExpressionUUID->"30536401-bc8a-4fc7-b6f4-0c580e504ea3"]
}, Closed]],
Cell[CellGroupData[{
Cell[349419, 8586, 292, 6, 38, "Subsection",ExpressionUUID->"beb8b6c2-16c4-4401-a7f2-c24eaa030c0d"],
Cell[349714, 8594, 9161, 218, 535, "Input",ExpressionUUID->"0445709a-0ac0-46bc-b2a9-a0c75f39b60c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[358924, 8818, 447, 9, 53, "Subtitle",ExpressionUUID->"e83919e8-8f42-4151-8be8-d3788bc09a8f"],
Cell[CellGroupData[{
Cell[359396, 8831, 292, 6, 54, "Subsection",ExpressionUUID->"105c4671-e33f-45fc-ae71-e4cb02ec4af1"],
Cell[359691, 8839, 9253, 219, 514, "Input",ExpressionUUID->"3833431f-2d37-43eb-84e9-c76de8126780"]
}, Closed]],
Cell[CellGroupData[{
Cell[368981, 9063, 264, 5, 38, "Subsection",ExpressionUUID->"5a9c2e41-c8de-4352-8dc4-3eaf741f36c2"],
Cell[369248, 9070, 9195, 218, 514, "Input",ExpressionUUID->"8abf43c7-38ec-4b24-88e5-a62293df0b28"]
}, Closed]],
Cell[CellGroupData[{
Cell[378480, 9293, 292, 6, 38, "Subsection",ExpressionUUID->"5a9d05af-0055-4cb1-84bb-d2e475b8167b"],
Cell[378775, 9301, 9252, 219, 514, "Input",ExpressionUUID->"e863c40b-8957-4b3e-8759-d73625d7f745"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[388076, 9526, 496, 9, 53, "Subtitle",ExpressionUUID->"b3e97d72-ce3d-492d-ac35-dc2b49b6816f"],
Cell[CellGroupData[{
Cell[388597, 9539, 292, 6, 54, "Subsection",ExpressionUUID->"5d94df65-4b13-4800-ab22-9cbc3e3101dc"],
Cell[388892, 9547, 9276, 219, 556, "Input",ExpressionUUID->"07ccce30-8004-443c-9806-89f638d3d7fe"]
}, Closed]],
Cell[CellGroupData[{
Cell[398205, 9771, 264, 5, 38, "Subsection",ExpressionUUID->"1a211dd8-a399-465d-92b0-d8e943d3377b"],
Cell[398472, 9778, 9249, 219, 514, "Input",ExpressionUUID->"e849e9b8-10c4-4cdb-82bf-f6e20a4f69f3"]
}, Closed]],
Cell[CellGroupData[{
Cell[407758, 10002, 292, 6, 38, "Subsection",ExpressionUUID->"0c5bd496-9b9a-4ef7-b229-75221cc70fbc"],
Cell[408053, 10010, 9305, 220, 514, "Input",ExpressionUUID->"27e9f744-f4b7-4e18-b049-74d9b6914180"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[417407, 10236, 224, 3, 53, "Subtitle",ExpressionUUID->"fcdf9f99-84b0-4924-997a-66b71fe20028"],
Cell[417634, 10241, 11421, 325, 808, "Input",ExpressionUUID->"d4d78a62-6b29-4e89-8fec-b38415772c9e"],
Cell[429058, 10568, 9440, 273, 745, "Input",ExpressionUUID->"d984799f-77bb-473e-b240-ec4ed24ae07c"],
Cell[438501, 10843, 281, 6, 30, "Input",ExpressionUUID->"5a67e6f2-2673-4edb-863b-eb53beae7f39"],
Cell[438785, 10851, 222, 5, 30, "Input",ExpressionUUID->"d5fb40ba-6fa9-43a0-a530-ed2f38654ad2"]
}, Closed]],
Cell[CellGroupData[{
Cell[439044, 10861, 288, 7, 53, "Subtitle",ExpressionUUID->"bad07a47-3663-4ff2-8983-51230dc7e381"],
Cell[439335, 10870, 1915, 49, 262, "Input",ExpressionUUID->"7847d581-a966-432d-bda7-2334bef0738c"],
Cell[CellGroupData[{
Cell[441275, 10923, 159, 3, 54, "Subsection",ExpressionUUID->"8885a657-5961-420f-92b5-b157ca6b4b32"],
Cell[441437, 10928, 284, 6, 30, "Input",ExpressionUUID->"0051520e-2c4d-4458-bd6d-05e0da871762"],
Cell[CellGroupData[{
Cell[441746, 10938, 7088, 175, 430, "Input",ExpressionUUID->"ac0ff69a-2c3a-4bb3-ba12-7208d11793c5"],
Cell[448837, 11115, 117364, 2072, 332, "Output",ExpressionUUID->"80f08602-005c-475c-a692-48e8242587c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566238, 13192, 4637, 117, 325, "Input",ExpressionUUID->"b89df9ff-94e1-4d3d-9b21-59233f614601"],
Cell[570878, 13311, 55350, 1011, 325, "Output",ExpressionUUID->"4ef9efec-fbae-481b-8f9d-92c510c1fd49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626265, 14327, 7236, 176, 472, "Input",ExpressionUUID->"14a293b1-e0c0-4fb1-bac3-9a88af9f7b79"],
Cell[633504, 14505, 127540, 2240, 332, "Output",ExpressionUUID->"475d9d58-5559-4269-88eb-fecba4896127"]
}, Open  ]],
Cell[CellGroupData[{
Cell[761081, 16750, 4665, 118, 325, "Input",ExpressionUUID->"e049e1aa-3e77-4c05-a70a-89e105223be1"],
Cell[765749, 16870, 59243, 1075, 325, "Output",ExpressionUUID->"81fcff38-20cd-42ed-a259-4ec69eecaae7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[825029, 17950, 8281, 191, 430, "Input",ExpressionUUID->"1f1eb5cb-25db-4486-885a-7ae0ff7827fe"],
Cell[833313, 18143, 136934, 2394, 332, "Output",ExpressionUUID->"05a90b56-e6e6-4152-9288-6fede47f4de4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[970284, 20542, 4672, 118, 325, "Input",ExpressionUUID->"b0fa1912-129d-48af-828d-2c393c86e548"],
Cell[974959, 20662, 61130, 1106, 325, "Output",ExpressionUUID->"e308b59c-06a3-49f5-8dd6-02253322f2c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1036126, 21773, 8305, 192, 430, "Input",ExpressionUUID->"b135be89-c533-4ba0-881a-bc4fced6d582"],
Cell[1044434, 21967, 139608, 2437, 332, "Output",ExpressionUUID->"3a367513-4077-4a4f-8059-9d6274a86e61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1184079, 24409, 4672, 118, 325, "Input",ExpressionUUID->"c3187c95-ab92-4c0e-9a9f-3728f6618ec2"],
Cell[1188754, 24529, 61757, 1116, 325, "Output",ExpressionUUID->"bf93f6b1-678e-4131-8d3e-5e975d32ee0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1250548, 25650, 8411, 193, 430, "Input",ExpressionUUID->"1d82f6c4-ef1f-4d56-a927-f1acb5103798"],
Cell[1258962, 25845, 127405, 2236, 332, "Output",ExpressionUUID->"8bb54005-20c9-40e2-bd5f-d098a1ecf15f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1386404, 28086, 4725, 118, 325, "Input",ExpressionUUID->"26c3de44-d3c3-4bf3-94ce-92bf09f2b87f"],
Cell[1391132, 28206, 48203, 893, 325, "Output",ExpressionUUID->"9aa1eac6-ec6b-42c3-b16b-b56971f8a3f6"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1439396, 29106, 335, 7, 53, "Subtitle",ExpressionUUID->"734efbb9-fc72-4a34-a684-07747c56999e"],
Cell[1439734, 29115, 1822, 46, 241, "Input",ExpressionUUID->"2ecd6b9a-1caf-4a54-a09d-e5e286f38b72"],
Cell[CellGroupData[{
Cell[1441581, 29165, 159, 3, 54, "Subsection",ExpressionUUID->"f2bae07f-31d2-483e-84ed-cbf1528a3f31"],
Cell[1441743, 29170, 284, 6, 30, "Input",ExpressionUUID->"7d276d10-358b-4bff-9570-ae55a9a4187f"],
Cell[CellGroupData[{
Cell[1442052, 29180, 5893, 150, 388, "Input",ExpressionUUID->"d9271d4f-9bc2-4cc7-9e2e-549f7ff66ba9"],
Cell[1447948, 29332, 138249, 2315, 263, "Output",ExpressionUUID->"6ca55252-1cfa-4d56-a0d4-29c29cecb1db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1586234, 31652, 7327, 180, 430, "Input",ExpressionUUID->"3139220f-e672-4010-9304-575f6f384d3f"],
Cell[1593564, 31834, 168022, 2902, 320, "Output",ExpressionUUID->"bd83b546-0120-4ed3-9262-ab483fd2c70e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1761623, 34741, 4673, 118, 325, "Input",ExpressionUUID->"ef879b92-f6fe-440c-9a0b-f07a8ae7822a"],
Cell[1766299, 34861, 67255, 1207, 325, "Output",ExpressionUUID->"bb7b9f3b-a802-484b-81ff-71dd7739e277"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1833591, 36073, 7297, 177, 472, "Input",ExpressionUUID->"e27f10e4-e7b2-4460-ad54-c0e92c2a2abd"],
Cell[1840891, 36252, 160053, 2773, 322, "Output",ExpressionUUID->"312e1614-adcd-4192-b5aa-b82c58528d35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2000981, 39030, 4716, 118, 325, "Input",ExpressionUUID->"67297af8-df19-4ec3-ae07-215f89cd8a7c"],
Cell[2005700, 39150, 68918, 1234, 325, "Output",ExpressionUUID->"2edc48bd-41f9-4355-b19a-3f99d7a02e84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2074655, 40389, 8362, 192, 430, "Input",ExpressionUUID->"4c550921-597f-481f-9b4e-2f7a7e43a153"],
Cell[2083020, 40583, 150856, 2620, 322, "Output",ExpressionUUID->"b57bda5d-91d6-4601-b2fc-9c70989a3053"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2233913, 43208, 4726, 118, 325, "Input",ExpressionUUID->"3b46cd33-ec6f-4e3c-821e-0d5bfcc8735c"],
Cell[2238642, 43328, 69035, 1235, 325, "Output",ExpressionUUID->"bb00bce4-c46a-43e9-9565-dbceee9f5c80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2307714, 44568, 7261, 181, 430, "Input",ExpressionUUID->"a8f11ed5-353c-46ed-95c8-505ef1bbaf59"],
Cell[2314978, 44751, 146600, 2550, 322, "Output",ExpressionUUID->"4bcbb298-d3ab-44c8-bdce-4cddf367246c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2461615, 47306, 4724, 118, 325, "Input",ExpressionUUID->"8a053f24-3e8f-40a1-b1fb-28dab0f4d6e0"],
Cell[2466342, 47426, 65313, 1174, 325, "Output",ExpressionUUID->"89325c83-f4cc-4029-a265-f2a949107491"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2531692, 48605, 7295, 181, 430, "Input",ExpressionUUID->"9a735253-a053-4f3a-ba97-38d470fe7bc2"],
Cell[2538990, 48788, 132496, 2319, 322, "Output",ExpressionUUID->"42b388c2-fa4d-4fea-910b-6f579b008a4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2671523, 51112, 4780, 119, 325, "Input",ExpressionUUID->"4b8e4eb4-26ab-4e84-b8cb-fe26a22f8af6"],
Cell[2676306, 51233, 61676, 1114, 325, "Output",ExpressionUUID->"8fcdbf27-4d4b-47ec-a1e8-40b1affe18c4"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2738043, 52354, 333, 5, 53, "Subtitle",ExpressionUUID->"c9af2cbe-9773-401c-93eb-15eff50a9365"],
Cell[2738379, 52361, 330, 7, 30, "Input",ExpressionUUID->"5e1022f4-99d4-4421-8e2e-28b3348558fb"],
Cell[CellGroupData[{
Cell[2738734, 52372, 3869, 91, 220, "Input",ExpressionUUID->"b0c623bc-8870-4664-9ffe-49c404268b9d"],
Cell[2742606, 52465, 71795, 1208, 467, "Output",ExpressionUUID->"1dc1e387-7a01-4e19-b73d-ec5bed4ec247"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2814438, 53678, 4378, 104, 199, "Input",ExpressionUUID->"6c6f23df-a7c0-4d48-8560-cc977492224e"],
Cell[2818819, 53784, 78827, 1434, 334, "Output",ExpressionUUID->"b3026925-9e5f-4027-8ef8-1bd45bb5de53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2897683, 55223, 3733, 97, 199, "Input",ExpressionUUID->"edbfc412-277b-4cfc-81c3-55bc3a69e7f7"],
Cell[2901419, 55322, 81257, 1509, 334, "Output",ExpressionUUID->"11e0d76b-b8b0-4c54-a4e5-5424f47666fd"]
}, Open  ]],
Cell[2982691, 56834, 849, 23, 30, "Input",ExpressionUUID->"24b44674-a498-40b4-a201-950c5d746f2f"],
Cell[CellGroupData[{
Cell[2983565, 56861, 1009, 18, 30, "Input",ExpressionUUID->"27cf9651-c4d9-4c53-b7c4-4d445d96fa3e"],
Cell[2984577, 56881, 93280, 1707, 245, "Output",ExpressionUUID->"e14b6a70-59df-42a1-a3a9-ef3636dab655"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3077894, 58593, 2603, 62, 115, "Input",ExpressionUUID->"8b9a39fc-1864-4f3d-853a-5b2f1d4edfec"],
Cell[3080500, 58657, 30423, 557, 285, "Output",ExpressionUUID->"a20b3eef-b2b2-4ebc-8cc2-ed4ce74ee79b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3110972, 59220, 312, 5, 53, "Subtitle",ExpressionUUID->"ffb64e72-1023-4c3e-8a8b-ad3295a94570"],
Cell[3111287, 59227, 330, 7, 30, "Input",ExpressionUUID->"674e98f7-34aa-4fbe-b040-9e153e0e5e59"],
Cell[CellGroupData[{
Cell[3111642, 59238, 3915, 92, 220, "Input",ExpressionUUID->"1d428b43-73d0-4dfc-a5be-12edb24e11dd"],
Cell[3115560, 59332, 68109, 1151, 474, "Output",ExpressionUUID->"13d0400e-64c4-41f4-8763-9f087ac9dab7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3183706, 60488, 4382, 105, 199, "Input",ExpressionUUID->"369cc1a6-821d-4e57-8477-f21aeffea94f"],
Cell[3188091, 60595, 74578, 1365, 334, "Output",ExpressionUUID->"ea3cee42-50b4-4539-9ee5-ae20a0fba408"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3262706, 61965, 3606, 94, 199, "Input",ExpressionUUID->"ffd57634-773d-4c3c-a4a5-f2f78b8bffb3"],
Cell[3266315, 62061, 77304, 1444, 334, "Output",ExpressionUUID->"ac9f53c7-87bc-477d-99f2-ea2df9170e39"]
}, Open  ]],
Cell[3343634, 63508, 871, 23, 30, "Input",ExpressionUUID->"594a9b9d-1b3a-4f05-bc43-e425766e2d9d"],
Cell[CellGroupData[{
Cell[3344530, 63535, 958, 18, 30, "Input",ExpressionUUID->"be195f5c-f1ce-46b2-9956-2602ec25a0cf"],
Cell[3345491, 63555, 88600, 1630, 245, "Output",ExpressionUUID->"f3472466-a7ce-414a-aea6-2016e07aaafd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3434128, 65190, 2537, 63, 115, "Input",ExpressionUUID->"43930179-0943-453a-b5db-bb5744eb0bb3"],
Cell[3436668, 65255, 27650, 512, 285, "Output",ExpressionUUID->"f1686dfa-36dc-4ce2-b703-4aef52819d84"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3464367, 65773, 397, 7, 53, "Subtitle",ExpressionUUID->"d47a6526-1f94-4b8b-a84d-dda18ae3abc0"],
Cell[3464767, 65782, 330, 7, 30, "Input",ExpressionUUID->"a56ee9a7-d402-419d-a7b5-1c92bb4108a5"],
Cell[CellGroupData[{
Cell[3465122, 65793, 6346, 154, 388, "Input",ExpressionUUID->"e7752dae-944e-4795-90f5-12da7452a853"],
Cell[3471471, 65949, 59723, 1013, 476, "Output",ExpressionUUID->"adea0244-b772-44e2-a0a0-ba392674daea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3531231, 66967, 4772, 111, 199, "Input",ExpressionUUID->"45c50cc2-107f-4554-8dd0-f35e91269e4a"],
Cell[3536006, 67080, 68154, 1285, 317, "Output",ExpressionUUID->"9bb7b8cc-d963-4f6b-8213-e9068f3ce22a"]
}, Open  ]],
Cell[3604175, 68368, 960, 24, 30, "Input",ExpressionUUID->"88b779d0-70a2-4c9d-be0f-fc36223e7b24"],
Cell[CellGroupData[{
Cell[3605160, 68396, 1036, 19, 52, "Input",ExpressionUUID->"7fcad488-1f61-458c-acff-b3c831b1ac1f"],
Cell[3606199, 68417, 74355, 1391, 244, "Output",ExpressionUUID->"e242e18b-d3c1-43d0-bce8-fb56d3aa8166"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3680591, 69813, 2551, 62, 115, "Input",ExpressionUUID->"d578bce6-46c9-47a5-a0e4-abe3b4cc03b1"],
Cell[3683145, 69877, 23528, 444, 285, "Output",ExpressionUUID->"8684d4d0-5062-47af-b4c8-78d1a40a1274"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3706722, 70327, 451, 8, 53, "Subtitle",ExpressionUUID->"7c18f829-e1fd-4396-91ab-eac6eed125b1"],
Cell[3707176, 70337, 330, 7, 30, "Input",ExpressionUUID->"991a87e4-6c35-4a77-8d03-bf342fa19f2b"],
Cell[CellGroupData[{
Cell[3707531, 70348, 4147, 96, 220, "Input",ExpressionUUID->"88eac4b8-e830-4e3e-b137-a27439758ad9"],
Cell[3711681, 70446, 56388, 958, 477, "Output",ExpressionUUID->"a63eaaba-9598-463f-bd2d-fab0315ea87c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3768106, 71409, 4841, 112, 199, "Input",ExpressionUUID->"e31fcd2a-6d44-4a21-98fc-aca5abfddb4a"],
Cell[3772950, 71523, 66626, 1258, 317, "Output",ExpressionUUID->"fb31aad5-7ebf-418a-a768-d477477869cd"]
}, Open  ]],
Cell[3839591, 72784, 1011, 25, 30, "Input",ExpressionUUID->"5d641761-cd73-415a-90c0-a034d1d805f3"],
Cell[CellGroupData[{
Cell[3840627, 72813, 1091, 20, 52, "Input",ExpressionUUID->"ad113f68-b1ad-4eaa-8ace-4cbd1aa53894"],
Cell[3841721, 72835, 74282, 1388, 244, "Output",ExpressionUUID->"23268703-9108-4693-832f-56e4460279e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3916040, 74228, 2840, 66, 115, "Input",ExpressionUUID->"71e40fd0-327a-450a-9ba9-a46ef86bf4a5"],
Cell[3918883, 74296, 23462, 442, 285, "Output",ExpressionUUID->"d0c65b81-d81b-4ba8-ab20-2b1078637192"]
}, Open  ]]
}, Closed]]
}
]
*)

